$Version=2$
plugin_menu_act_logins "widget/component-decl"
    {
    width=216;
    height=142;
    type = "User";
    sql = " -- Basic updates for the user's status.
	    declare collection ud;

	    declare collection c_member scope application;
	    delete collection c_member;
	    insert collection c_member select * from /apps/kardia/data/Kardia_DB/c_member/rows ;

	    exec /apps/kardia/modules/base/record_login_history.qy ;

	    insert
		    collection ud
	    select
		    *
	    from
		    /apps/kardia/data/Kardia_DB/s_user_data/rows
	    ;

	    -- Users who are not currently online
	    insert
		collection activity
	    select
		p_partner_key = :s:p_partner_key,
		activitydate = (select :h:s_last_seen from /apps/kardia/data/Kardia_DB/s_user_loginhistory/rows h where :h:s_username = :ud:s_username order by :h:s_last_seen desc limit 1),
		e_reference_info = :ud:s_username,
		menuname = condition(:ud:s_username = user_name(), 'Me', 'User'),
		is_online = 0,
		menutitle = isnull(isnull(condition(char_length(isnull(:p:p_org_name,'')) > 1, :p:p_org_name, condition(char_length(:p:p_preferred_name) > 1, :p:p_preferred_name, :p:p_given_name) + ' ' + :p:p_surname), :ux:description), :ud:s_username),
		menudesc = isnull(:ud:s_status, ''),
		cnt = (	select
			    isnull(sum(sum(1)),0),
			    :m1:c_chat_id
			from
			    collection c_member m1,
			    collection c_member m2,
			    /apps/kardia/data/Kardia_DB/c_message/rows msg
			where
			    :m1:s_username = user_name() and
			    :m2:s_username = :s:p_kardia_login and
			    :m1:c_chat_id = :m2:c_chat_id and
			    :msg:c_chat_id = :m1:c_chat_id and
			    isnull(:m1:c_last_read_message_id,0) < :msg:c_message_id
			group by
			    :m1:c_chat_id
			having
			    ((select count(1) from collection c_member m3 where :m3:c_chat_id = :this:c_chat_id) = condition(:s:p_kardia_login = user_name(), 1, 2))
			),
		e_whom = :s:p_partner_key,
		e_initiation = 'C',
		active_staff = :s:p_is_staff
	    from
		/apps/kardia/data/Kardia_DB/p_staff/rows s,
		/apps/kardia/data/Kardia_DB/p_partner/rows p,
		/apps/kardia/data/Users.uxu ux,
		collection ud ud
	    where
		:p:p_partner_key = :s:p_partner_key and
		:ud:s_username *= :s:p_kardia_login and
		:s:p_is_staff = 1 and
		:ux:name =* :ud:s_username
	    group by
		:ud:s_username
	    having
		(select count(1) from /sys/cx.sysinfo/session/apps a where :a:username = :this:e_reference_info) = 0 and
		datediff(day, :this:activitydate, getdate()) <= 366 and
		:active_staff is not null
	    ;

	    -- Who is online on the CRM system
	    insert
		collection activity
	    select
		p_partner_key = :s:p_partner_key,
		activitydate = max(:a:last_activity),
		e_reference_info = :a:username,
		menuname = condition(:a:username = user_name(), 'Me', 'User'),
		is_online = 1,
		menutitle = isnull(isnull(condition(char_length(isnull(:p:p_org_name,'')) > 1, :p:p_org_name, condition(char_length(:p:p_preferred_name) > 1, :p:p_preferred_name, :p:p_given_name) + ' ' + :p:p_surname), :ux:description), :ud:s_username),
		menudesc = isnull(:ud:s_status, ''),
		cnt = (	select
			    isnull(sum(sum(1)),0),
			    :m1:c_chat_id
			from
			    collection c_member m1,
			    collection c_member m2,
			    /apps/kardia/data/Kardia_DB/c_message/rows msg
			where
			    :m1:s_username = user_name() and
			    :m2:s_username = :a:username and
			    :m1:c_chat_id = :m2:c_chat_id and
			    :msg:c_chat_id = :m1:c_chat_id and
			    isnull(:m1:c_last_read_message_id,0) < :msg:c_message_id
			group by
			    :m1:c_chat_id
			having
			    ((select count(1) from collection c_member m3 where :m3:c_chat_id = :this:c_chat_id) = condition(:a:username = user_name(), 1, 2))
			),
		e_whom = :s:p_partner_key,
		e_initiation = 'C'
	    from
		/sys/cx.sysinfo/session/apps a,
		/apps/kardia/data/Kardia_DB/p_staff/rows s,
		/apps/kardia/data/Kardia_DB/p_partner/rows p,
		/apps/kardia/data/Users.uxu ux,
		collection ud ud
	    where
		:s:p_kardia_login =* :a:username and
		:p:p_partner_key = :s:p_partner_key and
		:ud:s_username =* :a:username and
		:ux:name =* :a:username
	    group by
		:a:username
	    having
		:activitydate is not null
	    ;

	    update
		collection activity a
	    set
		:shortdate = substring(convert(string,:activitydate),1,11),
		:textdate = condition(datediff(minute,:activitydate,getdate()) = 0, 'now',
			    condition(datediff(minute,:activitydate,getdate()) = 1, '' + 'a minute ago', 
			    condition(datediff(minute,:activitydate,getdate()) < 60, '' + datediff(minute,:activitydate,getdate()) + ' minutes ago', 
			    condition(datediff(minute,:activitydate,getdate()) < 120, 'an hour ago', 
			    condition(datediff(minute,:activitydate,getdate()) < 720, '' + (datediff(minute,:activitydate,getdate()) / 60) + ' hours ago', 
			    condition(datediff(day,:activitydate,getdate()) = 1, 'yesterday', 
			    condition(datediff(minute,:activitydate,getdate()) < 1440, '' + (datediff(minute,:activitydate,getdate()) / 60) + ' hours ago', 
			    condition(datediff(day,:activitydate,getdate()) < 7, '' + datediff(day,:activitydate,getdate()) + ' days ago', 

			    substring(convert(string,:activitydate),1,11)
			    )))))))),
		:menudesc = condition(isnull(:menudesc, '') = '' or :menudesc = ' ', '', :menudesc + '\n') + condition(:is_online = 1, 'Online, active ', 'Last online ') + :textdate,
		:menuicon = isnull((select
					path = :d:e_current_folder + '/' + :d:e_current_filename
				    from
					/apps/kardia/data/Kardia_DB/e_partner_document/rows pd,
					/apps/kardia/data/Kardia_DB/e_document/rows d,
					/apps/kardia/data/Kardia_DB/e_document_type/rows dt
				    where
					:pd:p_partner_key = :a:p_partner_key and
					:pd:e_document_id = :d:e_document_id and
					:d:e_doc_type_id = :dt:e_doc_type_id and
					:dt:e_doc_type_label = 'Profile Photo'
				    order by
					:pd:s_date_modified desc
				    limit
					1
				    ), '/apps/kardia/images/artwork/persona.png')
	    where
		:a:menuname = 'User' or :a:menuname = 'Me'
	    ";

    menu_osrc "widget/parameter" { type=object; find_container="widget/osrc"; }
    t_rowdetail_chat "widget/parameter" { type=object; find_container="widget/table-row-detail"; }

    prev_lastrecord "widget/variable" { type=integer; }
    prev_source "widget/variable" { type=string; }

    t_chat_osrc "widget/osrc"
	{
	sql = "	select
		    :c:img,
		    :c:message_txt,
		    :c:date_txt,
		    :c:is_hdr,
		    :c:c_chat_id,
		    :c:is_new,
		    :c:is_not_seen,
		    :c:name,
		    :p:p_partner_key,
		    partner_name = condition(char_length(isnull(:p:p_org_name,'')) > 1, :p:p_org_name, condition(char_length(:p:p_preferred_name) > 1, :p:p_preferred_name, :p:p_given_name) + ' ' + :p:p_surname)
		from
		    identity /apps/kardia/modules/crm/chat.qy c,
		    /apps/kardia/data/Kardia_DB/p_partner/rows p
		where
		    :p:p_partner_key =* condition(charindex('#', :c:message_txt) > 0, convert(string, convert(integer, substring(:c:message_txt, charindex('#', :c:message_txt) + 1))), null)
		";
	baseobj="/apps/kardia/modules/crm/chat.qy";
	autoquery=never;
	readahead=40;
	replicasize=40;
	refresh_interval=10000;

	//chat_change_focus1 "widget/connector" { source=menu_osrc; event=DataFocusChanged; event_condition=runclient(:t_rowdetail_chat:is_visible); target=prev_lastrecord; action=SetValue; Value=0; }
	chat_change_focus1 "widget/connector" { source=t_rowdetail_chat; event=Open; target=prev_lastrecord; action=SetValue; Value=0; }
	chat_change_focus2 "widget/connector" { source=t_rowdetail_chat; event=Open; event_condition=runclient(:prev_source:value != "/apps/kardia/modules/crm/chat.qy?focus_user=" + :menu_osrc:e_reference_info); target=t_chat_table; action=Clear; }
	//chat_change_focus2 "widget/connector" { source=menu_osrc; event=DataFocusChanged; event_condition=runclient(:menu_osrc:menuname = 'User'); action=Clear; }
	//chat_change_focus3 "widget/connector" { source=menu_osrc; event=DataFocusChanged; event_condition=runclient(:t_rowdetail_chat:is_visible and :menu_osrc:menuname = 'User'); action=ChangeSource; Source=runclient("/apps/kardia/modules/crm/chat.qy?focus_user=" + :menu_osrc:e_reference_info); }
	chat_change_focus3 "widget/connector" { source=t_rowdetail_chat; event=Open; event_condition=runclient(:menu_osrc:menuname = 'User'); action=ChangeSource; Source=runclient("/apps/kardia/modules/crm/chat.qy?focus_user=" + :menu_osrc:e_reference_info); }
	chat_change_focus4 "widget/connector" { source=t_rowdetail_chat; event=Open; event_condition=runclient(:menu_osrc:menuname = 'User'); target=prev_source; action=SetValue; Value=runclient("/apps/kardia/modules/crm/chat.qy?focus_user=" + :menu_osrc:e_reference_info); }

	scroll_end_on_load "widget/connector" { event_condition=runclient(:LastRecord != isnull(:prev_lastrecord:value,0)); event=EndQuery; target=t_chat_osrc; action=Last; }
	save_last_rec "widget/connector" { event=EndQuery; target=prev_lastrecord; action=SetValue; Value=runclient(:LastRecord); }

	t_chat_table "widget/table"
	    {
	    x=0; y=0; width=216; height=110;
	    fl_x=0;
	    min_rowheight=16;
	    max_rowheight=72;
	    allow_selection = no;
	    show_selection = no;
	    initial_selection = yes;
	    demand_scrollbar = yes;
	    overlap_scrollbar = yes;
	    titlebar = no;
	    colsep = 0;
	    row_border_radius=4;
	    inner_padding = 2;
	    cellvspacing = 0;
	    textcolor=white;
	    row1_bgcolor=runclient(condition(:t_chat_osrc:is_new, '#7eaaff', '#6688cc'));
	    row2_bgcolor=runclient(condition(:t_chat_osrc:is_new, '#7eaaff', '#6688cc'));
	    nodata_message="No messages yet.";
	    nodata_message_textcolor="#f0f0f0";
	    rowcache_size=40;

	    t_chat_img "widget/table-column" { type=image; width=30; fieldname=img; image_maxheight=22; image_maxwidth=22; align=center; }
	    t_chat_text "widget/table-column" { width=166; fieldname=message_txt; wrap=yes; font_size=10; style=runclient(condition(:t_chat_osrc:is_hdr, 'bold', 'plain')); caption_value=runclient(:t_chat_osrc:date_txt + condition(:t_chat_osrc:is_not_seen, ' (not seen)', '')); caption_font_size=10; caption_style=italic; caption_textcolor="#e0e0e0"; }

	    // Open a partner if we see the partner ID and '#' in the chat message.
	    //on_click_ref "widget/connector"
	//	{
	//	event=Click;
	//	event_condition=runclient(:p_partner_key is not null);
	//	target=activity_list;
	//	action=PartnerSelected;
	//	partner_key = runclient(:p_partner_key);
	//	}
	    }

	t_chat_newosrc "widget/osrc"
	    {
	    sql = "select * from /apps/kardia/data/Kardia_DB/c_message/rows c";
	    baseobj = "/apps/kardia/data/Kardia_DB/c_message/rows";
	    autoquery=never;

	    t_chat_form "widget/form"
		{
		allow_modify=no;
		allow_view=no;
		allow_new=yes;
		allow_query=no;
		allow_obscure=yes;

		new_chatid_osrc "widget/osrc"
		    {
		    new_chatid_whom "widget/parameter" { type=string; }
		    sql = " declare collection c_member scope application;
			    delete collection c_member;
			    insert collection c_member select * from /apps/kardia/data/Kardia_DB/c_member/rows ;

			    select
				:c:c_chat_id
			    from
				collection c_member m1,
				collection c_member m2,
				/apps/kardia/data/Kardia_DB/c_chat/rows c
			    where
				:m1:s_username = user_name() and
				:m2:s_username = :parameters:new_chatid_whom and
				:c:c_chat_id = :m1:c_chat_id and
				:m1:c_chat_id = :m2:c_chat_id
			    having
				((select count(1) from collection c_member m3 where :m3:c_chat_id = :this:c_chat_id) = condition(:parameters:new_chatid_whom = user_name(), 1, 2))
			    ";
		    readahead=2;
		    replicasize=2;
		    autoquery=never;

		    got_the_id "widget/connector" { event=EndQuery; target=chat_id; action=SetValue; Value=runclient(:new_chatid_osrc:c_chat_id); }
		    }

		on_save_refresh_list "widget/connector" { event=DataSaved; target=t_chat_osrc; action=Refresh; }
		on_save_set_focus "widget/connector" { event=DataSaved; target=t_chat_editbox; action=SetFocus; }

		on_new_get_the_id "widget/connector" { event=New; event_delay=0.1; target=new_chatid_osrc; action=QueryParam; new_chatid_whom=runclient(:menu_osrc:e_reference_info); }

		t_chat_editbox "widget/editbox"
		    {
		    x=0; y=118; width=216; height=24;
		    fieldname=c_message;
		    empty_description="type a new message here";
		    }
		chat_id "widget/variable" { fieldname=c_chat_id; chat_id_hints "widget/hints" { default=runclient(:t_chat_osrc:c_chat_id); } }
		chat_new_meta "widget/component" { path="/apps/kardia/modules/base/record_metadata_hidden.cmp"; }
		}
	    }
	}
    }
