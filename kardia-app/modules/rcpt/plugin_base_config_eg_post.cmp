$Version=2$
plugin_base_config_eg "widget/component-decl"
    {
    width=828;
    height=490;
    title = "EG Post Process";
    description = "Configure post processing options for online giving.  To set up integration with an online giving service, see the service-specific configuration tab.";
    sequence = 680;

    vbox "widget/vbox"
	{
	x=0; y=0;
	width=828; height=490;
	spacing=7;

	ledger_lbl "widget/label" { height=16; style=bold; text="Accounting Ledger Selection:"; }

	ledger_osrc "widget/osrc"
	    {
	    sql = "select :name, label=:a_ledger_number + ' - ' + :a_ledger_desc, :a_ledger_number from /apps/kardia/data/Kardia_DB/a_ledger/rows";

	    ledger_dd "widget/dropdown"
		{
		height=24; width=300;
		mode=objectsource;
		fieldname=label;
		numdisplay=12;
		}
	    }

	sep1 "widget/autolayoutspacer" { height=1; }

	config_osrc "widget/osrc"
	    {
	    a_ledger_number "widget/parameter" { type=string; }
	    sql = "select * from object expression('/apps/kardia/modules/gl/accounting_config.qyp/' + :parameters:a_ledger_number)";

	    config_link "widget/rule"
		{
		ruletype=osrc_relationship;
		target=ledger_osrc;
		key_1=a_ledger_number;
		target_key_1=a_ledger_number;
		}

	    config_form "widget/form"
		{
		allow_query=no;
		eg_label_1 "widget/label" { height=16; style=bold; text="Import Plug-ins: you can enable and disable import plugins below."; }
		import_plugins_rpt "widget/repeat"
		    {
		    sql = "select path = :m:cx__pathname, module = :m:cx__pathpart4, component = :m:cx__pathpart5, :m:module_code, :m:module_sequence, :m:module_desc, :m:module_config_cmp, :c:height from object wildcard '/apps/kardia/modules/*/plugin_rcpt_importprocess_*.qy?ls__type=system%2fstructure' m, object expression (:m:module_config_cmp + '?ls__type=system%2fstructure') c order by :m:module_sequence asc";

		    one_import_ckbox "widget/component" { path="/sys/cmp/smart_field.cmp"; height=24; field=runserver("EgImpMod" + :import_plugins_rpt:module_code); text=runserver(:import_plugins_rpt:module_desc); label_width=150; ctl_type=checkboxleft; oic_hints "widget/hints" { style=notnull; } }

		    import_config_cmp "widget/component" { condition=runserver(char_length(:import_plugins_rpt:module_config_cmp) > 1); path=runserver(:import_plugins_rpt:module_config_cmp); height=runserver(:import_plugins_rpt:height); }
		    }
		eg_lable_2 "widget/label" { height=15; text="Set the designation that indicates a payment needs to be split into multiple transactions"; }
		eg_donorsplitdesig "widget/component" { path="/sys/cmp/smart_field.cmp"; height=24; field="EgSplitDesig"; text="Designation UUID to split:"; width=450; label_width=150; ctl_type=editbox; }
		eg_label_3 "widget/label" { height=15; text="Set the designation that indicates a payment is a fee that needs split (when enabled above) (NOTE: currently unused)"; }
		eg_donorpaiddesig "widget/component" { path="/sys/cmp/smart_field.cmp"; height=24; field="EgFeesDesig"; text="Fee designation to split:"; width=450; label_width=150; ctl_type=editbox; }
		eg_label_4 "widget/label" { height=15; text="List exceptions to mixed casing as a comma seperated list. Use * for common prefixes/suffixes"; }
		eg_label_5 "widget/label" { height=15; text="(Example: to make 'and' lowercase and names starting with 'Mc' capitalize properly, use the following: and,Mc*)"; }
		rcpt_ahbox "widget/hbox"
		    {
		    height=24; spacing=10;
		    eg_name_execpt "widget/component" { path="/sys/cmp/smart_field.cmp"; height=24; field="EG_NameExcept"; text="Name Exceptions:"; width=400; label_width=120; ctl_type=editbox; }
		    eg_addr_execpt "widget/component" { path="/sys/cmp/smart_field.cmp"; height=24; field="EG_AddrExcept"; text="Address Exceptions:"; width=400; label_width=120; ctl_type=editbox; }
		    }
		}
	    }

	ctls_hbox "widget/hbox"
	    {
	    height=24;
	    align=center;
	    spacing=10;

	    save_btn "widget/textbutton"
		{
		height=24; width=130;
		text = "Save";
		enabled=runclient(:config_form:is_savable);

		on_save "widget/connector" { event=Click; target=config_form; action=Save; }
		}

	    cancel_btn "widget/textbutton"
		{
		height=24; width=130;
		text = "Cancel";
		enabled=runclient(:config_form:is_discardable);

		on_cancel "widget/connector" { event=Click; target=config_form; action=Discard; }
		}
	    }
	}
    }

