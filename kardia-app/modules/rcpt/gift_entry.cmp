$Version=2$
gift_entry "widget/component-decl"
    {
    width=980; height=680;

    ledger "widget/parameter" { type=string; default=null; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; deploy_to_client=yes; }
    batch "widget/parameter" { type=integer; default=null; deploy_to_client=yes; }
    receipt "widget/parameter" { type=string; default=null; deploy_to_client=yes; }
    by_donor "widget/parameter" { type=integer; default=0; deploy_to_client=yes; }
    receipts_rpt "widget/parameter" { type=string; default=runserver(isnull( (select :a_config_value from /apps/kardia/data/Kardia_DB/a_config/rows where :a_ledger_number = :this:ledger and :a_config_name = 'RcptReport'), "/apps/kardia/modules/rcpt/receipt_batch.rpt")); deploy_to_client=yes; }
    acks_rpt "widget/parameter" { type=string; default=runserver(isnull( (select :a_config_value from /apps/kardia/data/Kardia_DB/a_config/rows where :a_ledger_number = :this:ledger and :a_config_name = 'RcptAckReport'), "/apps/kardia/modules/rcpt/receipt_batch.rpt")); deploy_to_client=yes; }
    nc_rpt "widget/parameter" { type=string; default=runserver(isnull( (select :a_config_value from /apps/kardia/data/Kardia_DB/a_config/rows where :a_ledger_number = :this:ledger and :a_config_name = 'RcptNCReport'), "/apps/kardia/modules/rcpt/receipt_batch.rpt")); deploy_to_client=yes; }
    use_scanner "widget/parameter" { type=integer; default=runserver(convert(integer, isnull( (select :a_config_value from /apps/kardia/data/Kardia_DB/a_config/rows where :a_ledger_number = :this:ledger and :a_config_name = 'RcptEnabScanner'), "0")) and not :this:by_donor); deploy_to_client=yes; }
    stretch_cks "widget/parameter" { type=integer; default=runserver(convert(integer, isnull( (select :a_config_value from /apps/kardia/data/Kardia_DB/a_config/rows where :a_ledger_number = :this:ledger and :a_config_name = 'RcptStretchCks'), "0"))); deploy_to_client=yes; }

    last_ckno "widget/variable" { type=string; }    // Last check # scanned
    last_pkey "widget/variable" { type=string; }    // Last donor partner key scanned
    last_akey "widget/variable" { type=string; }    // Last acknowledgement partner key scanned
    last_hash "widget/variable" { type=string; }    // Last acct/routing hash scanned
    last_mighash "widget/variable" { type=string; }    // Last acct/routing migration hash scanned (for multiple donor lookup only)
    last_file "widget/variable" { type=string; }    // Last check image filename scanned

    canceled_last "widget/variable" { type=string; value=""; }

    last_scanner "widget/variable" { type=string; value='Check Scanner'; }

    doing_copy "widget/variable" { type=integer; value=0; }
    doing_new_pledge "widget/variable" { type=integer; value=0; }
    doing_automark "widget/variable" { type=integer; value=0; }

    image_reason "widget/variable" { type=string; default=""; }

    // Called when we need to refresh/reload the donor info and history sidebar
    LoadSidebar "widget/component-decl-action"
	{
	on_sidebar1 "widget/connector"
	    {
	    target=manage_osrc;
	    action=QueryParam;
	    partner=runclient(:Donor);
	    ledger=runclient(:ledger:value);
	    }
	on_sidebar2 "widget/connector"
	    {
	    target=hist_osrc;
	    action=QueryParam;
	    partner=runclient(:f_rcpt_donorid:content);
	    ackpartner=runclient(:f_rcpt_ackid:content);
	    ledger=runclient(:ledger:value);
	    }
	}

    // Called when we need to forget data from the last check scan.
    ForgetScan "widget/component-decl-action"
	{
	on_forget_scan_1 "widget/connector" { target=last_ckno; action=SetValue; Value=runclient(null); }
	on_forget_scan_2 "widget/connector" { target=last_pkey; action=SetValue; Value=runclient(null); }
	on_forget_scan_3 "widget/connector" { target=last_akey; action=SetValue; Value=runclient(null); }
	on_forget_scan_4 "widget/connector" { target=last_hash; action=SetValue; Value=runclient(null); }
	on_forget_scan_5 "widget/connector" { target=last_mighash; action=SetValue; Value=runclient(null); }
	on_forget_scan_6 "widget/connector" { target=last_file; action=SetValue; Value=runclient(null); }
	}

    // check scanner, multiple donors found.
    ScanMultipleDonors "widget/component-decl-action"
	{
	on_mul_donor_1 "widget/connector" { target=last_ckno; action=SetValue; Value=runclient(:check_number); }
	on_mul_donor_2 "widget/connector" { target=last_hash; action=SetValue; Value=runclient(:hash); }
	on_mul_donor_3 "widget/connector" { target=last_mighash; action=SetValue; Value=runclient(:mighash); }
	on_mul_donor_4 "widget/connector" { target=last_file; action=SetValue; Value=runclient(:filename); }
	on_mul_donor_5 "widget/connector" { target=popover_matching_donors; action=Open; }
	on_mul_donor_6 "widget/connector" { target=pmd_osrc; action=QueryParam; check_number=runclient(:check_number); hash=runclient(:hash); mighash=runclient(:mighash); ledger=runclient(:ledger:value); }
	on_mul_donor_7 "widget/connector"
	    {
	    event_condition=runclient((not :rcpt_form:is_discardable) and (not :desig_form:is_discardable) and (not :p_detail_form:is_discardable));
	    target=new_rcpt;
	    action=Click;
	    using_scanner=1;
	    }
	on_mul_donor_8 "widget/connector"
	    {
	    event_condition=runclient(:rcpt_form:form_mode = 'New' and (not :desig_form:is_discardable) and (not :p_detail_form:is_discardable));
	    target=f_rcpt_gifttype;
	    action=SetValue;
	    Value=runclient('K');
	    }
	}

    // check scanner, one donor found.
    ScanOneDonor "widget/component-decl-action"
	{
	on_one_donor_1 "widget/connector" { target=last_ckno; action=SetValue; Value=runclient(:check_number); }
	on_one_donor_2a "widget/connector" { target=last_pkey; action=SetValue; Value=runclient(:partner_key); }
	on_one_donor_2b "widget/connector" { target=last_akey; action=SetValue; Value=runclient(:ack_key); }
	on_one_donor_3 "widget/connector" { target=last_hash; action=SetValue; Value=runclient(:hash); }
	on_one_donor_4 "widget/connector" { target=last_file; action=SetValue; Value=runclient(:filename); }
	on_one_donor_5 "widget/connector"
	    {
	    event_condition=runclient((not :rcpt_form:is_discardable) and (not :desig_form:is_discardable) and (not :p_detail_form:is_discardable) and (isnull(:desig_form:a_account_hash, '') != :hash or :canceled_last:value = :hash));
	    target=new_rcpt;
	    action=Click;
	    using_scanner=1;
	    }
	on_one_donor_6a "widget/connector"
	    {
	    event_condition=runclient(:rcpt_form:form_mode = 'New' and isnull(:f_rcpt_donorid:content, '') = '' and (not :desig_form:is_discardable) and (not :p_detail_form:is_discardable) and (isnull(:desig_form:a_account_hash, '') != :hash or :canceled_last:value = :hash));
	    target=f_rcpt_donorid;
	    action=SetValue;
	    Value=runclient(:partner_key);
	    Description=runclient(:partner_name);
	    }
	on_one_donor_6b "widget/connector"
	    {
	    event_condition=runclient(:rcpt_form:form_mode = 'New' and isnull(:f_rcpt_ackid:content, '') = '' and (not :desig_form:is_discardable) and (not :p_detail_form:is_discardable) and :ack_key is not null and (isnull(:desig_form:a_account_hash, '') != :hash or :canceled_last:value = :hash));
	    target=f_rcpt_ackid;
	    action=SetValue;
	    Value=runclient(:ack_key);
	    Description=runclient(:ack_name);
	    }
	on_one_donor_7 "widget/connector"
	    {
	    event_condition=runclient(:rcpt_form:form_mode = 'New' and (not :desig_form:is_discardable) and (not :p_detail_form:is_discardable));
	    target=f_rcpt_gifttype;
	    action=SetValue;
	    Value=runclient('K');
	    }
	on_one_donor_8 "widget/connector"
	    {
	    event_condition=runclient((not :rcpt_form:is_discardable) and (not :desig_form:is_discardable) and (not :p_detail_form:is_discardable) and isnull(:desig_form:a_account_hash, '') = :hash and :canceled_last:value != :hash);
	    target=desig_form;
	    action=New;
	    }
	on_one_donor_9a "widget/connector"
	    {
	    event_condition=runclient(:desig_form:is_discardable and (:partner_key is null or :partner_key = :f_rcpt_donorid:content) and isnull(:ack_key, '') = isnull(:f_rcpt_ackid:content, ''));
	    target=item_hash;
	    action=SetValue;
	    Value=runclient(:hash);
	    }
	on_one_donor_9b "widget/connector"
	    {
	    event_condition=runclient(:desig_form:is_discardable and (:partner_key is null or :partner_key = :f_rcpt_donorid:content) and isnull(:ack_key, '') = isnull(:f_rcpt_ackid:content, ''));
	    target=item_file;
	    action=SetValue;
	    Value=runclient(:filename);
	    }
	on_one_donor_9c "widget/connector"
	    {
	    event_condition=runclient(:desig_form:is_discardable and (:partner_key is null or :partner_key = :f_rcpt_donorid:content) and isnull(:ack_key, '') = isnull(:f_rcpt_ackid:content, ''));
	    target=f_desig_recvdoc;
	    action=SetValue;
	    Value=runclient(:check_number);
	    }
	}

    // CTRL+n for Copy Gift selection from the Giving History list
    control_num_key_1 "widget/connector"
	{
	event=KeyDown;
	event_condition=runclient(:Code >= 49 and :Code <= 57 and :Ctrl and (:Code - 48) >= :hist_osrc:cx__first_id and (:Code - 48) <= :hist_osrc:cx__last_id and not :popover_matching_donors:is_visible);
	target=hist_osrc;
	action=FindObject;
	ID=runclient(:Code - 48);
	}
    control_num_key_2 "widget/connector"
	{
	event=KeyDown;
	event_condition=runclient(:Code >= 49 and :Code <= 57 and :Ctrl and (:Code - 48) >= :hist_osrc:cx__first_id and (:Code - 48) <= :hist_osrc:cx__last_id and not :popover_matching_donors:is_visible);
	target=hist_table;
	action=ShowSelection;
	}
    control_num_key_3 "widget/connector"
	{
	event=KeyDown;
	event_condition=runclient(:Code >= 49 and :Code <= 57 and :Ctrl and (:Code - 48) >= :hist_osrc:cx__first_id and (:Code - 48) <= :hist_osrc:cx__last_id and not :popover_matching_donors:is_visible);
	event_cancel=runclient(:Code >= 49 and :Code <= 57 and :Ctrl and (:Code - 48) >= :hist_osrc:cx__first_id and (:Code - 48) <= :hist_osrc:cx__last_id and not :popover_matching_donors:is_visible);
	target=copy_rcpt;
	action=Click;
	}

    // CTRL+n for Donor selection from the scan account matching donors list
    control_num_key_dnr_1 "widget/connector"
	{
	event=KeyDown;
	event_condition=runclient(:Code >= 49 and :Code <= 57 and :Ctrl and (:Code - 48) >= :pmd_osrc:cx__first_id and (:Code - 48) <= :pmd_osrc:cx__last_id and :popover_matching_donors:is_visible);
	target=pmd_osrc;
	action=FindObject;
	ID=runclient(:Code - 48);
	}
    control_num_key_dnr_2 "widget/connector"
	{
	event=KeyDown;
	event_condition=runclient(:Code >= 49 and :Code <= 57 and :Ctrl and (:Code - 48) >= :pmd_osrc:cx__first_id and (:Code - 48) <= :pmd_osrc:cx__last_id and :popover_matching_donors:is_visible);
	target=pmd_table;
	action=ShowSelection;
	}
    control_num_key_dnr_3 "widget/connector"
	{
	event=KeyDown;
	event_condition=runclient(:Code >= 49 and :Code <= 57 and :Ctrl and (:Code - 48) >= :pmd_osrc:cx__first_id and (:Code - 48) <= :pmd_osrc:cx__last_id and :popover_matching_donors:is_visible);
	event_cancel=runclient(:Code >= 49 and :Code <= 57 and :Ctrl and (:Code - 48) >= :pmd_osrc:cx__first_id and (:Code - 48) <= :pmd_osrc:cx__last_id and :popover_matching_donors:is_visible);
	event_delay=0.1;
	target=use_donor_btn;
	action=Click;
	}

    // CTRL+R for "New Receipt"
    ctrl_r_pressed "widget/connector"
	{
	condition = runserver(:this:by_donor == 0);
	event=KeyDown;
	event_condition=runclient(:Ctrl and :Code = 82);
	event_cancel=runclient(:Ctrl and :Code = 82);
	target=new_rcpt;
	action=Click;
	}

    copy_gift "widget/component"
	{
	path="copy_gift.cmp";

	//on_copy_1 "widget/connector" { event=Copied; target=rcpt_form; action=Discard; }
	on_copy_1 "widget/connector" { event=Copied; target=rcpt_form; action=Clear; force=1; }
	on_copy_2 "widget/connector" { event=Copied; target=desig_form; action=Clear; force=1; }
	on_copy_3 "widget/connector" { event=Copied; target=line_items_osrc; action=Invalidate; }
	on_copy_4 "widget/connector" { event=Copied; target=pledge_osrc; action=Invalidate; }
	on_copy_5 "widget/connector" { event=Copied; target=receipt; action=SetValue; Value=runclient(:a_receipt_number); }
	on_copy_6 "widget/connector" { event=Copied; target=batch_osrc; action=Refresh; } 
	on_copy_7 "widget/connector" { event=Copied; target=receipts_osrc; action=Refresh; find_object=runclient(:ledger:value + '|' + :batch:value + '|' + :a_gift_number); }
	//on_copy_8 "widget/connector" { event=Copied; target=doing_copy; action=SetValue; Value=0; }
	on_copy_9 "widget/connector" { event=Copied; target=doing_automark; action=SetValue; Value=1; }
	on_copy_10 "widget/connector" { condition=runserver(:this:use_scanner); event=Copied; target=scanner; action=UpdateUsed; }
	on_copy_11 "widget/connector" { event=Copied; target=popover_view_check; action=Close; }
	}

    prevrcpt_osrc "widget/osrc"
	{
	pr_ledger "widget/parameter" { param_name=ledger; type=string; }
	pr_receipt "widget/parameter" { param_name=receipt; type=string; }
	sql = "	select :p_donor_partner_id, :p_ack_partner_id from /apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows where :a_ledger_number = :parameters:ledger and :a_receipt_number = :parameters:receipt";
	autoquery=never;
	on_found_receipt "widget/connector"
	    {
	    event=EndQuery;
	    target=f_rcpt_donorid;
	    action=SetValue;
	    Value=runclient(:prevrcpt_osrc:p_donor_partner_id);
	    }
	on_found_receipt2 "widget/connector"
	    {
	    event=EndQuery;
	    event_condition=runclient(:prevrcpt_osrc:p_ack_partner_id is not null);
	    target=f_rcpt_ackid;
	    action=SetValue;
	    Value=runclient(:prevrcpt_osrc:p_ack_partner_id);
	    }
	}

    config_osrc "widget/osrc"
	{
	co_ledger "widget/parameter" { type=string; param_name=ledger; default=runclient(:ledger:value); }
	sql = " select
		    *
		from
		    object expression('/apps/kardia/modules/gl/accounting_config.qyp/' + :parameters:ledger)
		";
	}

    batch_osrc "widget/osrc"
	{
	condition = runserver(:this:by_donor == 0);

	sql = runserver("
		SELECT
			:b:a_ledger_number,
			:b:a_batch_number,
			:b:a_batch_desc,
			:b:a_period,
			:b:a_default_effective_date,
			sum = isnull(sum(:g:a_amount), $0),
			cnt = count(1)
		FROM
			IDENTITY /apps/kardia/data/Kardia_DB/a_batch/rows b,
			/apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows g
		WHERE
			:b:a_ledger_number = " + quote(:this:ledger) + " and
			:b:a_batch_number = " + :this:batch + " and
			:g:a_ledger_number =* :b:a_ledger_number and
			:g:a_batch_number =* :b:a_batch_number
		GROUP BY
			:b:a_ledger_number,
			:b:a_batch_number
		");
	replicasize = 2;
	readahead = 2;
	autoquery = onload;
	}

    giftentry_hbox "widget/hbox"
	{
	x=0; y=0; width=980; height=680;
	spacing=10;

	batch_pane "widget/pane"
	    {
	    width=195;
	    style=flat;
	    bgcolor="#f8f8f8";
	    border_radius=12;
	    shadow_radius=4;
	    shadow_offset=2;
	    shadow_color="#808080";
	    shadow_angle=135;

	    batch_vbox "widget/vbox"
		{
		x=5; y=5;
		width=185;
		height=672;
		spacing=10;

		receipt_list_vbox "widget/vbox"
		    {
		    condition = runserver(:this:by_donor == 0);
		    height=646;
		    spacing=10;

		    batchlbl "widget/component"
			{
			path="/apps/kardia/modules/base/section_label.cmp";
			//background = "/apps/kardia/images/bg/ls_blue_gradient_light.png";
			height=26;
			fl_height=0;
			text = runclient("Batch #" + :batch_osrc:a_batch_number + condition(has_endorsement('kardia:gift_amt','kardia:ledger:' + :gift_entry:ledger), ", " + :batch_osrc:sum, ""));
			}

		    receipts_osrc "widget/osrc"
			{
			sql = runserver("
				SELECT
					:g:a_ledger_number,
					:g:a_batch_number,
					:g:a_gift_number,
					:g:a_period,
					:g:a_amount,
					:g:a_receipt_number,
					:g:p_donor_partner_id,
					:g:p_ack_partner_id,
					:g:p_pass_partner_id,
					:g:a_gift_type,
					:g:a_gift_received_date,
					:g:a_gift_postmark_date,
					:g:a_receipt_desired,
					:g:a_ack_receipt_desired,
					:g:a_receipt_sent,
					:g:a_receipt_sent_date,
					:g:a_ack_receipt_sent,
					:g:a_ack_receipt_sent_date,
					:g:a_posted,
					:g:a_posted_to_gl,
					:g:a_goods_provided,
					:g:a_first_gift,
					:g:a_comment,
					:g:s_date_modified,
					:g:s_modified_by,
					:g:s_date_created,
					:g:s_created_by,
					viewname = condition(char_length(rtrim(:p:p_org_name)) > 0, :p:p_org_name, :p:p_surname + ', ' + :p:p_given_name),
					viewnameff = condition(char_length(rtrim(:p:p_org_name)) > 0, :p:p_org_name, :p:p_given_name + ' ' + :p:p_surname),
					--viewname = condition(char_length(rtrim(:p:p_org_name)) > 0, :p:p_org_name, :p:p_surname + ', ' + substring(:p:p_given_name, 1, 1)),
					location_txt = (select :pl:p_city + ', ' + :pl:p_state_province from /apps/kardia/data/Kardia_DB/p_location/rows pl where :pl:p_partner_key = :p:p_partner_key and :pl:p_revision_id = 0 and :pl:p_record_status_code = 'A' limit 1),
					:pt:a_is_cash
				FROM
					IDENTITY /apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows g,
					/apps/kardia/data/Kardia_DB/a_gift_payment_type/rows pt,
					/apps/kardia/data/Kardia_DB/p_partner/rows p
				WHERE
					:p:p_partner_key =* :g:p_donor_partner_id and
					:pt:a_ledger_number = :g:a_ledger_number and
					:pt:a_gift_payment_type = :g:a_gift_type
				");
			baseobj = "/apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows";
			replicasize=700;
			readahead=700;
			autoquery = never;

			rcpt_link_rule "widget/rule"
			    {
			    condition=runserver(:this:by_donor == 0);
			    ruletype = osrc_relationship;
			    target = batch_osrc;
			    key_1 = a_ledger_number;
			    target_key_1 = a_ledger_number;
			    key_2 = a_batch_number;
			    target_key_2 = a_batch_number;
			    key_3 = a_period;
			    target_key_3 = a_period;
			    }

			preselect_one_receipt "widget/connector"
			    {
			    event=EndQuery;
			    event_condition=runclient(not (:receipt:value is null));
			    action=FindObject;
			    a_receipt_number = runclient(:receipt:value);
			    }

			copy_done_on_found "widget/connector"
			    {
			    event=Found;
			    event_condition=runclient(:Name is not null);
			    target=doing_copy;
			    action=SetValue;
			    Value=runclient(0);
			    }

			// If the user changes receipts, erase the cached data from the last check scan.
			rcptchg_cn1 "widget/connector" { event=DataFocusChanged; event_condition=runclient(:Reason != 'create' and :doing_copy:value = 0); target=gift_entry; action=ForgetScan; }
					
			receipts_tbl "widget/table"
			    {
			    height=runserver(condition(:this:use_scanner, 384, 598));
			    titlebar=no;
			    overlap_scrollbar=yes;
			    demand_scrollbar=yes;
			    rowheight=null;
			    cellvspacing=4;
			    inner_padding=2;
			    colsep=0;
			    row_border_radius=6;
			    row_shadow_radius=2;
			    row_shadow_offset=1;
			    row_shadow_color="#a0a0a0";
			    row_shadow_angle=135;

			    t_don "widget/table-column" { title="Donor"; fieldname="viewname"; width=122; style=bold;  caption_fieldname="location_txt"; }
			    //t_rcpt "widget/table-column" { title="Rcpt#"; fieldname="a_receipt_number"; width=63; }
			    t_amt "widget/table-column"
				{
				require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
				endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
				title="Amount";
				fieldname="a_amount";
				width=75;
				align=right; 
				style=bold;
				//font_size=12;
				caption_value=runclient('#' + :receipts_osrc:a_receipt_number);
				caption_align=right;
				}

			    rcpt_edit_ctls "widget/table-row-detail"
				{
				height=30;
				display_for=runclient(not :receipts_osrc:a_posted);

				rcpt_edit_ctls_hbox "widget/hbox"
				    {
				    x=10; y=5;
				    width=165; height=24;
				    align=center; spacing=10;

				    del_rcpt "widget/textbutton"
					{
					height=24;
					width=130;
					text = "Delete";

					enabled = runclient(((:desig_form:form_mode = 'NoData')) and :rcpt_form:is_editable);

					del_r_cn "widget/connector" { event=Click; target=rcpt_form; action=Delete; }
					}
				    }
				}

			    rcpt_ctls "widget/table-row-detail"
				{
				height=30;
				display_for=runclient(:receipts_osrc:a_posted);

				rcpt_ctls_hbox "widget/hbox"
				    {
				    x=10; y=5;
				    width=165; height=24;
				    align=center; spacing=10;

				    receipt_reprint "widget/textbutton"
					{
					require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
					endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
					width=165; height=24;
					enabled=runclient(:receipts_osrc:a_posted);
					//text=runclient(isnull(condition(:receipts_osrc:a_posted,condition(:receipts_osrc:a_receipt_sent, "Reprint Receipt", "Print Receipt") + " " + :receipts_osrc:a_receipt_number, "Post Before Printing"), '-'));
					text = runclient(condition(:receipts_osrc:p_ack_partner_id is null, condition(:receipts_osrc:a_receipt_sent, "Reprint Receipt", "Print Receipt"), condition(:receipts_osrc:a_ack_receipt_sent, "Reprint Acknowledgement", "Print Acknowledgement")));
					reprint_cn "widget/connector"
					    {
					    event=Click;
					    target = reprint_receipt_window;
					    action = Open;
					    }
					}
				    }
				}
			    }
			}

		    new_rcpt_hbox "widget/hbox"
			{
			height=24; align=center; spacing=10;

			new_rcpt "widget/textbutton"
			    {
			    height=24;
			    width=130;
			    text = "New Receipt";

			    enabled = runclient(:gift_entry:by_donor == 0 and :receipts_osrc:cx__pending == 0 and (not (:batch_osrc:a_batch_number is null)) and ((char_length(:line_items_osrc:a_fund) > 0 and :desig_form:form_mode == 'New' and not (char_length(:f_desig_recvdoc:content) > 0 or char_length(:f_desig_amount:content) > 0 or char_length(:f_desig_cc:content) > 0)) or :desig_form:form_mode == 'View' or :desig_form:form_mode == 'NoData') and :rcpt_form:is_newable and not (:rcpt_form:a_posted == 1));

			    new_cn1 "widget/connector" { event=Click; event_condition=runclient(:desig_form:form_mode == 'New'); target=desig_form; action=Discard; }
			    new_cn2 "widget/connector" { event=Click; target=rcpt_form; action=New; }
			    new_cn3 "widget/connector" { event=Click; target=donor_osrc; action=Clear; }
			    new_cn4 "widget/connector" { event=Click; event_condition=runclient(not isnull(:using_scanner, 0)); target=gift_entry; action=ForgetScan; }
			    }
			}

		    scanlbl "widget/component"
			{
			condition=runserver(:this:use_scanner);
			path="/apps/kardia/modules/base/section_label.cmp";
			height=26;
			fl_height=0;
			text = runclient(:last_scanner:value);
			//background = "/apps/kardia/images/bg/ls_green_gradient_dark.png";
			}

		    // When a check is "used", we do one of three things:
		    //
		    // 1. If the current line items have no scan info, and the
		    //    ckno matches, then we apply the scan info to the current
		    //    line items.
		    // 2. If we can't do the above, and a new check is not being
		    //    entered, we do New Receipt.
		    // 3. If a new gift is being entered (even if because we just
		    //    did (2) above), we prefill partner, ckno, hash, and file
		    //    from the scanned check.
		    //
		    scanner "widget/component"
			{
			condition=runserver(:this:use_scanner);
			path="/apps/kardia/modules/rcpt/check_scanner.cmp";
			height=168;
			ledger=runserver(:this:ledger);
			batch=runserver(:this:batch);

			// Set title on connection
			on_connect "widget/connector" { event=Connected; target=last_scanner; action=SetValue; Value=runclient(:Scanner); }

			// Set title on disconnect
			on_disconnect "widget/connector" { event=Disconnected; target=last_scanner; action=SetValue; Value=runclient('Check Scanner'); }

			// Open the popup when the data focus changes
			on_focus_1 "widget/connector" { event=Selected; event_condition=runclient((:direct_click = 1 or :receipt is null or :receipt != :receipts_osrc:a_receipt_number or :filename != :line_items_osrc:a_check_front_image) and :filename is not null); target=popover_view_check; action=Open; }
			on_focus_2 "widget/connector" { event=Selected; event_condition=runclient((:direct_click = 1 or :receipt is null or :receipt != :receipts_osrc:a_receipt_number or :filename != :line_items_osrc:a_check_front_image) and :filename is not null); target=check_image; action=LoadImage; Source=runclient(:filename); }
			on_focus_3 "widget/connector" { event=Selected; event_condition=runclient((:direct_click = 1 or :receipt is null or :receipt != :receipts_osrc:a_receipt_number or :filename != :line_items_osrc:a_check_front_image) and :filename is not null); target=image_reason; action=SetValue; Value=runclient(condition(:receipt is not null, 'Gift Item for Receipt #' + :receipt, 'Scanned Check' + isnull(' #' + :check_number, ''))); }
			on_focus_4 "widget/connector" { event=Selected; event_condition=runclient(:receipt is not null and (:receipt != :receipts_osrc:a_receipt_number)); target=receipts_osrc; action=FindObject; a_receipt_number=runclient(:receipt); }
			on_focus_5 "widget/connector" { event=Selected; event_delay=0.1; event_condition=runclient(:receipt is not null and (:receipt != :receipts_osrc:a_receipt_number or :filename != :line_items_osrc:a_check_front_image)); target=line_items_osrc; action=FindObject; a_check_front_image=runclient(:filename); }
			on_focus_6 "widget/connector" { event=Selected; event_condition=runclient(:filename is null and substring(:image_reason:value, 1, 13) = 'Scanned Check'); target=popover_view_check; action=Close; }

			// Scanner wants to show an image
			on_showimg_1 "widget/connector" { event=ShowImage; target=popover_view_check; action=Open; }
			on_showimg_2 "widget/connector" { event=ShowImage; target=image_reason; action=SetValue; Value=runclient(:reason); }
			on_showimg_3 "widget/connector" { event=ShowImage; target=check_image; action=LoadImage; Source=runclient(:Image); }

			// Nothing matches, new account.
			on_scan_none_1 "widget/connector"
			    {
			    event=Scanned;
			    event_condition=runclient(:partner_key is null);
			    target=gift_entry;
			    action=ScanOneDonor;
			    event_all_params=1;
			    }
			on_scan_none_2 "widget/connector"
			    {
			    event=NewCheck;
			    event_condition=runclient(:Count == :Current and :Count > 0 and :partner_key is null);
			    target=gift_entry;
			    action=ScanOneDonor;
			    event_all_params=1;
			    }

			// Automation: one donor matches
			on_scan_one_1 "widget/connector"
			    {
			    event=NewCheck;
			    event_condition=runclient(:Count == :Current and :partner_key is not null and :partner_key != 'MULTIPLE' and :ack_key is null);
			    target=gift_entry;
			    action=ScanOneDonor;
			    event_all_params=1;
			    }
			on_scan_one_2 "widget/connector"
			    {
			    event=Scanned;
			    event_condition=runclient(:partner_key is not null and :partner_key != 'MULTIPLE' and :ack_key is null);
			    target=gift_entry;
			    action=ScanOneDonor;
			    event_all_params=1;
			    }

			// Automation: multiple donors match
			on_scan_mul_1 "widget/connector"
			    {
			    event=NewCheck;
			    event_condition=runclient(:Count == :Current and :partner_key is not null and (:partner_key = 'MULTIPLE' or :ack_key is not null));
			    target=gift_entry;
			    action=ScanMultipleDonors;
			    event_all_params=1;
			    }
			on_scan_mul_2 "widget/connector"
			    {
			    event=Scanned;
			    event_condition=runclient(:partner_key is not null and (:partner_key = 'MULTIPLE' or :ack_key is not null));
			    target=gift_entry;
			    action=ScanMultipleDonors;
			    event_all_params=1;
			    }
			}
		    }

		receipt_bydonor_vbox "widget/vbox"
		    {
		    condition = runserver(:this:by_donor == 1);
		    height=646;
		    spacing=10;

		    srchlbl "widget/component"
			{
			path="/apps/kardia/modules/base/section_label.cmp";
			height=26;
			fl_height=0;
			text = runclient("Search for Donor:");
			}

		    srchbox "widget/editbox"
			{
			height=20;
			empty_description = "type search, press ENTER";

			enter_pressed_do_search "widget/connector"
			    {
			    event=BeforeKeyPress;
			    event_condition=runclient(:Name == 'enter');
			    event_cancel=runclient(:Name == 'enter');
			    target=srchlist;
			    action=QueryText;
			    cx__case_insensitive = 1;
			    query=runclient(:srchbox:content);
			    field_list = runclient("p_partner_key,*p_given_name*,*p_surname*,*p_org_name*,p_legacy_key_1,p_legacy_key_2*");
			    }
			}

		    srchlist "widget/osrc"
			{
			sql = runserver("
				SELECT
					:p:p_partner_key,
					nm = condition(char_length(rtrim(:p:p_org_name)) > 0, :p:p_org_name, :p:p_given_name + ' ' + :p:p_surname) +
					isnull(' [' + :pl:p_city + ', ' + :pl:p_state_province + ' ' + :pl:p_postal_code + ']', ''),
					hasgifts = (select 1 from /apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows g where :g:p_donor_partner_id = :p:p_partner_key limit 1)
				FROM
					/apps/kardia/data/Kardia_DB/p_partner/rows p,
					/apps/kardia/data/Kardia_DB/p_location/rows pl
				WHERE
					:p:p_partner_key *= :pl:p_partner_key
				ORDER BY
					isnull(:p:p_org_name, ''),
					:p:p_surname,
					:p:p_given_name,
					charindex(:pl:p_record_status_code, 'OIQA') desc
				HAVING
					:hasgifts = 1
				");
			autoquery=never;
			replicasize=25;
			readahead=25;

			srchform "widget/form" { }

			srchtbl "widget/table"
			    {
			    height=209;
			    titlebar=no;
			    overlap_scrollbar=yes;
			    demand_scrollbar=yes;
			    rowheight=null;
			    cellvspacing=4;
			    inner_padding=2;
			    colsep=0;
			    row_border_radius=6;
			    row_shadow_radius=2;
			    row_shadow_offset=1;
			    row_shadow_color="#a0a0a0";
			    row_shadow_angle=135;

			    pt_name "widget/table-column" { title="Name"; fieldname="nm"; width=180; }
				//pt_city "widget/table-column" { title="City"; fieldname="addr"; width=90; }
			    }
			}

		    donorhistsep "widget/autolayoutspacer" { height=1; }

		    historylbl "widget/component"
			{
			path="/apps/kardia/modules/base/section_label.cmp";
			height=26;
			fl_height=0;
			text = runclient("Gifts:");
			}

		    receipts_osrc "widget/osrc"
			{
			sql = runserver("
				SELECT
					:g:a_ledger_number,
					:g:a_batch_number,
					:g:a_gift_number,
					:g:a_period,
					:g:a_amount,
					:g:a_receipt_number,
					:g:p_donor_partner_id,
					:g:p_ack_partner_id,
					:g:p_pass_partner_id,
					:g:a_gift_type,
					:g:a_gift_received_date,
					:g:a_gift_postmark_date,
					viewdate=substring(convert(string,isnull(:g:a_gift_postmark_date, :g:a_gift_received_date)),1,11),
					:g:a_receipt_desired,
					:g:a_ack_receipt_desired,
					:g:a_receipt_sent,
					:g:a_receipt_sent_date,
					:g:a_ack_receipt_sent,
					:g:a_ack_receipt_sent_date,
					:g:a_posted,
					:g:a_posted_to_gl,
					:g:a_goods_provided,
					:g:a_first_gift,
					:g:a_comment,
					:g:s_date_modified,
					:g:s_modified_by,
					:g:s_date_created,
					:g:s_created_by
				FROM
					IDENTITY /apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows g
				WHERE
					:g:a_posted = 1
				ORDER BY
					isnull(:g:a_gift_postmark_date, :g:a_gift_received_date) desc
				");
			baseobj = "/apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows";
			replicasize=250;
			readahead=250;
			autoquery = never;

			rcpt_link_rule "widget/rule"
			    {
			    ruletype = osrc_relationship;
			    target = srchlist;
			    key_1 = p_donor_partner_id;
			    target_key_1 = p_partner_key;
			    }
					
			receipts_tbl "widget/table"
			    {
			    height=335;
			    titlebar=no;
			    overlap_scrollbar=yes;
			    demand_scrollbar=yes;
			    rowheight=null;
			    cellvspacing=4;
			    inner_padding=2;
			    colsep=0;
			    row_border_radius=6;
			    row_shadow_radius=2;
			    row_shadow_offset=1;
			    row_shadow_color="#a0a0a0";
			    row_shadow_angle=135;

			    t_rcpt "widget/table-column" { title="Rcpt#"; fieldname="a_receipt_number"; width=63; }
			    t_date "widget/table-column" { title="Date"; fieldname="viewdate"; width=97; }
			    t_amt "widget/table-column"
				{
				require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
				endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
				title="Amount"; fieldname="a_amount"; width=75; align=right; 
				}

			    rcpt_ctls "widget/table-row-detail"
				{
				height=30;
				display_for=runclient(:receipts_osrc:a_posted);

				rcpt_ctls_hbox "widget/hbox"
				    {
				    x=10; y=5;
				    width=165; height=24;
				    align=center; spacing=10;

				    receipt_reprint "widget/textbutton"
					{
					require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
					endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
					width=165; height=24;
					enabled=runclient(:receipts_osrc:a_posted);
					//text=runclient(isnull(condition(:receipts_osrc:a_posted,condition(:receipts_osrc:a_receipt_sent, "Reprint Receipt", "Print Receipt") + " " + :receipts_osrc:a_receipt_number, "Post Before Printing"), '-'));
					text = runclient(condition(:receipts_osrc:p_ack_partner_id is null, condition(:receipts_osrc:a_receipt_sent, "Reprint Receipt", "Print Receipt"), condition(:receipts_osrc:a_ack_receipt_sent, "Reprint Acknowledgement", "Print Acknowledgement")));
					reprint_cn "widget/connector"
					    {
					    event=Click;
					    target = reprint_receipt_window;
					    action = Open;
					    }
					}
				    }
				}
			    }
			}
		    }
		}
	    }

	detail_pane "widget/pane"
	    {
	    width=572;
	    style=flat;
	    bgcolor="#f8f8f8";
	    border_radius=12;
	    shadow_radius=4;
	    shadow_offset=2;
	    shadow_color="#808080";
	    shadow_angle=135;

	    detail_vbox "widget/vbox"
		{
		x=5; y=5;
		width = 562; 
		spacing=10;

		rcpt_hdr "widget/component"
		    {
		    path="/apps/kardia/modules/base/section_header.cmp";
		    //background = "/apps/kardia/images/bg/ls_green_gradient_light.png";
		    height=26;
		    fl_height=0;
		    text = runclient(condition(:rcpt_form:form_mode == 'New', "** NEW RECEIPT **", condition(:rcpt_form:form_mode == 'Modify', 'MODIFYING -- ', '') + condition(:gift_entry:by_donor, "Batch #" + :receipts_osrc:a_batch_number + ", ", "") + "Receipt #" + :receipts_osrc:a_receipt_number + condition(has_endorsement('kardia:gift_amt','kardia:ledger:' + :gift_entry:ledger) ,', Total ' + :receipts_osrc:a_amount, '') + condition(:receipts_osrc:a_posted, '   ** POSTED **', '')));
		    form = rcpt_form;
		    object_name = "Receipt";
		    allow_edit = 1;
		    }


		rcpt_form "widget/form"
		    {
		    next_form = prevrcpt_form;
		    prev_form = prevrcpt_form;
		    objectsource = receipts_osrc;
		    allow_modify = runclient(isnull(:receipts_osrc:a_posted, 0) == 0);
		    allow_new = runclient(isnull(:receipts_osrc:a_posted, 0) == 0);
		    allow_query = no;
		    allow_merge = yes;

		    // clear the previous receipt # when a new receipt is viewed
		    clear_prev_on_view "widget/connector"
			{
			event=View;
			target=prevrcpt_form;
			action=Discard;
			}

		    // Revert to what donor is shown in sidebar on View
		    revert_sidebar_on_view "widget/connector"
			{
			event=View;
			event_condition=runclient(:manage_osrc:partner != isnull(:receipts_osrc:p_ack_partner_id, :receipts_osrc:p_donor_partner_id));
			target=gift_entry;
			action=LoadSidebar;
			Donor=runclient(isnull(:receipts_osrc:p_ack_partner_id, :receipts_osrc:p_donor_partner_id));
			}

		    // this new-desig connector did NOT work reliably.  We are now doing the same
		    // basic thing based on the EndQuery event, if the desig returns 0 rows and the
		    // previous rcpt form status was New.
		    auto_new_item_on_new_rcpt "widget/connector"
			{
			condition = 0;
			event=DataSaved;
			event_condition = runclient(:PrevStatus == 'New');
			event_delay = 0.25;
			target = desig_form;
			action = New;
			Multi = 1;
			}

		    // First use of RefreshObject -- does not trigger osrc and form go-nogo sequence
		    // and thus doesn't bark if a form has unsaved data in it. (we're just updating a
		    // total $amount!!)
		    auto_batch_total_refresh_on_save "widget/connector"
			{
			condition=runserver(:this:by_donor == 0);
			event=DataSaved;
			target = batch_osrc;
			action = RefreshObject;
			}

		    // Still need to figure why we are getting a double dialog window before we go
		    // live with this one.
		    block_save_if_no_valid_donor "widget/connector"
			{
			event=BeforeSave;
			event_condition=runclient((not char_length(:f_rcpt_donorid:description) > 0) or :f_rcpt_donorid:description == '** INVALID **');
			event_cancel=runclient((not char_length(:f_rcpt_donorid:description) > 0) or :f_rcpt_donorid:description == '** INVALID **');
			event_delay = 0.25;
			target = f_rcpt_donorid;
			action = SetFocus;
			}
		    block_save_if_daf_but_no_valid_ack "widget/connector"
			{
			event=BeforeSave;
			event_condition=runclient((isnull(:donor_osrc:p_is_daf, 0) = 1 and ((not char_length(:f_rcpt_ackid:description) > 0) or :f_rcpt_ackid:description == '** INVALID **' or :f_rcpt_ackid:description == 'required')));
			event_cancel=runclient((isnull(:donor_osrc:p_is_daf, 0) = 1 and ((not char_length(:f_rcpt_ackid:description) > 0) or :f_rcpt_ackid:description == '** INVALID **' or :f_rcpt_ackid:description == 'required')));
			event_delay = 0.25;
			target = f_rcpt_ackid;
			action = SetFocus;
			}

		    // Forget scanned data if user cancels out of receipt creation
		    on_discard_rcpt_forget_scan "widget/connector" { event=Discard; target=gift_entry; action=ForgetScan; }

		    // Hide popover donor list if user cancels
		    on_discard_hide_donorlist "widget/connector" { event=Discard; target=popover_matching_donors; action=Close; }

		    // Clear remembered cancel on desig
		    on_discard_clear_canceled "widget/connector" { event=Discard; target=canceled_last; action=SetValue; Value=runclient(""); }

		    rcpt_hbox "widget/hbox"
			{
			height=150;
			spacing=20;

			rcpt_vbox1 "widget/vbox"
			    {
			    width=340;
			    spacing=4;

			    prevrcpt_form "widget/form"
				{
				next_form = rcpt_form;
				prev_form = rcpt_form;

				f_prev_receipt "widget/component"
				    {
				    height=20;
				    //width=450;
				    path="/sys/cmp/smart_field.cmp";
				    text = "Prev. Receipt No:";
				    label_width = 120;
				    field = a_receipt_number;
				    empty_desc = "optional";

				    user_set_prev_rcpt "widget/connector"
					{
					event=LoseFocus;
					event_condition=runclient(char_length(:f_prev_receipt:content) > 0);
					target=prevrcpt_osrc;
					action=QueryParam;
					ledger=runclient(:ledger:value);
					receipt=runclient(:f_prev_receipt:value);
					}

				    //prev_rcpt_hints "widget/hints" { style=readonly; }
				    }
				}

			    f_rcpt_donorid "widget/component"
				{
				height=20;
				label_width=120;
				path="/apps/kardia/modules/rcpt/field_donor_with_new.cmp";
				label="Donor";
				field="p_donor_partner_id";
				ledger=runserver(:this:ledger);

				donor_hints "widget/hints" { style=strnull; }

				on_donor_change_load_sidebar "widget/connector"
				    {
				    event=DataChange;
				    event_condition=runclient(:doing_copy:value == 0 and not char_length(:f_rcpt_ackid:content) > 1);
				    target=gift_entry;
				    action=LoadSidebar;
				    Donor=runclient(:Value);
				    }

				on_donor_change_close_multidonor "widget/connector"
				    {
				    event=DataChange;
				    event_condition=runclient(:popover_matching_donors:is_visible and char_length(:f_rcpt_donorid:content) > 1);
				    target=popover_matching_donors;
				    action=Close;
				    }

				on_donor_focus "widget/connector"
				    {
				    event=GetFocus;
				    event_condition=runclient(:doing_copy:value == 0 and char_length(:f_rcpt_donorid:content) > 1 and :manage_osrc:partner != :f_rcpt_donorid:content);
				    target=gift_entry;
				    action=LoadSidebar;
				    Donor=runclient(:f_rcpt_donorid:content);
				    }

				on_donor_click "widget/connector"
				    {
				    event=MouseDown;
				    event_condition=runclient(:doing_copy:value == 0 and char_length(:f_rcpt_ackid:content) > 1 and :manage_osrc:partner != :f_rcpt_donorid:content and :rcpt_form:form_mode == 'View');
				    target=gift_entry;
				    action=LoadSidebar;
				    Donor=runclient(:f_rcpt_donorid:content);
				    }
				}

			    f_rcpt_ackid "widget/component"
				{
				height=20;
				label_width=120;
				path="/apps/kardia/modules/rcpt/field_donor_with_new.cmp";
				label="Acknowledgement";
				object_name="Person";
				field="p_ack_partner_id";
				ledger=runserver(:this:ledger);

				ack_hints "widget/hints" { style=strnull; }

				on_ack_change "widget/connector"
				    {
				    event=DataChange;
				    event_condition=runclient(:doing_copy:value == 0);
				    target=gift_entry;
				    action=LoadSidebar;
				    Donor=runclient(isnull(:Value, :f_rcpt_donorid:content));
				    }

				on_ack_focus "widget/connector"
				    {
				    event=GetFocus;
				    event_condition=runclient(:doing_copy:value == 0 and char_length(:f_rcpt_ackid:content) > 1 and :manage_osrc:partner != :f_rcpt_ackid:content);
				    target=gift_entry;
				    action=LoadSidebar;
				    Donor=runclient(:f_rcpt_ackid:content);
				    }

				on_ack_click "widget/connector"
				    {
				    event=MouseDown;
				    event_condition=runclient(:doing_copy:value == 0 and char_length(:f_rcpt_ackid:content) > 1 and :manage_osrc:partner != :f_rcpt_ackid:content and :rcpt_form:form_mode == 'View');
				    target=gift_entry;
				    action=LoadSidebar;
				    Donor=runclient(:f_rcpt_ackid:content);
				    }
				}

			    f_rcpt_viaid "widget/component"
				{
				height=20;
				label_width=120;
				path="/apps/kardia/modules/rcpt/field_donor_with_new.cmp";
				label="Transferred Via";
				object_name="Person";
				field="p_pass_partner_id";
				ledger=runserver(:this:ledger);
				}

			    f_rcpt_postdate "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=120; text='Postmark Date:'; field='a_gift_postmark_date'; ctl_type=datetime; date_only=1; default_time="12:00:00"; }
			    f_rcpt_recvdate "widget/component"
				{
				height=20;
				path="/sys/cmp/smart_field.cmp";
				label_width=120;
				text='Received Date:';
				field='a_gift_received_date';
				ctl_type=datetime;
				date_only=1;
				default_time="12:00:00";

				rd_hints1 "widget/hints" { condition=runserver( isnull( (select :a_config_value from /apps/kardia/data/Kardia_DB/a_config/rows cfg where :cfg:a_ledger_number = :this:ledger and :cfg:a_config_name = 'RcptDisabRcvdDt'),0) == 1); default=runclient(getdate()); style=readonly; }
				rd_hints2 "widget/hints" { condition=runserver( isnull( (select :a_config_value from /apps/kardia/data/Kardia_DB/a_config/rows cfg where :cfg:a_ledger_number = :this:ledger and :cfg:a_config_name = 'RcptDisabRcvdDt'),0) == 0); default=runclient(getdate()); }
				}

			    }

			rcpt_vbox2 "widget/vbox"
			    {
			    width=200;
			    spacing=4;

			    f_rcpt_gifttype "widget/component"
				{
				height=20;
				path="/sys/cmp/smart_field.cmp";
				label_width=100;
				text='Gift Type:';
				field='a_gift_type';
				ctl_type=dropdown;
				numdisplay=10;
				sql = runserver("select :a_gift_payment_type_desc, :a_gift_payment_type, :a_is_default from /apps/kardia/data/Kardia_DB/a_gift_payment_type/rows where :a_is_enabled = 1 and :a_ledger_number = " + quote(:this:ledger));
				gt_hints "widget/hints" { style=notnull; default=runserver( (select :a_gift_payment_type from /apps/kardia/data/Kardia_DB/a_gift_payment_type/rows where :a_ledger_number = :this:ledger and :a_is_default=1 ) ); }

				set_accts_based_on_cc_2 "widget/connector"
				    {
				    event = DataChange;
				    event_condition = runclient(char_length(:f_rcpt_gifttype:value) >= 1 and char_length(:f_desig_cc:content) >= 1);
				    target = f_desig_acct_dd;
				    action = SetItems;
				    SQL=runclient(" declare object info;
				    
						    select
							:info:acct = :gt:a_desig_account_code,
							:info:desc = :a:a_acct_desc
						    from
							/apps/kardia/data/Kardia_DB/a_gift_payment_type/rows gt,
							/apps/kardia/data/Kardia_DB/a_account/rows a
						    where
							:gt:a_ledger_number = " + quote(:gift_entry:ledger) + " and
							:gt:a_gift_payment_type = " + quote(:f_rcpt_gifttype:value) + " and
							:a:a_ledger_number =* :gt:a_ledger_number and
							:a:a_account_code =* :gt:a_desig_account_code
						    ;
						    
						    select
							label = :a:a_account_code + ': ' + :a:a_acct_desc,
							value = :a:a_account_code,
							selected = 1
						    from
							/apps/kardia/data/Kardia_DB/a_fund_receipting_accts/rows cr,
							/apps/kardia/data/Kardia_DB/a_account/rows a
						    where
							:cr:a_fund = " + quote(:f_desig_cc:content) + " and
							:cr:a_ledger_number = " + quote(:gift_entry:ledger) + " and
							:a:a_ledger_number = :cr:a_ledger_number and
							:a:a_account_code = :cr:a_account_code and
							:info:acct is null
						    order by
							:cr:a_is_default asc
						    ;

						    select
							label = :info:acct + ': ' + :info:desc,
							value = :info:acct,
							selected = 1
						    where
							:info:acct is not null
						    ");
				    }
				}
			    f_rcpt_rcptwanted "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Donor Receipt?'; field='a_receipt_desired'; ctl_type=dropdown; sql = "select :a_receipt_type_desc, :a_receipt_type from /apps/kardia/data/Kardia_DB/a_receipt_type/rows where :a_is_enabled = 1"; rw_hints "widget/hints" { default=runclient(runserver( (select :a_receipt_type from /apps/kardia/data/Kardia_DB/a_receipt_type/rows where :a_is_enabled = 1 and :a_is_default=1) )); style=notnull; } }
			    f_rcpt_ackrcptwanted "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Ack. Receipt?'; field='a_ack_receipt_desired'; ctl_type=dropdown; sql = "select :a_receipt_type_desc, :a_receipt_type from /apps/kardia/data/Kardia_DB/a_receipt_type/rows where :a_is_enabled = 1"; }
			    f_rcpt_goods "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Goods Provided:'; tooltip='Value of goods provided to donor for a quid pro quo donation'; field='a_goods_provided'; ctl_type=editbox; rgoods_hints "widget/hints" { default=runclient(0); } }
			    f_rcpt_notes "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Admin Notes:'; tooltip='Administrative notes (not donor comments)'; field='a_comment'; ctl_type=editbox; }

			    donor_osrc "widget/osrc"
				{
				do_ledger "widget/parameter" { type=string; param_name=a_ledger_number; }
				do_donor "widget/parameter" { type=string; param_name=donor; }
				do_ackdonor "widget/parameter" { type=string; param_name=ackdonor; }

				sql = "	select
					    -- Donor info
					    nm = condition(char_length(rtrim(:p:p_org_name)) > 0, :p:p_org_name, :p:p_given_name + ' ' + :p:p_surname),
					    label = condition(char_length(rtrim(:p:p_org_name)) > 0, :p:p_org_name, :p:p_given_name + ' ' + :p:p_surname) + ' #' + :p:p_partner_key,
					    :p:p_comments,
					    :p:p_partner_key,
					    :d:p_receipt_desired,
					    :d:p_is_daf,
					    allowed_intents = (select sum(:it:a_intent_type) from /apps/kardia/data/Kardia_DB/a_intent_type/rows it where :it:a_ledger_number = :parameters:a_ledger_number and (:it:a_allow_daf = 1 or isnull(:d:p_is_daf, 0) = 0)),
					    donor_rec = :d:p_partner_key,

					    -- Acknowledgement info
					    acknm = condition(char_length(rtrim(:pa:p_org_name)) > 0, :pa:p_org_name, :pa:p_given_name + ' ' + :pa:p_surname),
					    acklabel = condition(char_length(rtrim(:pa:p_org_name)) > 0, :pa:p_org_name, :pa:p_given_name + ' ' + :pa:p_surname) + ' #' + :p:p_partner_key,
					    ackcomments = :pa:p_comments,
					    ackpartner = :pa:p_partner_key,
					    ackrcptdesired = :da:p_receipt_desired,
					    ackdonor_rec = :da:p_partner_key
					from
					    /apps/kardia/data/Kardia_DB/p_partner/rows p,
					    /apps/kardia/data/Kardia_DB/p_donor/rows d,
					    /apps/kardia/data/Kardia_DB/p_partner/rows pa,
					    /apps/kardia/data/Kardia_DB/p_donor/rows da
					where
					    :p:p_partner_key = :parameters:donor and
					    :p:p_partner_key *= :d:p_partner_key and
					    :d:a_gl_ledger_number = :parameters:a_ledger_number and
					    :pa:p_partner_key = :parameters:ackdonor and
					    :pa:p_partner_key *= :da:p_partner_key and
					    :da:a_gl_ledger_number = :parameters:a_ledger_number and
					    -- The below just forces the join into an outer join mode
					    char_length(substring(:p:p_partner_key,1,1)) *= char_length(substring(:pa:p_partner_key,1,1))
					limit
					    1
					";
				readahead = 2;
				replicasize = 2;
				autoquery = never;

				query_on_id_change "widget/connector"
				    {
				    source = f_rcpt_donorid;
				    event = DataChange;
				    action = QueryParam;
				    donor = runclient(:Value);
				    ackdonor = runclient(:f_rcpt_ackid:content);
				    a_ledger_number = runclient(:ledger:value);
				    }

				query_on_ackid_change "widget/connector"
				    {
				    source = f_rcpt_ackid;
				    event = DataChange;
				    action = QueryParam;
				    donor = runclient(:f_rcpt_donorid:content);
				    ackdonor = runclient(:Value);
				    a_ledger_number = runclient(:ledger:value);
				    }

				set_desc_on_donor_eb "widget/connector"
				    {
				    event = EndQuery;
				    target = f_rcpt_donorid;
				    action = SetValueDescription;
				    Description = runclient(condition(char_length(:donor_osrc:label) > 0, :donor_osrc:label, '** INVALID **'));
				    }

				set_desc_on_ack_eb "widget/connector"
				    {
				    event = EndQuery;
				    target = f_rcpt_ackid;
				    action = SetValueDescription;
				    Description = runclient(condition(char_length(:donor_osrc:acklabel) > 0, :donor_osrc:acklabel, condition(char_length(:f_rcpt_ackid:content) > 0, '** INVALID **', condition(:donor_osrc:p_is_daf == 1, 'required', ''))));
				    }

				set_rcpt_desired "widget/connector"
				    {
				    event = EndQuery;
				    event_condition = runclient(:rcpt_form:is_savable and not (:donor_osrc:p_receipt_desired is null));
				    target = f_rcpt_rcptwanted;
				    action = SetValue;
				    Value = runclient(:donor_osrc:p_receipt_desired);
				    }

				set_ackrcpt_desired "widget/connector"
				    {
				    event = EndQuery;
				    event_condition = runclient(:rcpt_form:is_savable);
				    target = f_rcpt_ackrcptwanted;
				    action = SetValue;
				    Value = runclient(condition(:donor_osrc:ackrcptdesired is not null, :donor_osrc:ackrcptdesired, condition(char_length(:f_rcpt_ackid:content) > 0, 'I', null)));
				    }

				set_allowed_intents "widget/connector"
				    {
				    event = EndQuery;
				    target = p_type;
				    action = SetGroup;
				    Group = runclient(condition(isnull(:donor_osrc:p_is_daf, 0) = 0, null, 1));
				    }
				}

			    donor_giving_osrc "widget/osrc"
				{
				condition=0;
				dgo_partner "widget/parameter" { param_name=partner; type=string; default=null; }
				sql = "select
					    donorid = max(:p_donor_partner_id),
					    cnt = count(:a_receipt_number),
					    lastdate = max(isnull(:a_gift_postmark_date, :a_gift_received_date))
					from
					    /apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows
					where
					    :p_donor_partner_id = :parameters:partner and
					    char_length(:p_donor_partner_id) > 0 and
					    :a_posted = 1
					";
				replicasize = 2;
				readahead = 2;
				autoquery = never;

				giving_query_on_id_change "widget/connector"
				    {
				    source = f_rcpt_donorid;
				    event = DataChange;
				    action = QueryParam;
				    partner = runclient(:Value);
				    }

				donor_giving_link "widget/label"
				    {
				    condition=0;
				    height = 18;
				    widget_class = link;
				    value = runclient(condition(:donor_giving_osrc:cnt > 0, condition(:donor_giving_osrc:cnt == 1, 'Donor has given one time, on ' ,'Donor has given ' + :donor_giving_osrc:cnt + ' times, last on ') + substring(:donor_giving_osrc:lastdate, 1, 11) + '.', '** No Giving History **'));
				    //value = runclient(condition((:donor_giving_osrc:donorid == :f_rcpt_donorid:content or not (char_length(:donor_giving_osrc:donorid) == 0)), condition(:donor_giving_osrc:cnt > 0, 'Donor has given ' + :donor_giving_osrc:cnt + ' times, last on ' + substring(:donor_giving_osrc:lastdate, 1, 11) + '.', '** No Giving History **'), ''));
				    }

				donor_comment_text "widget/label"
				    {
				    condition=0;
				    height=21;
				    value=runclient(:donor_osrc:p_comments);
				    }
				}
			    f_rcpt_rcptno "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Receipt Number:'; field='a_receipt_number'; ctl_type=editbox; rn_hints "widget/hints" { style=readonly; } }
			    f_rcpt_total_var "widget/variable" { fieldname=a_amount; type=string; rtv_hints "widget/hints" { default=runclient("0"); } }
			    f_rcpt_total "widget/component"
				{
				condition=0;
				require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
				endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
				height=20;
				path="/sys/cmp/smart_field.cmp";
				label_width=100;
				text='Total Amount:';
				field='a_amount';
				ctl_type=editbox;
				rttl_hints "widget/hints" { style=readonly; default=runclient(0); }
				}
			    f_rcpt_total_nosec "widget/component"
				{
				condition=0;
				require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
				endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
				invert_security_check=yes;
				height=20;
				path="/apps/kardia/modules/base/locked_field.cmp";
				label_width=100;
				text='Total Amount:';
				field='a_amount';
				}
			    }
			}
		    }

		desig_pane "widget/pane"
		    {
		    style=flat;
		    height = 473;

		    enabled = runclient(:rcpt_form:form_mode == 'View' or :rcpt_form:form_mode == 'Modify');

		    desig_vbox "widget/vbox"
			{
			height=368;
			x=0; y=0;
			spacing=10;

			line_items_hdr "widget/component"
			    {
			    path="/apps/kardia/modules/base/section_header.cmp";
			    height=26;
			    fl_height=0;
			    text = runclient(condition(:rcpt_form:form_mode == 'New', "Designations", condition(:desig_form:form_mode == 'New', '**NEW** Designation', condition(:desig_form:form_mode == 'Modify', 'MODIFYING Designation', 'Designations'))));
			    form = desig_form;
			    allow_new=1;
			    allow_delete=1;
			    allow_edit = 1;
			    object_name = "Designation";
			    }

			line_items_osrc "widget/osrc"
			    {
			    sql = "select
					:g:a_ledger_number,
					:g:a_batch_number,
					:g:a_gift_number,
					:g:a_split_number,
					:g:a_period,
					:g:a_fund,
					:g:a_account_code,
					:g:a_amount,
					:g:a_gift_admin_fee,
					:g:a_gift_admin_subtype,
					admin = isnull(:g:a_gift_admin_fee + ' ', '') + isnull(:g:a_gift_admin_subtype, ''),
					:g:a_recv_document_id,
					:g:a_account_hash,
					:g:a_check_front_image,
					:g:p_recip_partner_id,
					:g:a_confidential,
					:g:a_non_tax_deductible,
					:g:a_posted,
					:g:a_posted_to_gl,
					:g:a_motivational_code,
					:g:a_item_intent_code,
					:g:a_comment,
					:g:a_dn_gift_received_date,
					:g:a_dn_gift_postmark_date,
					:g:a_dn_gift_type,
					:g:a_dn_receipt_number,
					:g:p_dn_donor_partner_id,
					:g:p_dn_ack_partner_id,
					:g:p_dn_pass_partner_id,
					:g:s_date_modified,
					:g:s_modified_by,
					:g:s_date_created,
					:g:s_created_by,
					:c:a_fund_desc,
					:a:a_acct_desc
				    from
					IDENTITY /apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows g,
					/apps/kardia/data/Kardia_DB/a_fund/rows c,
					/apps/kardia/data/Kardia_DB/a_account/rows a
				    where
					:c:a_fund =* :g:a_fund and
					:c:a_ledger_number =* :g:a_ledger_number and
					:a:a_account_code =* :g:a_account_code and
					:a:a_ledger_number =* :g:a_ledger_number
				    order by
					:g:a_split_number asc
				    ";
			    baseobj = "/apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows";
			    replicasize = 50;
			    readahead = 50;
			    autoquery = never;

			    item_rcpt_link "widget/rule"
				{
				ruletype = osrc_relationship;
				target = receipts_osrc;
				key_1 = a_ledger_number;
				key_2 = a_batch_number;
				key_3 = a_gift_number;
				key_4 = a_period;
				target_key_1 = a_ledger_number;
				target_key_2 = a_batch_number;
				target_key_3 = a_gift_number;
				target_key_4 = a_period;
				}

			    auto_new_on_view_after_new_rcpt "widget/connector"
				{
				event=EndQuery;
				event_condition=runclient(not (char_length(:line_items_osrc:a_ledger_number) > 0) and :rcpt_form:form_mode == 'View' and :rcpt_form:form_prev_mode == 'New' and :rcpt_form:form_prev_action != 'Discard');
				event_delay = 0.25;
				target = desig_form;
				action = New;
				Multi = 1;
				}

			    load_desigs_on_view "widget/connector"
				{
				condition=0;
				event=EndQuery;
				target=p_desig;
				action=SetItems;
				SQL = runclient("
					select
					    value=:g:a_split_number,
					    label='' + :g:a_amount + ' for ' + :c:a_fund_desc
					from
					    identity /apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows g,
					    /apps/kardia/data/Kardia_DB/a_fund/rows c
					where
					    :g:a_ledger_number = " + quote(:receipts_osrc:a_ledger_number) + " and
					    :g:a_batch_number = " + :receipts_osrc:a_batch_number + " and
					    :g:a_gift_number = " + :receipts_osrc:a_gift_number + " and
					    :c:a_fund =* :g:a_fund and
					    :c:a_ledger_number =* :g:a_ledger_number
					");
				}

			    load_ck_img_on_change_1 "widget/connector"
				{
				event=DataFocusChanged;
				event_condition=runclient(:popover_view_check:is_visible and substring(:image_reason:value,1,9) = 'Gift Item' and :line_items_osrc:a_check_front_image is not null);
				target=check_image;
				action=LoadImage;
				Source=runclient(:line_items_osrc:a_check_front_image);
				}
			    load_ck_img_on_change_2 "widget/connector"
				{
				event=DataFocusChanged;
				event_condition=runclient(:popover_view_check:is_visible and substring(:image_reason:value,1,9) = 'Gift Item' and :line_items_osrc:a_check_front_image is not null);
				target=image_reason;
				action=SetValue;
				Value=runclient('Gift Item for Receipt #' + :receipts_osrc:a_receipt_number);
				}
			    close_ck_img_on_change_3 "widget/connector"
				{
				event=DataFocusChanged;
				event_condition=runclient(:popover_view_check:is_visible and substring(:image_reason:value,1,9) = 'Gift Item' and :line_items_osrc:a_check_front_image is null);
				target=popover_view_check;
				action=Close;
				}
			    sync_scanner_on_change_4 "widget/connector"
				{
				condition=runserver(:this:use_scanner);
				event=DataFocusChanged;
				event_condition=runclient(:line_items_osrc:a_check_front_image is not null and :rcpt_form:form_prev_mode != 'New');
				//event_confirm=runclient('4: ' + isnull(:rcpt_form:form_prev_mode, '-') + ' -> ' + isnull(:rcpt_form:form_mode, '-') + ', ' + isnull(:Reason, ''));
				target=scanner;
				action=FindReceipt;
				receipt=runclient(:receipts_osrc:a_receipt_number);
				filename=runclient(:line_items_osrc:a_check_front_image);
				}
			    sync_scanner_on_change_5 "widget/connector"
				{
				condition=runserver(:this:use_scanner);
				event=DataFocusChanged;
				event_condition=runclient(:line_items_osrc:a_check_front_image is null and :Reason = 'change');
				//event_confirm=runclient('5: ' + isnull(:rcpt_form:form_prev_mode, '-') + ' -> ' + isnull(:rcpt_form:form_mode, '-') + ', ' + isnull(:Reason, ''));
				target=scanner;
				action=FindUnused;
				}

			    desig_table "widget/table"
				{
				height=222;
				overlap_scrollbar=yes;
				demand_scrollbar=yes;
				show_selection=yes;
				//initial_selection=yes;
				initial_selection = noexpand;
				//initial_selection = no;
				allow_deselection = yes;
				rowheight=null;
				cellvspacing=4;
				inner_padding=2;
				row_border_radius=6;
				colsep=0;
				titlebar=no;
				row_shadow_radius=2;
				row_shadow_offset=1;
				row_shadow_color="#a0a0a0";
				row_shadow_angle=135;
				nodata_message="No designations yet";

				t_cc "widget/table-column" { title="Fund"; value=runclient(:line_items_osrc:a_fund + ' ' + :line_items_osrc:a_fund_desc); width=350; style=bold; caption_fieldname=a_comment; wrap=yes; }
				//t_cc_desc "widget/table-column" { title="Description"; fieldname="a_fund_desc"; width=120; }
				//t_comm "widget/table-column" { title="Comments"; fieldname="a_comment"; width=120; }
				t_itemamt "widget/table-column"
				    {
				    title="Amount"; fieldname="a_amount";
				    width=200;
				    align=right; 
				    require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
				    endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
				    style=bold;
				    wrap=yes;
				    caption_value=runclient(condition(:line_items_osrc:a_non_tax_deductible, "Non-Deductible", "") + condition(:line_items_osrc:a_confidential, " Confidential ", "") + condition(char_length(:line_items_osrc:admin) > 0, " Admin=" + :line_items_osrc:admin, ""));
				    caption_align=right;
				    }
				//t_pers "widget/table-column" { title="NDed"; fieldname="a_non_tax_deductible"; width=30; type=check; }
				//t_anon "widget/table-column" { title="Conf"; fieldname="a_confidential"; width=30; type=check; }
				//t_admin "widget/table-column" { title="Adm"; fieldname="admin"; width=35; }

				desig_detail "widget/table-row-detail"
				    {
				    show_on_new=1;
				    height=136; width=562;

				    desig_detail_pane "widget/pane"
					{
					x=5; y=2; width=550; height=133;
					style=flat;
					bgcolor="#f8f8f8";
					border_radius=4;

					desig_hbox "widget/hbox"
					    {
					    x=0; y=9;
					    width=552;
					    height=96;
					    spacing=20;

					    desig_form "widget/form"
						{
						allow_modify = runclient(isnull(:receipts_osrc:a_posted, 0) == 0);
						allow_new = runclient(isnull(:receipts_osrc:a_posted, 0) == 0);
						allow_query = no;

						recalc_rtotal_on_save "widget/connector"
						    {
						    event=DataSaved;
						    target=rtotal_osrc;
						    action=QueryParam;
						    }
						recalc_rtotal_on_delete "widget/connector"
						    {
						    event=DataDeleted;
						    target=rtotal_osrc;
						    action=QueryParam;
						    }
						automark_on_delete "widget/connector"
						    {
						    event=DataDeleted;
						    target=pledge_osrc;
						    action=QueryParam;
						    do_automark=1;
						    }
						reload_pledges_on_save "widget/connector"
						    {
						    event=DataSaved;
						    target=pledge_osrc;
						    action=QueryParam;
						    do_automark=1;
						    }

						update_used_scanner_on_save "widget/connector"
						    {
						    condition=runserver(:this:use_scanner);
						    event=DataSaved;
						    target=scanner;
						    action=UpdateUsed;
						    }
						update_used_scanner_on_delete "widget/connector"
						    {
						    condition=runserver(:this:use_scanner);
						    event=DataDeleted;
						    target=scanner;
						    action=UpdateUsed;
						    }

						clear_af_types "widget/connector"
						    {
						    event=New;
						    target=f_desig_customtyp;
						    action=SetItems;
						    }
						clear_af_sel "widget/connector"
						    {
						    event=New;
						    target=f_desig_customtyp;
						    action=SetValue;
						    Value=runclient(null);
						    }

						set_ckno_from_scan "widget/connector"
						    {
						    event=New;
						    //event_condition=runclient(:last_pkey:value is null or :last_pkey:value == :f_rcpt_donorid:value);
						    target=f_desig_recvdoc;
						    action=SetValue;
						    Value=runclient(:last_ckno:value);
						    }

						set_hash_from_scan "widget/connector"
						    {
						    event=New;
						    //event_condition=runclient(:last_pkey:value is null or :last_pkey:value == :f_rcpt_donorid:value);
						    target=item_hash;
						    action=SetValue;
						    Value=runclient(:last_hash:value);
						    }

						set_file_from_scan "widget/connector"
						    {
						    event=New;
						    //event_condition=runclient(:last_pkey:value is null or :last_pkey:value == :f_rcpt_donorid:value);
						    target=item_file;
						    action=SetValue;
						    Value=runclient(:last_file:value);
						    }

						// Experimental - block the save if we don't have an amount and a valid
						// designation.
						block_save_on_bad_desig "widget/connector"
						    {
						    condition = 0;
						    event=BeforeSave;
						    event_condition=runclient(char_length(:f_desig_cc:content) > 0 and :f_desig_cc:description == '** INVALID **');
						    target = gift_entry;
						    action = Alert;
						    Message = runclient(:f_desig_cc:content + ' is not a valid gift designation.');
						    }
						block_save_on_bad_desig_2 "widget/connector"
						    {
						    event=BeforeSave;
						    event_condition=runclient((char_length(:f_desig_cc:content) > 0 or char_length(:f_desig_recvdoc:content) > 0 or char_length(:f_desig_amount:content) > 0) and (:f_desig_cc:description == '** INVALID **' or not char_length(:f_desig_cc:content) > 0));
						    event_cancel=runclient((char_length(:f_desig_cc:content) > 0 or char_length(:f_desig_recvdoc:content) > 0 or char_length(:f_desig_amount:content) > 0) and (:f_desig_cc:description == '** INVALID **' or not char_length(:f_desig_cc:content) > 0));
						    //event_cancel=runclient((char_length(:f_desig_cc:content) > 0 or char_length(:f_desig_amount) > 0) and :f_desig_cc:description == '** INVALID **');
						    //event_cancel=runclient(char_length(:f_desig_cc:content) > 0 and :f_desig_cc:description == '** INVALID **');
						    event_delay = 0.25;
						    target = f_desig_cc;
						    action = SetFocus;
						    }

						// If the user presses ENTER on an empty designation
						// form, then we start a new pledge/intent.
						new_pledge_on_save_empty_desig_1 "widget/connector"
						    {
						    event=BeforeSave;
						    event_condition=runclient(:desig_form:form_prev_mode != 'NoData' and not (char_length(:f_desig_recvdoc:content) > 0 or char_length(:f_desig_amount:content) > 0 or char_length(:f_desig_cc:content) > 0));
						    target = doing_new_pledge;
						    action = SetValue;
						    Value = runclient(1);
						    }
						new_pledge_on_save_empty_desig_2 "widget/connector"
						    {
						    event=BeforeSave;
						    event_condition=runclient(:desig_form:form_prev_mode != 'NoData' and not (char_length(:f_desig_recvdoc:content) > 0 or char_length(:f_desig_amount:content) > 0 or char_length(:f_desig_cc:content) > 0));
						    event_cancel=runclient(:desig_form:form_prev_mode != 'NoData' and not (char_length(:f_desig_recvdoc:content) > 0 or char_length(:f_desig_amount:content) > 0 or char_length(:f_desig_cc:content) > 0));
						    //event_condition=runclient(:desig_form:form_mode == 'View'); // it is View because Discard just made it do that
						    //event_cancel=runclient(:desig_form:form_mode == 'View'); // it is View because Discard just made it do that
						    target = desig_form;
						    action = Discard;
						    }

						// Hide the check image window when desig form transitions from New to View.
						hide_check_image_on_new_done "widget/connector"
						    {
						    event=View;
						    event_condition=runclient(:desig_form:form_prev_mode = 'New');
						    target=popover_view_check;
						    action=Close;
						    }

						// Remember that the user canceled out of this
						remember_desig_discard "widget/connector"
						    {
						    event=Discard;
						    event_condition=runclient(:desig_form:a_account_hash is not null);
						    target=canceled_last;
						    action=SetValue;
						    Value=runclient(:desig_form:a_account_hash);
						    }

						desig_vbox2 "widget/vbox"
						    {
						    width=260;
						    spacing=4;

						    f_desig_cc "widget/component"
							{
							height=20;
							path="/apps/kardia/modules/base/editbox_table.cmp";
							field='a_fund';
							text='Designation:';
							label_width=100;
							popup_width=380;
							popup_sql=runserver("select value = :c:a_fund, label = :c:a_fund + ' - ' + condition(isnull(:cr:a_receiptable,0) = 1, :c:a_fund_desc + ' (legacy # ' + :c:a_legacy_code + ')', '** CLOSED **') from /apps/kardia/data/Kardia_DB/a_fund/rows c, /apps/kardia/data/Kardia_DB/a_fund_receipting/rows cr where :c:a_is_posting = 1 and :c:a_ledger_number = " + quote(:this:ledger) + " and :cr:a_ledger_number =* :c:a_ledger_number and :cr:a_fund =* :c:a_fund");
							search_field_list="a_fund*,*a_fund_desc*,a_legacy_code*";
							key_name="a_fund";
							object_name="Fund";
							popup_text="Select Designation:";
							empty_desc="required";

							desig_hints "widget/hints" { style=applyonchange,uppercase; }

							set_af_types_based_on_cc "widget/connector"
							    {
							    event=DataChange;
							    target=f_desig_customtyp;
							    action=SetItems;
							    SQL = runclient("
								    select
									    value=:at:a_admin_fee_subtype,
									    label=:at:a_admin_fee_type_desc + ' [' + round(100.0 * :at:a_default_percentage, 1) + '%]',
									    selected=(:ac:a_default_subtype == :at:a_admin_fee_subtype)
								    from
									    /apps/kardia/data/Kardia_DB/a_fund_admin_fee/rows ac,
									    /apps/kardia/data/Kardia_DB/a_admin_fee_type/rows at
								    where
									    :ac:a_ledger_number = " + quote(:gift_entry:ledger) + " and
									    :ac:a_fund = " + quote(isnull(:Value, '')) + " and
									    :ac:a_ledger_number = :at:a_ledger_number and
									    :ac:a_admin_fee_type = :at:a_admin_fee_type
								    ");
							    }

							set_desc_based_on_cc "widget/connector"
							    {
							    event = DataChange;
							    target = ccinfo_osrc;
							    action = QueryParam;
							    a_ledger_number = runclient(:receipts_osrc:a_ledger_number);
							    a_fund = runclient(:Value);
							    p_partner_key = runclient(:receipts_osrc:p_donor_partner_id);
							    }

							set_accts_based_on_cc "widget/connector"
							    {
							    event = DataChange;
							    event_condition = runclient(char_length(:f_rcpt_gifttype:value) >= 1 and char_length(:f_desig_cc:content) >= 1);
							    target = f_desig_acct_dd;
							    action = SetItems;
							    SQL=runclient(" declare object info;
							    
									    select
										:info:acct = :gt:a_desig_account_code,
										:info:desc = :a:a_acct_desc
									    from
										/apps/kardia/data/Kardia_DB/a_gift_payment_type/rows gt,
										/apps/kardia/data/Kardia_DB/a_account/rows a
									    where
										:gt:a_ledger_number = " + quote(:gift_entry:ledger) + " and
										:gt:a_gift_payment_type = " + quote(:f_rcpt_gifttype:value) + " and
										:a:a_ledger_number =* :gt:a_ledger_number and
										:a:a_account_code =* :gt:a_desig_account_code
									    ;
									    
									    select
										label = :a:a_account_code + ': ' + :a:a_acct_desc,
										value = :a:a_account_code,
										selected = 1
									    from
										/apps/kardia/data/Kardia_DB/a_fund_receipting_accts/rows cr,
										/apps/kardia/data/Kardia_DB/a_account/rows a
									    where
										:cr:a_fund = " + quote(:f_desig_cc:content) + " and
										:cr:a_ledger_number = " + quote(:gift_entry:ledger) + " and
										:a:a_ledger_number = :cr:a_ledger_number and
										:a:a_account_code = :cr:a_account_code and
										:info:acct is null
									    order by
										:cr:a_is_default asc
									    ;

									    select
										label = :info:desc,
										value = :info:acct,
										selected = 1
									    where
										:info:acct is not null
									    ");
							    }

							automark_pledge_on_cc "widget/connector"
							    {
							    event=DataChange;
							    event_condition=runclient((:desig_form:form_mode != 'View' or :desig_form:form_prev_mode != 'View') and :desig_form:form_mode != 'NoData' and (:Value is null or :OldValue is not null or char_length(:f_desig_amount:content) > 0) and :p_detail_form:form_mode != 'New');
							    target=pledge_osrc;
							    action=QueryParam;
							    do_automark=1;
							    }
							}

						    ccinfo_osrc "widget/osrc"
							{
							a_fund "widget/parameter" { type=string; }
							a_ledger_number "widget/parameter" { type=string; }
							p_partner_key "widget/parameter" { type=string; }
							sql = " select
								    txt = condition(char_length(:parameters:a_fund) > 0, isnull(first(:c:a_fund_desc), '** INVALID **'), 'required'),
								    giftcnt =     (	select
											count(1)
										    from
											/apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows i
										    where
											:i:p_dn_donor_partner_id = :parameters:p_partner_key and
											:i:a_ledger_number = :c:a_ledger_number and
											:i:a_posted = 1 and
											:i:a_fund = :c:a_fund
										    )
								from
								    /apps/kardia/data/Kardia_DB/a_fund/rows c,
								    /apps/kardia/data/Kardia_DB/a_fund_receipting/rows cr
								where
								    :c:a_fund = :parameters:a_fund and
								    :c:a_ledger_number = :parameters:a_ledger_number and
								    :cr:a_ledger_number = :c:a_ledger_number and
								    :cr:a_fund = :c:a_fund and
								    :cr:a_receiptable = 1
								limit 1
								";
							readahead = 2;
							replicasize = 2;
							autoquery = never;

							set_desc_based_on_cc_2 "widget/connector"
							    {
							    event = EndQuery;
							    target = f_desig_cc;
							    action = SetValueDescription;
							    Description = runclient(:ccinfo_osrc:txt);
							    }
							}

						    f_desig_amount "widget/component"
							{
							require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
							endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
							height=20;
							path="/sys/cmp/smart_field.cmp";
							label_width=100;
							text='Amount:';
							field='a_amount';
							ctl_type=editbox;
							amt_hints "widget/hints" { default=runclient(''); }
							empty_desc="required";

							automark_pledge_on_amt "widget/connector"
							    {
							    event=DataChange;
							    event_condition=runclient((:desig_form:form_mode != 'View' or :desig_form:form_prev_mode != 'View') and :desig_form:form_mode != 'NoData' and :p_detail_form:form_mode != 'New');
							    target=pledge_osrc;
							    action=QueryParam;
							    do_automark=1;
							    }
							}

						    f_desig_amount_nosec "widget/component"
							{
							require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
							endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
							invert_security_check=yes;
							height=20;
							path="/apps/kardia/modules/base/locked_field.cmp";
							label_width=100;
							text='Amount:';
							field='a_amount';
							}

						    f_desig_intent "widget/component"
							{
							height=20;
							path="/sys/cmp/smart_field.cmp";
							label_width=100;
							text="Intent:";
							field=a_item_intent_code;
							ctl_type=dropdown;
							numdisplay=12;
							sql="select :text, :tag from /apps/kardia/data/Kardia_DB/_a_item_intent_code/rows order by :text";
							}

						    f_desig_recvdoc "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Check No:'; field='a_recv_document_id'; ctl_type=editbox; }

						    f_desig_comment "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Comments:'; field='a_comment'; ctl_type=editbox; }

						    //f_desig_custompct "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=120; text='Set Admin %:'; field='a_gift_admin_fee'; ctl_type=editbox; empty_desc="optional"; }
						    }

						desig_vbox1 "widget/vbox"
						    {
						    width=260;
						    spacing=4;

						    f_desig_motiv "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Motivation Cd.:'; field='a_motivational_code'; ctl_type=editbox; }

						    f_desig_acct "widget/component"
							{
							condition = 0;
							height=20;
							path="/apps/kardia/modules/base/editbox_table.cmp";
							field='a_account_code';
							text='GL Acct:';
							label_width=100;
							popup_width=380;
							popup_sql=runserver("select value = :a:a_account_code, label = :a:a_account_code + ' - ' + :a:a_acct_desc + isnull(' (legacy # ' + :a:a_legacy_code + ')', '') from /apps/kardia/data/Kardia_DB/a_account/rows a where :a:a_is_posting = 1 and :a:a_ledger_number = " + quote(:this:ledger));
							search_field_list="a_account_code*,*a_acct_desc*,a_legacy_code*";
							key_name="a_account_code";
							object_name="GL Account";
							popup_text="Select GL Account:";

							ac_hints "widget/hints" { default=runclient('4100'); style=readonly; }
							}

						    f_desig_acct_dd "widget/component"
							{
							height = 20;
							path = "/sys/cmp/smart_field.cmp";
							label_width=100;
							text = "GL Acct:";
							field = "a_account_code";
							ctl_type = dropdown;
							sql = "select '','' where 1 = 0";
							invalid_select_default = yes;

							set_nonded_on_glacct_change "widget/connector"
							    {
							    event=DataChange;
							    event_condition=runclient(char_length(:Value) > 0 and (:desig_form:form_mode == 'New' or :desig_form:form_mode == 'Modify'));
							    target = acctinfo_osrc;
							    action=QueryParam;
							    a_ledger_number = runclient(:receipts_osrc:a_ledger_number);
							    a_fund = runclient(:f_desig_cc:content);
							    a_account_code = runclient(:Value);
							    }

							ac_hints "widget/hints" { style=notnull; }
							}

						    f_desig_ckboxes "widget/hbox"
							{
							height=20;
							spacing=4;
							f_desig_pers "widget/component"
							    {
							    width=125;
							    path="/sys/cmp/smart_field.cmp";
							    label_width=100;
							    text='Non Tax-Ded.?';
							    field='a_non_tax_deductible';
							    ctl_type=checkbox;

							    pers_hints "widget/hints" { default=runclient(0); style=notnull; }
							    }
							f_desig_anon "widget/component" { width=148; path="/sys/cmp/smart_field.cmp"; label_width=90; text='Confidential?'; field='a_confidential'; ctl_type=checkbox; anon_hints "widget/hints" { default=runclient(0); style=notnull; } }
							}

						    f_desig_customtyp "widget/component"
							{
							height=20;
							path="/sys/cmp/smart_field.cmp";
							label_width=100;
							text='Admin Fee:';
							field='a_gift_admin_subtype';
							ctl_type=dropdown;
							}

						    checkimage_hbox "widget/hbox"
							{
							height=20;
							spacing=5;

							ci_label "widget/label" { width=95; y=3; align=right; text="Check Image:"; }

							ci_link "widget/label"
							    {
							    widget_class=link;
							    width=50;
							    y=3;
							    align=left;
							    value=runclient(condition(char_length(:item_file:value) > 4, 'View...', '(none)'));

							    on_ci_click_1 "widget/connector"
								{
								event=Click;
								event_condition=runclient(char_length(:item_file:value) > 4);
								target=popover_view_check;
								action=Open;
								}
							    on_ci_click_2 "widget/connector"
								{
								event=Click;
								event_condition=runclient(char_length(:item_file:value) > 4);
								target=check_image;
								action=LoadImage;
								Source=runclient(:item_file:value);
								}
							    on_ci_click_3 "widget/connector"
								{
								event=Click;
								event_condition=runclient(char_length(:item_file:value) > 4);
								target=image_reason;
								action=SetValue;
								Value=runclient('Gift Item for Receipt #' + :receipts_osrc:a_receipt_number);
								}
							    }

							ci_del_link "widget/label"
							    {
							    widget_class=link;
							    width=50;
							    y=3;
							    align=left;
							    value=runclient(condition(char_length(:item_file:value) > 4 and not (:rcpt_form:a_posted == 1), '(delete)', ''));

							    on_cid_click_1 "widget/connector"
								{
								event=Click;
								event_condition=runclient(char_length(:item_file:value) > 4 and not (:rcpt_form:a_posted == 1));
								target=item_hash;
								action=SetValue;
								Value=runclient(null);
								}
							    on_cid_click_2 "widget/connector"
								{
								event=Click;
								event_condition=runclient(char_length(:item_file:value) > 4 and not (:rcpt_form:a_posted == 1));
								target=item_file;
								action=SetValue;
								Value=runclient(null);
								}
							    }

							ci_unassoc_link "widget/label"
							    {
							    widget_class=link;
							    width=50;
							    y=3;
							    align=left;
							    value=runclient(condition(char_length(:item_hash:value) > 4, '(unassoc)', ''));

							    on_ciu_click_1 "widget/connector"
								{
								event=Click;
								event_condition=runclient(char_length(:item_hash:value) > 4 and not (:rcpt_form:a_posted == 1));
								target=item_hash;
								action=SetValue;
								Value=runclient(null);
								}
							    on_ciu_click_2 "widget/connector"
								{
								event=Click;
								event_condition=runclient(char_length(:item_hash:value) > 4 and (:rcpt_form:a_posted == 1));
								event_confirm=runclient("Remove the association between this line item and the check's account/routing numbers?");
								target=line_items_osrc;
								action=Modify;
								a_account_hash=runclient(null);
								}
							    }
							}

						    acctinfo_osrc "widget/osrc"
							{
							a_account_code "widget/parameter" { type=string; }
							a_fund_2 "widget/parameter" { param_name=a_fund; type=string; }
							a_ledger_number_2 "widget/parameter" { param_name=a_ledger_number; type=string; }
							sql = "select check = :a_non_tax_deductible from /apps/kardia/data/Kardia_DB/a_fund_receipting_accts/rows cr where :cr:a_fund = :parameters:a_fund and :cr:a_ledger_number = :parameters:a_ledger_number and :cr:a_account_code = :parameters:a_account_code";
							readahead = 2;
							replicasize = 2;
							autoquery = never;

							set_check_based_on_acct "widget/connector"
							    {
							    event = EndQuery;
							    target = f_desig_pers;
							    action = SetValue;
							    Value = runclient(:acctinfo_osrc:check);
							    }
							}
						    }
						}
					    }
					del_desig "widget/textbutton"
					    {
					    condition=0;
					    x=210; y=114;
					    height=24;
					    width=130;
					    text = "Delete";

					    enabled = runclient(:desig_form:is_editable and not (:rcpt_form:a_posted == 1));

					    del_d_cn "widget/connector" { event=Click; target=desig_form; action=Delete; }
					    }
					}
				    }

				desig_detail_warning "widget/table-row-detail"
				    {
				    show_on_new=1;
				    display_for=runclient(char_length(:f_desig_cc:content) > 0 and :f_desig_cc:content = :f_desig_cc:value and (:f_rcpt_donorid:content == :f_desig_cc:content or :ccinfo_osrc:giftcnt == 0));
				    height=18; width=562;
				    firsttime_ind "widget/label" { x=0; y=2; height=16; width=562; value=runclient(condition(char_length(:f_desig_cc:content) > 0 and :f_desig_cc:content = :f_desig_cc:value, condition(:f_rcpt_donorid:content == :f_desig_cc:content, "DONOR ID SAME AS DESIGNATION", condition(:ccinfo_osrc:giftcnt == 0, "FIRST TIME DONATION TO THIS FUND", "")),"")); fgcolor=runclient(condition(:desig_form:form_mode == 'New', 'red', 'yellow')); align=center; valign=middle; style=bold; }
				    }
				}
			    }
			new_desig_hbox "widget/hbox"
			    {
			    condition=0;
			    height=24; align=center; spacing=10;

			    new_desig "widget/textbutton"
				{
				width=170;
				text = "New Designation";

				enabled = runclient(:desig_form:is_newable and :rcpt_form:is_editable and not (:rcpt_form:a_posted == 1));

				new_d_cn "widget/connector" { event=Click; target=desig_form; action=New; Multi=1; }
				}
			    }

			pledges_hdr "widget/component"
			    {
			    path = "/apps/kardia/modules/base/section_header.cmp";
			    height = 26;
			    fl_height = 0;
			    text = runclient(condition(:rcpt_form:form_mode == 'New', "Pledges and Intents", condition(:p_detail_form:form_mode == 'New', '**NEW** Pledge/Intent', 'Pledges and Intents') + isnull(' for ' + isnull(:donor_osrc:acknm, :donor_osrc:nm), '')));
			    form = p_detail_form;
			    allow_new = 1;
			    allow_delete = 0;
			    allow_edit = 1;
			    object_name = "Pledge/Intent";
			    }

			pledge_osrc "widget/osrc"
			    {
			    // Basic params
			    po_ledger "widget/parameter" { type=string; param_name=a_ledger_number; default=runclient(:ledger:value); }
			    po_batch "widget/parameter" { type=integer; param_name=a_batch_number; default=runclient(:batch:value); }
			    po_gift "widget/parameter" { type=integer; param_name=a_gift_number; default=runclient(:receipts_osrc:a_gift_number); }
			    po_donor "widget/parameter" { type=string; param_name=donor; default=runclient(:receipts_osrc:p_donor_partner_id); }
			    po_ackdonor "widget/parameter" { type=string; param_name=ackdonor; default=runclient(:receipts_osrc:p_ack_partner_id); }
			    po_date "widget/parameter" { type=string; param_name=date; default=runclient(:receipts_osrc:a_gift_received_date); }
			    po_posted "widget/parameter" { type=integer; param_name=posted; default=runclient(:receipts_osrc:a_posted); }
			    po_name "widget/parameter" { type=string; param_name=name; }

			    // Automarking params
			    do_automark "widget/parameter" { type=integer; param_name=do_automark; default=runclient(:doing_automark:value); }
			    curdesig "widget/parameter" { type=string; param_name=curdesig; default=runclient(condition(char_length(:f_desig_cc:content) < 1, null, :f_desig_cc:content)); }
			    curamt "widget/parameter" { type=string; param_name=curamt; default=runclient(condition(char_length(:f_desig_amount:content) < 1, null, :f_desig_amount:content)); }
			    curitem "widget/parameter" { type=integer; param_name=curitem; default=runclient(condition(:desig_form:form_mode != 'New', :desig_form:a_split_number, null)); }

			    // Pledge active/inactive params
			    do_active "widget/parameter" { type=integer; default=runclient(0); }
			    po_pledge "widget/parameter" { type=integer; param_name=pledge_id; }
			    po_active "widget/parameter" { type=integer; param_name=pledge_active; }

			    // Intent connect/disconnect params
			    //im_pledge "widget/parameter" { type=integer; param_name=pledge_id; } // already included
			    do_connect "widget/parameter" { type=integer; default=runclient(0); }
			    po_intent "widget/parameter" { type=integer; param_name=intent_id; }
			    po_selected "widget/parameter" { type=integer; param_name=selected; }

			    sql = " exec /apps/kardia/modules/rcpt/pledge_mgmt.qy
					a_ledger_number = :parameters:a_ledger_number,
					a_batch_number = :parameters:a_batch_number,
					a_gift_number = :parameters:a_gift_number,
					name = :parameters:name,
					donor = :parameters:donor,
					ackdonor = :parameters:ackdonor,
					date = :parameters:date,
					posted = :parameters:posted,
					do_automark = :parameters:do_automark,
					    curdesig = :parameters:curdesig,
					    curamt = :parameters:curamt,
					    curitem = :parameters:curitem,
					do_active = :parameters:do_active,
					    pledge_id = :parameters:pledge_id,
					    pledge_active = :parameters:pledge_active,
					do_connect = :parameters:do_connect,
					    intent_id = :parameters:intent_id,
					    selected = :parameters:selected
				    ";
			    baseobj="/apps/kardia/data/Kardia_DB/a_subtrx_gift_intent/rows";
			    readahead=20; replicasize=20;

			    doing_new_pledge1 "widget/connector"
				{
				event=EndQuery;
				event_condition=runclient(:QueryRequestQueue == 0 and :doing_new_pledge:value == 1 and :Pending == 0);
				target=p_detail_form;
				action=New;
				Multi = 1;
				}

			    doing_new_pledge2 "widget/connector"
				{
				event=EndQuery;
				event_condition=runclient(:QueryRequestQueue == 0 and :doing_new_pledge:value == 1 and :Pending == 0);
				target=doing_new_pledge;
				action=SetValue;
				Value=runclient(0);
				}

			    doing_automark1 "widget/connector"
				{
				event=EndQuery;
				target=doing_automark;
				action=SetValue;
				Value=runclient(0);
				}

			    pledge_rcpt_link "widget/rule"
				{
				ruletype = osrc_relationship;
				target = receipts_osrc;
				key_1 = a_ledger_number;
				key_2 = a_batch_number;
				key_3 = a_gift_number;
				target_key_1 = a_ledger_number;
				target_key_2 = a_batch_number;
				target_key_3 = a_gift_number;
				}

			    pledge_table "widget/table"
				{
				height=170;
				overlap_scrollbar=yes;
				demand_scrollbar=yes;
				//initial_selection = noexpand;
				initial_selection = no;
				allow_deselection = yes;
				show_selection=yes;
				rowheight=null;
				cellvspacing=4;
				inner_padding=2;
				row_border_radius=6;
				colsep=0;
				titlebar=no;
				row_shadow_radius=2;
				row_shadow_offset=1;
				row_shadow_color="#a0a0a0";
				row_shadow_angle=135;
				nodata_message="No pledges/intents";
				row1_bgcolor=runclient(condition(:pledge_osrc:has_intent, '#ffffff', '#d0d0d0'));
				row2_bgcolor=runclient(condition(:pledge_osrc:has_intent, '#f0f0f0', '#d0d0d0'));
				//row1_bgcolor=runclient(condition(:pledge_osrc:has_intent and not :line_items_osrc:a_posted, '#ffffff', '#d0d0d0'));
				//row2_bgcolor=runclient(condition(:pledge_osrc:has_intent and not :line_items_osrc:a_posted, '#f0f0f0', '#d0d0d0'));

				toggle_pledge_on_click_column "widget/connector"
				    {
				    event=Click;
				    event_condition=runclient(:Column == 'pledge_active');
				    event_cancel=runclient(:Column == 'pledge_active');
				    target=pledge_osrc;
				    action=QueryParam;
				    do_active=1;
				    pledge_id=runclient(:pledge_osrc:a_pledge_id);
				    pledge_active=runclient(condition(:ColumnValue == '/sys/images/checkbox_checked.png', 0, 1));
				    }

				toggle_select_on_click_column "widget/connector"
				    {
				    event=Click;
				    event_condition=runclient(:Column == 'has_intent');
				    event_cancel=runclient(:Column == 'has_intent');
				    target=pledge_osrc;
				    action=QueryParam;
				    do_connect=1;
				    pledge_id=runclient(:pledge_osrc:a_pledge_id);
				    intent_id=runclient(:pledge_osrc:a_intent_number);
				    selected=runclient(condition(:ColumnValue == '/sys/images/checkbox_checked.png', 0, 1));
				    }

				pt_selected "widget/table-column"
				    {
				    width=18;
				    type=image;
				    fieldname="has_intent";
				    value=runclient(condition(:pledge_osrc:has_intent, '/sys/images/checkbox_checked.png', '/sys/images/checkbox_unchecked.png'));
				    }

				pt_seltxt "widget/table-column"
				    {
				    width=54;
				    value=runclient("This Gift");
				    }

				pt_active "widget/table-column"
				    {
				    width=18;
				    type=image;
				    fieldname="pledge_active";
				    value=runclient(condition(:pledge_osrc:a_is_active, '/sys/images/checkbox_checked.png', '/sys/images/checkbox_unchecked.png'));
				    }

				pt_acttxt "widget/table-column"
				    {
				    width=46;
				    value=runclient(condition(:pledge_osrc:has_pledge, "Active", "New"));
				    }

				pt_info "widget/table-column"
				    {
				    width=396;
				    value=runclient(
					    condition(:pledge_osrc:type_desc is not null, :pledge_osrc:type_desc + ' ', '')
					    + condition(:pledge_osrc:a_total_amount is not null, 'totaling ' + :pledge_osrc:a_total_amount + ' ', isnull('of ' + :pledge_osrc:a_amount + ' ', '')) + 'for ' + :pledge_osrc:fund_desc
					    );
				    style=bold;
				    caption_value=runclient(
					    condition(:pledge_osrc:interval_desc is not null, :pledge_osrc:interval_desc + ', ', '') 
					    + condition(:pledge_osrc:start_desc is not null, 'from ' + :pledge_osrc:start_desc + ', ', '')
					    + condition(:pledge_osrc:end_desc is not null, 'ends ' + :pledge_osrc:end_desc + ', ', '')
					    + condition(:pledge_osrc:a_gift_count is not null, 'for ' + :pledge_osrc:a_gift_count + ' gift' + condition(:pledge_osrc:a_gift_count == 1, '', 's') + ', ', '')
					    + condition(:pledge_osrc:a_comment is not null, :pledge_osrc:a_comment + ', ', '')
					    - ', '
					    );
				    }

				p_detail "widget/table-row-detail"
				    {
				    height=107;
				    width=562;
				    show_on_new=1;

				    p_detail_pane "widget/pane"
					{
					x=5; y=2; width=550; height=104;
					style=flat;
					bgcolor="#f8f8f8";
					border_radius=4;

					p_detail_form "widget/form"
					    {
					    allow_modify = runclient(isnull(:receipts_osrc:a_posted, 0) == 0);
					    allow_new = runclient(isnull(:receipts_osrc:a_posted, 0) == 0);
					    allow_query = no;

					    // If the user presses ENTER on an empty pledge
					    // form, then we start a new receipt.
					    new_rcpt_on_save_empty_pledge_1 "widget/connector"
						{
						event=BeforeSave;
						event_condition=runclient(not (char_length(:p_fund:content) > 0 or char_length(:p_amt:content) > 0 or char_length(:p_tamt:content) > 0));
						action = Discard;
						}

					    new_rcpt_on_save_empty_desig_2 "widget/connector"
						{
						event=BeforeSave;
						event_condition=runclient(:p_detail_form:form_mode == 'View' or :p_detail_form:form_mode == 'NoData');
						event_cancel=runclient(:p_detail_form:form_mode == 'View' or :p_detail_form:form_mode == 'NoData');
						target = rcpt_form;
						action = New;
						}

					    //new_def_amt "widget/connector" { event=New; target=p_amt; action=SetValue; Value=runclient(:line_items_osrc:a_amount); }
					    //new_def_fnd "widget/connector" { event=New; target=p_fund; action=SetValue; Value=runclient(:line_items_osrc:a_fund); }
					    new_def_typ "widget/connector" { event=New; target=p_type; action=SetValue; Value=runclient('I'); }
					    new_def_gc "widget/connector" { event=New; target=p_cnt; action=SetValue; Value=runclient(null); }

					    p_detail_hbox "widget/hbox"
						{
						x=0; y=10;
						width=552;
						height=92;
						spacing=8;
						row_height=20;

						p_type "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=dropdown; field=a_intent_type; width=185; label_width=50; text="Type:"; sql="select :a_intent_desc, :a_intent_type, selected=condition(:a_intent_type == 'I', 1, 0), grp=:a_allow_daf from /apps/kardia/data/Kardia_DB/a_intent_type/rows order by :a_intent_desc"; numdisplay=5; }
						p_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=editbox; field=a_amount; width=150; label_width=60; text="Amount:"; }
						p_tamt "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=editbox; field=a_total_amount; width=180; label_width=90; text="Total Amount:"; }
						//p_fund "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=editbox; field=a_fund; width=170; label_width=50; text="Fund:"; }
						p_fund "widget/component"
						    {
						    height=20;
						    path="/apps/kardia/modules/base/editbox_table.cmp";
						    field='a_fund';
						    text='Fund:';
						    label_width=50;
						    width=170;
						    popup_width=280;
						    popup_sql=runserver("select value = :c:a_fund, label = :c:a_fund + ' - ' + condition(isnull(:cr:a_receiptable,0) = 1, :c:a_fund_desc + ' (legacy # ' + :c:a_legacy_code + ')', '** CLOSED **') from /apps/kardia/data/Kardia_DB/a_fund/rows c, /apps/kardia/data/Kardia_DB/a_fund_receipting/rows cr where :c:a_is_posting = 1 and :c:a_ledger_number = " + quote(:this:ledger) + " and :cr:a_ledger_number =* :c:a_ledger_number and :cr:a_fund =* :c:a_fund");
						    search_field_list="a_fund*,*a_fund_desc*,a_legacy_code*";
						    key_name="a_fund";
						    object_name="Fund";
						    popup_text="Select Designation:";
						    empty_desc="optional";

						    p_fund_hints "widget/hints" { style=applyonchange,uppercase; }
						    }

						p_comm "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=editbox; field=a_comment; width=245; label_width=75; text="Comment:"; }
						p_cnt "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=editbox; field=a_gift_count; width=100; label_width=50; text="# Gifts:"; }
						p_interval "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=dropdown; field=a_giving_interval; width=204; label_width=80; text="How Often:"; sql="select :text, :tag from /apps/kardia/data/Kardia_DB/_a_giving_interval/rows order by :tag"; numdisplay=15; pi_default "widget/hints" { default=runclient(1); } }
						p_start "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=datetime; field=a_start_date; width=160; label_width=65; text="Starting:"; date_only=1; default_time="00:00:00"; }
						p_end "widget/component" { path="/sys/cmp/smart_field.cmp"; ctl_type=datetime; field=a_end_date; width=150; label_width=55; text="Ending:"; date_only=1; default_time="23:59:59"; }

						p_pledge_id "widget/variable" { type=integer; fieldname=a_pledge_id; pi_hints "widget/hints" { default=runclient(null); } }
						p_donor "widget/variable" { type=string; fieldname=p_dn_donor_partner_id; pd_hints "widget/hints" { default=runclient(:receipts_osrc:p_donor_partner_id); } }
						p_ack "widget/variable" { type=string; fieldname=p_dn_ack_partner_id; pad_hints "widget/hints" { default=runclient(:receipts_osrc:p_ack_partner_id); } }
						p_auto "widget/variable" { type=string; fieldname=a_autogen; pag_hints "widget/hints" { default=runclient(0); } }

						intent_meta "widget/component" { path="/apps/kardia/modules/base/record_metadata_hidden.cmp"; }
						}
					    }
					}
				    }
				}
			    }
			}
		    }
		}
	    }

	manage_pane "widget/pane"
	    {
	    width=195;
	    style=flat;
	    bgcolor="#f8f8f8";
	    border_radius=12;
	    shadow_radius=4;
	    shadow_offset=2;
	    shadow_color="#808080";
	    shadow_angle=135;

	    manage_vbox "widget/vbox"
		{
		x=0; y=0;
		width=195;
		height=682;
		spacing=10;

		dinfo_pane "widget/pane"
		    {
		    height = 276;
		    style = flat;
		    //bgcolor = runclient(condition(isnull(:f_rcpt_donorid:value, '') != '' and ((:desig_form:form_mode = 'NoData' or :desig_form:form_mode = 'New')) and (:rcpt_form:form_mode == 'New' or :rcpt_form:form_mode == 'Modify' or :rcpt_form:form_mode = 'View') and :line_items_osrc:a_ledger_number is null and isnull(:receipts_osrc:a_posted, 0) = 0, '#ffff80', '#f8f8f8'));

		    dinfo_vbox "widget/vbox"
			{
			x=5; y=5;
			width = 185;
			height = 266;
			spacing = 10;

			managelbl "widget/component"
			    {
			    path="/apps/kardia/modules/base/section_header.cmp";
			    //background = "/apps/kardia/images/bg/ls_blue_gradient_light.png";
			    height=26;
			    fl_height=0;
			    text = runclient(isnull(condition(char_length(:f_rcpt_donorid:value) <= 1, "", condition(:manage_osrc:partner = :f_rcpt_donorid:value and :manage_osrc:partner = :donor_osrc:p_partner_key, :donor_osrc:nm, condition(:manage_osrc:partner = :f_rcpt_ackid:value and :manage_osrc:partner = :donor_osrc:ackpartner, :donor_osrc:acknm, null))), condition(:rcpt_form:form_mode == 'View', :receipts_osrc:viewnameff, "")));
			    custom_new=1;
			    allow_save=0;
			    allow_cancel=0;

			    on_add "widget/connector" { event=New; target=popover_add_item; action=Open; IsModal=1; PointAt=managelbl; PointSide=runclient('top'); }
			    }

			manage_osrc "widget/osrc"
			    {
			    mo_partner "widget/parameter" { param_name=partner; type=string; }
			    mo_ledger "widget/parameter" { param_name=ledger; type=string; }
			    sql = " select
					*,
					edit = '/apps/kardia/images/icons/tango-edit.svg'
				    from
					expression('/apps/kardia/modules/rcpt/donor_data.qy?partner=' + :parameters:partner + '&ledger=' + :parameters:ledger)
				    ";
			    replicasize=20;
			    readahead=20;

			    manage_link "widget/rule"
				{
				condition=0;
				ruletype=osrc_relationship;
				target=receipts_osrc;
				key_1=partner;
				target_key_1=p_donor_partner_id;
				key_2=ledger;
				target_key_2=a_ledger_number;
				}

			    manage_table "widget/table"
				{
				height=230;
				overlap_scrollbar=yes;
				demand_scrollbar=yes;
				show_selection=no;
				rowheight=null;
				cellvspacing=4;
				inner_padding=2;
				row_border_radius=6;
				colsep=0;
				titlebar=no;
				row_shadow_radius=2;
				row_shadow_offset=1;
				row_shadow_color="#a0a0a0";
				row_shadow_angle=135;
				nodata_message="";

				t_info "widget/table-column" { title="Donor"; fieldname=data; width=164; style=bold; caption_fieldname=name; }
				t_edit "widget/table-column" { title="Edit"; fieldname=edit; width=26; image_maxwidth=20; image_maxheight=20; type=image; }

				click_partner "widget/connector"
				    {
				    event = Click;
				    event_condition = runclient(:Column == 'edit' and :name == 'Name');
				    target=popover_partner;
				    action=Open;
				    PointAt=manage_table;
				    PointSide=runclient("right");
				    IsModal=1;
				    }

				click_address "widget/connector"
				    {
				    event = Click;
				    event_condition = runclient(:Column == 'edit' and right(:name, 7) == 'Address');
				    target=popover_address;
				    action=Open;
				    PointAt=manage_table;
				    PointSide=runclient("right");
				    IsModal=1;
				    }

				click_donor "widget/connector"
				    {
				    event = Click;
				    event_condition = runclient(:Column == 'edit' and :name == 'Donor Prefs');
				    target=popover_donorinfo;
				    action=Open;
				    PointAt=manage_table;
				    PointSide=runclient("right");
				    IsModal=1;
				    }

				click_contact "widget/connector"
				    {
				    event = Click;
				    event_condition = runclient(:Column == 'edit' and right(:name, 7) != 'Address' and :name != 'Name' and :name != 'Donor Prefs');
				    target=popover_contact;
				    action=Open;
				    PointAt=manage_table;
				    PointSide=runclient("right");
				    IsModal=1;
				    }
				}
			    }
			}
		    }

		hist_pane "widget/pane"
		    {
		    height = 400;
		    style = flat;
		    border_radius=12;
		    bgcolor = runclient(condition(isnull(:f_rcpt_donorid:value, '') != '' and ((:desig_form:form_mode = 'NoData' or :desig_form:form_mode = 'New')) and (:rcpt_form:form_mode == 'New' or :rcpt_form:form_mode == 'Modify' or :rcpt_form:form_mode = 'View') and :line_items_osrc:a_ledger_number is null and isnull(:receipts_osrc:a_posted, 0) = 0, '#ffff80', '#f8f8f8'));

		    hist_vbox "widget/vbox"
			{
			x=5; y=5;
			width = 185;
			height = 390;
			spacing = 10;

			histlbl "widget/component"
			    {
			    path="/apps/kardia/modules/base/section_label.cmp";
			    //background = "/apps/kardia/images/bg/ls_blue_gradient_light.png";
			    height=26;
			    fl_height=0;
			    text = runclient("Giving History");
			    }

			hist_osrc "widget/osrc"
			    {
			    hist_partner "widget/parameter" { param_name=partner; type=string; }
			    hist_ackpartner "widget/parameter" { param_name=ackpartner; type=string; }
			    hist_ledger "widget/parameter" { param_name=ledger; type=string; }
			    hist_rcptno "widget/parameter" { param_name=receipt; type=integer; }
			    sql = " declare object partnerinfo;

				    select 
					:partnerinfo:partner = :parameters:partner,
					:partnerinfo:ackpartner = :parameters:ackpartner
				    ;

				    select
					:partnerinfo:partner = :p_donor_partner_id,
					:partnerinfo:ackpartner = :p_ack_partner_id
				    from
					/apps/kardia/data/Kardia_DB/a_subtrx_gift_group/rows g
				    where
					:g:a_receipt_number = :parameters:receipt and
					:parameters:receipt is not null
				    ;
			    
				    select
					*,
					rowid = :cx__rowid
				    from
					expression('/apps/kardia/modules/rcpt/giving_history.qy?partner=' + isnull(:partnerinfo:partner, '') + '&ledger=' + :parameters:ledger + '&ackpartner=' + isnull(:partnerinfo:ackpartner, ''))
				    limit
					15
				    ";
			    replicasize=50;
			    readahead=50;

			    hist_link_manual "widget/connector"
				{
				condition=0;
				source=receipts_osrc;
				event=DataFocusChanged;
				action=QueryParam;
				partner=runclient(:receipts_osrc:p_donor_partner_id);
				ledger=runclient(:receipts_osrc:a_ledger_number);
				}

			    hist_link "widget/rule"
				{
				condition=0;
				ruletype=osrc_relationship;
				target=receipts_osrc;
				key_1=partner;
				target_key_1=p_donor_partner_id;
				key_2=ledger;
				target_key_2=a_ledger_number;
				}

			    hist_table "widget/table"
				{
				height=354;
				overlap_scrollbar=yes;
				demand_scrollbar=yes;
				show_selection=yes;
				initial_selection=no;
				rowheight=null;
				cellvspacing=4;
				inner_padding=2;
				row_border_radius=6;
				colsep=0;
				titlebar=no;
				row_shadow_radius=2;
				row_shadow_offset=1;
				row_shadow_color="#a0a0a0";
				row_shadow_angle=135;
				nodata_message="no history matches";

				gift_detail "widget/table-row-detail"
				    {
				    height=49;

				    gift_detail_label "widget/label"
					{
					x=17; y=5;
					width=240; height=43;
					font_size=9;
					textcolor=white;

					value=runclient('Admin Notes: ' + :hist_osrc:comment + '\nGift Type: ' + :hist_osrc:gift_type + '\nDonor: ' + :hist_osrc:donortxt + isnull('\nAck.: ' + :hist_osrc:ackdonortxt, ''));
					}
				    }

				copy_data "widget/table-row-detail"
				    {
				    height=30;
				    display_for=runclient(((:desig_form:form_mode = 'NoData' or :desig_form:form_mode = 'New')) and (:rcpt_form:form_mode == 'New' or :rcpt_form:form_mode == 'Modify' or :rcpt_form:form_mode = 'View') and :line_items_osrc:a_ledger_number is null and isnull(:receipts_osrc:a_posted, 0) = 0);

				    copy_data_ctls_hbox "widget/hbox"
					{
					x=10; y=5;
					width=165; height=24;
					align=center; spacing=10;

					copy_rcpt "widget/textbutton"
					    {
					    height=24;
					    width=130;
					    text = "<< Copy Gift";

					    enabled = runclient(((:desig_form:form_mode = 'NoData' or :desig_form:form_mode = 'New')) and (:rcpt_form:form_mode == 'New' or :rcpt_form:form_mode == 'Modify' or :rcpt_form:form_mode = 'View') and :line_items_osrc:a_ledger_number is null and isnull(:receipts_osrc:a_posted, 0) = 0);

					    copy_open_pad1 "widget/connector"
						{
						event = Click;
						target = popover_ask_desig_detail;
						action = Open;
						IsModal = 1;
						}

					    //copy_r_cn "widget/connector" { event=Click; target=rcpt_form; action=Delete; }
					    }
					}
				    }

				ht_num "widget/table-column"
				    {
				    title="";
				    value=runclient(condition(:hist_osrc:rowid <= 8, '' + (:hist_osrc:rowid + 1) + ') ', ''));
				    width=13;
				    style=bold;
				    }
				ht_info "widget/table-column"
				    {
				    title="Date";
				    value=runclient(:hist_osrc:date);
				    width=107;
				    style=bold;
				    caption_value=runclient(:hist_osrc:itemdesig);
				    }
				ht_amt "widget/table-column"
				    {
				    require_one_endorsement="kardia:gift_manage","kardia:gift_entry","kardia:gift_amt";
				    endorsement_context=runserver("kardia:ledger:" + :this:ledger + ":");
				    title="Amount";
				    fieldname="amount";
				    width=70;
				    align=right; 
				    style=bold;
				    wrap=yes;
				    caption_value=runclient(:hist_osrc:itemamt);
				    caption_align=right;
				    }
				}
			    }
			}
		    }
		}
	    }
	}

    // Some hidden fields that might mess up the vbox spacings if put in the layout above.
    rcpt_meta "widget/component" { path="/apps/kardia/modules/base/record_metadata_hidden.cmp"; form=rcpt_form; }
    item_meta "widget/component" { path="/apps/kardia/modules/base/record_metadata_hidden.cmp"; form=desig_form; }

    rcpt_posted "widget/variable" { form=rcpt_form; fieldname=a_posted; rp_hints "widget/hints" { default=runclient(0); } }
    rcpt_glposted "widget/variable" { form=rcpt_form; fieldname=a_posted_to_gl; rgp_hints "widget/hints" { default=runclient(0); } }
    rcpt_rcptsent "widget/variable" { form=rcpt_form; fieldname=a_receipt_sent; rsn_hints "widget/hints" { default=runclient(0); } }
    rcpt_ackrcptsent "widget/variable" { form=rcpt_form; fieldname=a_ack_receipt_sent; arsn_hints "widget/hints" { default=runclient(0); } }
    rcpt_firstgft "widget/variable" { form=rcpt_form; fieldname=a_first_gift; rfg_hints "widget/hints" { default=runclient(0); } }
    //rcpt_goodsprv "widget/variable" { form=rcpt_form; fieldname=a_goods_provided; rgds_hints "widget/hints" { default=runclient(0); } }

    item_posted "widget/variable" { form=desig_form; fieldname=a_posted; dp_hints "widget/hints" { default=runclient(0); } }
    item_glposted "widget/variable" { form=desig_form; fieldname=a_posted_to_gl; dgp_hints "widget/hints" { default=runclient(0); } }
    item_hash "widget/variable" { form=desig_form; fieldname=a_account_hash; }
    item_file "widget/variable" { form=desig_form; fieldname=a_check_front_image; }
    item_dn_donor "widget/variable" { form=desig_form; fieldname=p_dn_donor_partner_id; idd_hints "widget/hints" { default=runclient(:rcpt_form:p_donor_partner_id); } }
    item_dn_ack "widget/variable" { form=desig_form; fieldname=p_dn_ack_partner_id; ida_hints "widget/hints" { default=runclient(:rcpt_form:p_ack_partner_id); } }
    item_dn_pass "widget/variable" { form=desig_form; fieldname=p_dn_pass_partner_id; idp_hints "widget/hints" { default=runclient(:rcpt_form:p_pass_partner_id); } }
    item_dn_gtype "widget/variable" { form=desig_form; fieldname=a_dn_gift_type; idg_hints "widget/hints" { default=runclient(:rcpt_form:a_gift_type); } }
    item_dn_rcvd "widget/variable" { form=desig_form; fieldname=a_dn_gift_received_date; idgr_hints "widget/hints" { default=runclient(:rcpt_form:a_gift_received_date); } }
    item_dn_post "widget/variable" { form=desig_form; fieldname=a_dn_gift_postmark_date; idgp_hints "widget/hints" { default=runclient(:rcpt_form:a_gift_postmark_date); } }
    item_dn_rcpt "widget/variable" { form=desig_form; fieldname=a_dn_receipt_number; idrc_hints "widget/hints" { default=runclient(:rcpt_form:a_receipt_number); } }

    nextrcpt "widget/component"
	{
	path = "/apps/kardia/modules/rcpt/next_receipt.cmp";

	generate_rcptno_on_new "widget/connector"
	    {
	    source=rcpt_form;
	    event=New;
	    action=GetReceiptNumber;
	    ledger=runclient(:gift_entry:ledger);
	    }
	got_rcptno "widget/connector"
	    {
	    event=ReceiptNumber;
	    target=f_rcpt_rcptno;
	    action=SetValue;
	    Value = runclient(:receipt);
	    }
	}

    rtotal_osrc "widget/osrc"
	{
	sql = "select amt = isnull(sum(:a_amount), $0) from /apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows";
	readahead = 2;
	replicasize = 2;
	autoquery = never;

	rtotal_sync "widget/rule"
	    {
	    ruletype = osrc_relationship;
	    target = receipts_osrc;
	    key_1 = a_ledger_number;
	    key_2 = a_batch_number;
	    key_3 = a_gift_number;
	    target_key_1 = a_ledger_number;
	    target_key_2 = a_batch_number;
	    target_key_3 = a_gift_number;
	    autoquery = false;
	    }

	set_ttl_in_rcpt "widget/connector"
	    {
	    event=EndQuery;
	    target=receipts_osrc;
	    action=Modify;
	    a_amount = runclient(:rtotal_osrc:amt);
	    }

//	set_ttl_in_rcpt "widget/connector"
//	    {
//	    event=EndQuery;
//	    target=f_rcpt_total;
//	    action=SetValue;
//	    Value=runclient(:rtotal_osrc:amt);
//	    }
//	save_ttl_for_rcpt "widget/connector"
//	    {
//	    event=EndQuery;
//	    target=rcpt_form;
//	    action=Save;
//	    }
	}

    auto_batch_total_refresh_on_rcpt_ttl_change "widget/connector"
	{
	source = receipts_osrc;
	condition=runserver(:this:by_donor == 0);
	event = Modified;
	target = batch_osrc;
	action = RefreshObject;
	}

    reprint_receipt_window "widget/childwindow"
	{
	width=400; height=250;
	x=290; y=215;
	style=dialog;
	modal=yes;
	titlebar=no;
	toplevel=yes;
	visible=no;
	border_radius=16;

	reprint_vbox "widget/vbox"
	    {
	    x=10; y=10;
	    width=378; height=228;
	    spacing=10;

	    reprint_title "widget/label" { height=20; font_size=15; style=bold; align=center; value=runclient("Re-print " + condition(:receipts_osrc:a_is_cash == 0, "Noncash ", "") + condition(:receipts_osrc:p_ack_partner_id is null, "Receipt", "Acknowledgement") + " #" + :receipts_osrc:a_receipt_number + "?"); }

	    reprint_warning "widget/label" { height=60; style=italic; value=runclient(condition(condition(:receipts_osrc:p_ack_partner_id is not null, :receipts_osrc:a_ack_receipt_sent, :receipts_osrc:a_receipt_sent), "Do you really want to re-print single receipt " + :receipts_osrc:a_receipt_number + "?  Since it was already printed, this will not update its Sent Date.", "Do you really want to print single receipt " + :receipts_osrc:a_receipt_number + "?  This will not set its Sent Date and mark it as having been sent.  To do that, please print the whole batch from the 'Receipts Batches' window.")); }

	    show_bg "widget/component"
		{
		path="/sys/cmp/smart_field.cmp";
		ctl_type=checkboxleft;
		text="Print Receipt Background?"; 
		label_width=140; 
		height=20;
		
		show_bg_hints "widget/hints" { style=notnull; default=0; } 

		set_zero_on_open "widget/connector" { source=reprint_receipt_window; event=Open; action=SetValue; Value=0; }
		}

	    reprint_sep "widget/autolayoutspacer" { height=60; }

	    reprint_ctls "widget/hbox"
		{
		height=24;
		align=center;
		spacing=10;

		reprint_ok "widget/textbutton"
		    {
		    text = runclient(condition(:receipts_osrc:p_ack_partner_id is null, condition(:receipts_osrc:a_receipt_sent, "Reprint", "Print"), condition(:receipts_osrc:a_ack_receipt_sent, "Reprint", "Print")));
		    reprint_ok_cn "widget/connector" 
			{
			event=Click;
			target = gift_entry;
			action = Launch;
			Source=runclient(condition(:receipts_osrc:a_is_cash != 0, condition(:receipts_osrc:p_ack_partner_id is not null, :acks_rpt:value, :receipts_rpt:value), :nc_rpt:value));
			Name=runclient("OneReceipt");
			Width=800;
			Height=600;
			ledger_number=runclient(:receipts_osrc:a_ledger_number);
			batch_number=runclient(:receipts_osrc:a_batch_number);
			gift_number=runclient(:receipts_osrc:a_gift_number);
			show_background=runclient(:show_bg:value);
			}
		    reprint_ok_cn2 "widget/connector" { event=Click; target=reprint_receipt_window; action=Close; }
		    }

		reprint_cancel "widget/textbutton"
		    {
		    text = "Cancel";
		    reprint_cancel_cn "widget/connector" { event=Click; target=reprint_receipt_window; action=Close; }
		    }
		}
	    }
	}


    popover_add_item "widget/childwindow"
	{
	width=170; height=170;
	x=415; y=265;
	style=dialog;
	modal=yes;
	fl_y=0;
	titlebar=no;
	visible=no;
	border_style=solid;
	border_color="#f8f8f8";
	background=null;
	bgcolor="#f8f8f8";
	border_radius=12;
	shadow_radius=4;
	shadow_offset=2;
	shadow_color="#808080";
	shadow_angle=135;

	add_item_vbox "widget/vbox"
	    {
	    x=10; y=10; width=135; height=130;
	    spacing=10;

	    add_item_pane "widget/pane"
		{
		height=112;
		width=150;
		style=bordered;
		border_color="#c0c0c0";
		border_radius=10;
		
		add_item_btn_vbox "widget/vbox"
		    {
		    x=9; y=9;
		    height=92;
		    width=130;
		    spacing=10;

		    add_address "widget/textbutton"
			{
			text = "New Address";
			width=130; height=24;

			on_addaddressinfo1 "widget/connector"
			    {
			    event=Click;
			    target=address_form;
			    action=New;
			    }
			on_addaddressinfo2 "widget/connector"
			    {
			    event=Click;
			    target=popover_address;
			    action=Open;
			    PointAt=add_address;
			    PointSide=runclient("right");
			    IsModal=1;
			    }
			}
		    add_contact "widget/textbutton"
			{
			text = "New Contact";
			width=130; height=24;

			on_addcontactinfo1 "widget/connector"
			    {
			    event=Click;
			    target=contact_form;
			    action=New;
			    }
			on_addcontactinfo2 "widget/connector"
			    {
			    event=Click;
			    target=popover_contact;
			    action=Open;
			    PointAt=add_contact;
			    PointSide=runclient("right");
			    IsModal=1;
			    }
			}
		    add_donorinfo "widget/textbutton"
			{
			text = "New Donor Pref";
			enabled=runclient(:donor_osrc:donor_rec is null);
			width=130; height=24;

			on_adddonorinfo "widget/connector"
			    {
			    event=Click;
			    target=popover_donorinfo;
			    action=Open;
			    PointAt=add_donorinfo;
			    PointSide=runclient("right");
			    IsModal=1;
			    }
			}
		    }
		}
	    cancel_add "widget/textbutton"
		{
		text = "Close";
		width=130; height=24;
		x=10;
		on_cancel_add "widget/connector" { event=Click; target=popover_add_item; action=Close; }
		}
	    }
	}

    popover_partner "widget/childwindow"
	{
	width=600; height=240;
	x=200; y=100;
	fl_y=0;
	titlebar=no;
	visible=no;
	border_style=solid;
	border_color="#f8f8f8";
	background=null;
	bgcolor="#f8f8f8";
	border_radius=12;
	shadow_radius=4;
	shadow_offset=2;
	shadow_color="#808080";
	shadow_angle=135;

	onclose_close_itemlist "widget/connector" { event=Close; target=popover_add_item; action=Close; event_delay=0.05; }

	partner_osrc "widget/osrc"
	    {
	    sql = "select * from /apps/kardia/data/Kardia_DB/p_partner/rows";

	    partner_link "widget/rule"
		{
		ruletype=osrc_relationship;
		target=manage_osrc;
		revealed_only=yes;
		key_1=p_partner_key;
		target_key_1=key;
		}

	    partner_form "widget/form"
		{
		on_form_discard "widget/connector" { event=Discard; target=popover_partner; action=Close; }
		on_form_save1 "widget/connector" { event=DataSaved; target=popover_partner; action=Close; }
		on_form_save2 "widget/connector" { event=DataSaved; target=manage_osrc; action=RefreshObject; }
		on_form_save3 "widget/connector" { event=DataSaved; target=receipts_osrc; action=RefreshObject; }

		partner_vbox "widget/vbox"
		    {
		    x=20; y=15; width=560; height=200;
		    spacing=15;

		    partner_title "widget/label" { height=16; font_size=16; style=bold; align=center; text="Update Donor"; }

		    partner_fields "widget/component" { height=140; path="/apps/kardia/modules/base/p_partner_fields.cmp"; }

		    partner_ctls_hbox "widget/hbox"
			{
			height=24;
			spacing=10;
			align=center;

			partner_save "widget/textbutton"
			    {
			    width=130; height=24;
			    text="Save";
			    enabled=runclient(:partner_form:is_savable);

			    on_save1 "widget/connector" { event=Click; target=partner_form; action=Save; }
			    }

			partner_cancel "widget/textbutton"
			    {
			    width=130; height=24;
			    text=runclient(condition(:partner_form:is_discardable, "Cancel", "Close"));

			    on_cancel1 "widget/connector" { event=Click; target=partner_form; action=Discard; }
			    on_cancel2 "widget/connector" { event=Click; target=popover_partner; action=Close; }
			    }
			}
		    }
		}
	    }
	}

    popover_address "widget/childwindow"
	{
	width=600; height=288;
	x=200; y=100;
	fl_y=0;
	titlebar=no;
	visible=no;
	border_style=solid;
	border_color="#f8f8f8";
	background=null;
	bgcolor="#f8f8f8";
	border_radius=12;
	shadow_radius=4;
	shadow_offset=2;
	shadow_color="#808080";
	shadow_angle=135;

	onclose_close_itemlist2 "widget/connector" { event=Close; target=popover_add_item; action=Close; event_delay=0.05; }

	address_osrc "widget/osrc"
	    {
	    sql = "select * from /apps/kardia/data/Kardia_DB/p_location/rows";
	    baseobj = "/apps/kardia/data/Kardia_DB/p_location/rows";

	    address_link "widget/rule"
		{
		ruletype=osrc_relationship;
		target=manage_osrc;
		revealed_only=yes;
		key_1=name;
		target_key_1=key;
		key_2=p_partner_key;
		target_key_2=partner;
		}

	    address_form "widget/form"
		{
		confirm_discard=no;

		on_aform_discard "widget/connector" { event=Discard; target=popover_address; action=Close; }
		on_aform_save1 "widget/connector" { event=DataSaved; target=popover_address; action=Close; }
		on_aform_save2 "widget/connector" { event=DataSaved; target=manage_osrc; action=Refresh; }
		on_aform_save3 "widget/connector" { event=DataSaved; target=receipts_osrc; action=RefreshObject; }
		on_aform_save4 "widget/connector" { event=DataSaved; target=donor_osrc; action=Refresh; }

		address_vbox "widget/vbox"
		    {
		    x=20; y=15; width=560; height=248;
		    spacing=15;

		    address_title "widget/label" { height=16; font_size=16; style=bold; align=center; text="Update Address"; }

		    address_fields "widget/component" { height=188; path="/apps/kardia/modules/base/p_location_fields.cmp"; }

		    address_ctls_hbox "widget/hbox"
			{
			height=24;
			spacing=10;
			align=center;

			address_save "widget/textbutton"
			    {
			    width=130; height=24;
			    text="Save";
			    enabled=runclient(:address_form:is_savable);

			    on_asave1 "widget/connector" { event=Click; target=address_form; action=Save; }
			    }

			address_cancel "widget/textbutton"
			    {
			    width=130; height=24;
			    text=runclient(condition(:address_form:is_discardable, "Cancel", "Close"));

			    on_acancel1 "widget/connector" { event=Click; target=address_form; action=Discard; }
			    on_acancel2 "widget/connector" { event=Click; target=popover_address; action=Close; }
			    }
			}
		    }
		}
	    }
	}

    popover_contact "widget/childwindow"
	{
	width=600; height=173;
	x=200; y=100;
	fl_y=0;
	titlebar=no;
	visible=no;
	border_style=solid;
	border_color="#f8f8f8";
	background=null;
	bgcolor="#f8f8f8";
	border_radius=12;
	shadow_radius=4;
	shadow_offset=2;
	shadow_color="#808080";
	shadow_angle=135;

	onclose_close_itemlist3 "widget/connector" { event=Close; target=popover_add_item; action=Close; event_delay=0.05; }

	autoload_locations "widget/connector"
	    {
	    event=Open;
	    target=contact_fields;
	    action=SetLocationItems;
	    SQL=runclient("
		    select 
			label = :p_location_type + ': ' + isnull(:p_city + ', ','') + isnull(:p_state_province,'') + ' (' + rtrim(isnull(:p_address_1 + ' ','') + isnull(:p_address_2 + ' ','') + isnull(:p_address_3,'')) + ')',
			value = :p_location_id
		    from
			/apps/kardia/data/Kardia_DB/p_location/rows where :p_revision_id = 0 and :p_partner_key = " + quote(:receipts_osrc:p_donor_partner_id) + "
		    ;
		    select
			label = :tag + ': (' + :text + ', no address)',
			value = :tag
		    from
			/apps/kardia/data/Kardia_DB/_p_location_type/rows
		    ");
	    }

	contact_osrc "widget/osrc"
	    {
	    sql = "select * from /apps/kardia/data/Kardia_DB/p_contact_info/rows";
	    baseobj = "/apps/kardia/data/Kardia_DB/p_contact_info/rows";

	    contact_link "widget/rule"
		{
		ruletype=osrc_relationship;
		target=manage_osrc;
		revealed_only=yes;
		key_1=name;
		target_key_1=key;
		key_2=p_partner_key;
		target_key_2=partner;
		}

	    contact_form "widget/form"
		{
		confirm_discard=no;

		on_cform_discard "widget/connector" { event=Discard; target=popover_contact; action=Close; }
		on_cform_save1 "widget/connector" { event=DataSaved; target=popover_contact; action=Close; }
		on_cform_save2 "widget/connector" { event=DataSaved; target=manage_osrc; action=Refresh; }
		on_cform_save3 "widget/connector" { event=DataSaved; target=donor_osrc; action=Refresh; }

		contact_vbox "widget/vbox"
		    {
		    x=20; y=15; width=560; height=133;
		    spacing=15;

		    contact_title "widget/label" { height=16; font_size=16; style=bold; align=center; text="Update Contact Info"; }

		    contact_fields "widget/component" { height=73; path="/apps/kardia/modules/base/p_contact_info_fields.cmp"; }

		    contact_ctls_hbox "widget/hbox"
			{
			height=24;
			spacing=10;
			align=center;

			contact_save "widget/textbutton"
			    {
			    width=130; height=24;
			    text="Save";
			    enabled=runclient(:contact_form:is_savable);

			    on_csave1 "widget/connector" { event=Click; target=contact_form; action=Save; }
			    }

			contact_cancel "widget/textbutton"
			    {
			    width=130; height=24;
			    text=runclient(condition(:contact_form:is_discardable, "Cancel", "Close"));

			    on_ccancel1 "widget/connector" { event=Click; target=contact_form; action=Discard; }
			    on_ccancel2 "widget/connector" { event=Click; target=popover_contact; action=Close; }
			    }
			}
		    }
		}
	    }
	}

    popover_donorinfo "widget/childwindow"
	{
	width=600; height=144;
	x=200; y=100;
	fl_y=0;
	titlebar=no;
	visible=no;
	border_style=solid;
	border_color="#f8f8f8";
	background=null;
	bgcolor="#f8f8f8";
	border_radius=12;
	shadow_radius=4;
	shadow_offset=2;
	shadow_color="#808080";
	shadow_angle=135;

	onclose_close_itemlist4 "widget/connector" { event=Close; target=popover_add_item; action=Close; event_delay=0.05; }

	donorinfo_osrc "widget/osrc"
	    {
	    sql = "select * from /apps/kardia/data/Kardia_DB/p_donor/rows";
	    baseobj = "/apps/kardia/data/Kardia_DB/p_donor/rows";

	    donorinfo_link "widget/rule"
		{
		ruletype=osrc_relationship;
		target=manage_osrc;
		revealed_only=yes;
		key_1=name;
		target_key_1=key;
		key_2=p_partner_key;
		target_key_2=partner;
		}

	    donorinfo_form "widget/form"
		{
		on_dform_discard "widget/connector" { event=Discard; target=popover_donorinfo; action=Close; }
		on_dform_save1 "widget/connector" { event=DataSaved; target=popover_donorinfo; action=Close; }
		on_dform_save2 "widget/connector" { event=DataSaved; target=manage_osrc; action=Refresh; }
		on_dform_save3 "widget/connector" { event=DataSaved; target=donor_osrc; action=Refresh; }

		donorinfo_vbox "widget/vbox"
		    {
		    x=20; y=15; width=560; height=104;
		    spacing=15;

		    donorinfo_title "widget/label" { height=16; font_size=16; style=bold; align=center; text="Update Donor Preferences"; }

		    donorinfo_fields "widget/component" { height=44; path="/apps/kardia/modules/rcpt/p_donor_fields.cmp"; }

		    donorinfo_ctls_hbox "widget/hbox"
			{
			height=24;
			spacing=10;
			align=center;

			donorinfo_save "widget/textbutton"
			    {
			    width=130; height=24;
			    text="Save";
			    enabled=runclient(:donorinfo_form:is_savable);

			    on_dsave1 "widget/connector" { event=Click; target=donorinfo_form; action=Save; }
			    }

			donorinfo_cancel "widget/textbutton"
			    {
			    width=130; height=24;
			    text=runclient(condition(:donorinfo_form:is_discardable, "Cancel", "Close"));

			    on_dcancel1 "widget/connector" { event=Click; target=donorinfo_form; action=Discard; }
			    on_dcancel2 "widget/connector" { event=Click; target=popover_donorinfo; action=Close; }
			    }
			}

		    donorinfo_ledger "widget/variable" { type=string; fieldname=a_gl_ledger_number; dil_hints "widget/hints" { default=runclient(:ledger:value); } }
		    donorinfo_allow "widget/variable" { type=integer; fieldname=p_allow_contributions; dac_hints "widget/hints" { default=runclient(1); } }
		    donorinfo_org "widget/variable" { type=integer; fieldname=p_org_name_first; don_hints "widget/hints" { default=runclient(0); } }
		    }
		}
	    }
	}

    popover_ask_desig_detail "widget/childwindow"
	{
	width=350; height=240;
	x=315; y=220;
	titlebar=no;
	visible=no;
	border_style=solid;
	border_color="#f8f8f8";
	background=null;
	bgcolor="#f8f8f8";
	border_radius=12;
	shadow_radius=4;
	shadow_offset=2;
	shadow_color="#808080";
	shadow_angle=135;

	copy_open_pad2 "widget/connector" { event = Open; target = f_pad_ckno; action = SetFocus; }
	copy_open_pad3 "widget/connector" { event = Open; target = f_pad_ckno; action = SetValue; Value=runclient(:last_ckno:value); }
	copy_open_pad4 "widget/connector" { event = Open; target = f_pad_donor; action = SetValue; Value=runclient(:hist_osrc:donortxt); }
	copy_open_pad5 "widget/connector" { event = Open; target = f_pad_ack; action = SetValue; Value=runclient(isnull(:hist_osrc:ackdonortxt, '')); }
	copy_open_pad6 "widget/connector" { event = Open; target = f_pad_amount; action = SetValue; Value=runclient(:hist_osrc:amount); }

	pad_vbox "widget/vbox"
	    {
	    x=10; y=10; width=330; height=220;
	    spacing=10;

	    pad_title "widget/label" { height=20; align=center; font_size=16; style=bold; text="Copy Gift"; }

	    pad_form "widget/form"
		{
		allow_new = yes;

		f_pad_donor "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Donor:'; field='donor'; ctl_type=label; }
		f_pad_ack "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Acknowledge:'; field='ack'; ctl_type=label; }
		f_pad_amount "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Amount:'; field='amount'; ctl_type=label; }
		f_pad_ckno "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Check No:'; field='check_no'; ctl_type=editbox; }
		f_pad_comm "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; label_width=100; text='Comment:'; field='comm'; ctl_type=editbox; }

		pad_save "widget/connector" { event=BeforeSave; target=pad_ok; action=Click; event_cancel=runclient(1); }
		pad_discard "widget/connector" { event=Discard; target=popover_ask_desig_detail; action=Close; }
		}

	    pad_sep "widget/autolayoutspacer" { height=1; }

	    pad_ctls "widget/hbox"
		{
		height=24;
		spacing=10;
		align=center;

		pad_ok "widget/textbutton"
		    {
		    height=24;
		    width=130;
		    text = "Copy";
		    enabled = runclient(char_length(:f_pad_ckno:content) > 0);

		    before_copy "widget/connector"
			{
			event=Click;
			target=doing_copy;
			action=SetValue;
			Value=1;
			}

		    do_copy1 "widget/connector"
			{
			event=Click;
			target=copy_gift;
			action=Copy;
			a_ledger_number = runclient(:ledger:value);
			a_batch_number = runclient(:batch:value);
			a_receipt_number = runclient(:f_rcpt_rcptno:value);
			a_gift_number = runclient(condition(:rcpt_form:form_mode == 'New', null, :receipts_osrc:a_gift_number));
			a_period = runclient(:batch_osrc:a_period);
			old_a_batch_number = runclient(:hist_osrc:batch);
			old_a_gift_number = runclient(:hist_osrc:gift);
			new_postmark = runclient(:f_rcpt_postdate:value);
			new_received = runclient(:f_rcpt_recvdate:value);
			new_rcptdes = runclient(:f_rcpt_rcptwanted:value);
			new_ackrcptdes = runclient(:f_rcpt_ackrcptwanted:value);
			new_gifttype = runclient(:f_rcpt_gifttype:value);
			new_adminnote = runclient(:f_rcpt_notes:content);
			new_donor = runclient(:f_rcpt_donorid:content);
			new_ackdonor = runclient(:f_rcpt_ackid:content);
			new_viadonor = runclient(:f_rcpt_viaid:content);
			new_checkno = runclient(:f_pad_ckno:content);
			new_comment = runclient(:f_pad_comm:content);
			new_filename = runclient(:last_file:value);
			new_hash = runclient(:last_hash:value);
			}

		    do_copy2 "widget/connector" { event=Click; target=pad_form; action=Discard; }
		    }

		pad_cancel "widget/textbutton"
		    {
		    height=24;
		    width=130;
		    text = "Cancel";

		    do_copy_cancel1 "widget/connector" { event=Click; target=pad_form; action=Discard; }
		    }
		}
	    }
	}

    popover_view_check "widget/childwindow"
	{
	width=572; height=216;
	x=202; y=462;
	titlebar=no;
	visible=no;
	border_style=solid;
	border_color="#f8f8f8";
	background=null;
	bgcolor="#e0e0e0";
	border_radius=12;
	shadow_radius=4;
	shadow_offset=2;
	shadow_color="#808080";
	shadow_angle=135;

	pvc_vbox "widget/vbox"
	    {
	    x=5; y=5;
	    width=560;
	    height=198;
	    spacing=5;

	    pvc_lbl "widget/component"
		{
		path="/apps/kardia/modules/base/section_label.cmp";
		//background = "/apps/kardia/images/bg/ls_green_gradient_dark.png";
		height=26;
		close=1;
		fl_height=0;
		text = runclient("Check Image" + isnull(", " + :image_reason:value, "") + ":");

		on_pvc_close "widget/connector" { event=Close; target=popover_view_check; action=Close; }
		}

	    check_image "widget/image"
		{
		height=172;
		//source=runclient(isnull(:last_file:value, "/apps/kardia/images/bg/light_bgnd.jpg"));
		source=runclient("/apps/kardia/images/bg/light_bgnd.jpg");
		aspect=runserver(condition(:this:stretch_cks, "stretch", "preserve"));
		}
	    }
	}

    popover_matching_donors "widget/childwindow"
	{
	width=572; height=260;
	x=202; y=197;
	titlebar=no;
	visible=no;
	border_style=solid;
	border_color="#f8f8f8";
	background=null;
	bgcolor="#ffff80";
	border_radius=12;
	shadow_radius=4;
	shadow_offset=2;
	shadow_color="#808080";
	shadow_angle=135;

	pmd_vbox "widget/vbox"
	    {
	    x=5; y=5;
	    width=560;
	    height=248;
	    spacing=5;

	    pmd_lbl "widget/component"
		{
		path="/apps/kardia/modules/base/section_label.cmp";
		//background = "/apps/kardia/images/bg/ls_green_gradient_dark.png";
		height=26;
		fl_height=0;
		close=1;
		text = runclient("Matching Donors:");

		on_pmd_close "widget/connector" { event=Close; target=popover_matching_donors; action=Close; }
		}

	    pmd_osrc "widget/osrc"
		{
		pmd_o_ledger "widget/parameter" { param_name=ledger; type=string; default=runclient(:ledger:value); }
		pmd_o_hash "widget/parameter" { param_name=hash; type=string; }
		pmd_o_mighash "widget/parameter" { param_name=mighash; type=string; }
		pmd_o_ckno "widget/parameter" { param_name=check_number; type=string; }

		sql = "	select
			    :cx__rowid,
			    partner_key = :pd:p_partner_key,
			    partner_name = condition(convert(string, char_length(ltrim(rtrim(isnull(:pd:p_org_name, ''))))) == 0, :pd:p_given_name + ' ' + :pd:p_surname, :pd:p_org_name),
			    partner_addr = (select :pl:p_city + ', ' + :pl:p_state_province + ' ' + :pl:p_postal_code from /apps/kardia/data/Kardia_DB/p_location/rows pl where :pd:p_partner_key *= :pl:p_partner_key order by charindex(:pl:p_record_status_code, 'OIQA') desc limit 1),
			    ack_key = :pa:p_partner_key,
			    ack_name = condition(convert(string, char_length(ltrim(rtrim(isnull(:pa:p_org_name, ''))))) == 0, :pa:p_given_name + ' ' + :pa:p_surname, :pa:p_org_name),
			    ack_addr = (select :pl:p_city + ', ' + :pl:p_state_province + ' ' + :pl:p_postal_code from /apps/kardia/data/Kardia_DB/p_location/rows pl where :pa:p_partner_key *= :pl:p_partner_key order by charindex(:pl:p_record_status_code, 'OIQA') desc limit 1),
			    gift_cnt = count(1),
			    latest = dateformat(max(isnull(:i:a_dn_gift_postmark_date, :i:a_dn_gift_received_date)), 'dd-MMM-yyyy'),
			    prev_checks = sum(:i:a_recv_document_id + ', ') - ', ',
			    ckno_dist = min(abs(convert(integer, :i:a_recv_document_id) - convert(integer, :parameters:check_number)))
			from
			    /apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows i,
			    /apps/kardia/data/Kardia_DB/p_partner/rows pd,
			    /apps/kardia/data/Kardia_DB/p_partner/rows pa
			where
			    :pd:p_partner_key = :i:p_dn_donor_partner_id and
			    :pa:p_partner_key =* :i:p_dn_ack_partner_id and
			    :i:a_ledger_number = :parameters:ledger and
			    --:i:a_posted = 1 and
			    (:i:a_account_hash = :parameters:hash or :i:a_account_hash = :parameters:mighash)
			group by
			    :i:p_dn_donor_partner_id,
			    :i:p_dn_ack_partner_id
			order by
			    min(abs(convert(integer, :i:a_recv_document_id) - convert(integer, :parameters:check_number)))
			having
			    :partner_key is not null
			";
		replicasize=100;
		readahead=100;
		autoquery=never;

		pmd_table "widget/table"
		    {
		    height=217;
		    overlap_scrollbar=yes;
		    demand_scrollbar=yes;
		    show_selection=yes;
		    initial_selection=no;
		    rowheight=null;
		    cellvspacing=4;
		    inner_padding=2;
		    row_border_radius=6;
		    colsep=0;
		    titlebar=no;
		    row_shadow_radius=2;
		    row_shadow_offset=1;
		    row_shadow_color="#a0a0a0";
		    row_shadow_angle=135;
		    nodata_message="no donor matches";

		    pmd_t_id "widget/table-column"
			{
			title="";
			width=16;
			style=bold;
			value=runclient(condition(:pmd_osrc:cx__rowid <= 8, '' + (:pmd_osrc:cx__rowid + 1) + ') ', ''));
			}
		    pmd_t_donoraddr "widget/table-column"
			{
			title="Donor";
			value=runclient(condition(:pmd_osrc:ack_name is not null, :pmd_osrc:ack_name + ' (' + :pmd_osrc:ack_key + ') via ', '') + :pmd_osrc:partner_name + ' (' + :pmd_osrc:partner_key + '), ' + :pmd_osrc:partner_addr);
			style=bold;
			caption_value=runclient('' + :pmd_osrc:gift_cnt + ' gift' + condition(:pmd_osrc:gift_cnt == 1, '', 's') + ', most recent ' + :pmd_osrc:latest + ', check number' + condition(:pmd_osrc:gift_cnt == 1, '', 's') + ' ' + :pmd_osrc:prev_checks);
			wrap=no;
			width=540;
			}

		    use_donor "widget/table-row-detail"
			{
			height=30;

			use_donor_ctls_hbox "widget/hbox"
			    {
			    x=10; y=5;
			    width=550; height=24;
			    align=center; spacing=10;

			    use_donor_btn "widget/textbutton"
				{
				height=24;
				width=130;
				text = "Select Donor";

				on_use_donor_1 "widget/connector"
				    {
				    event=Click;
				    target=gift_entry;
				    action=ScanOneDonor;
				    partner_key=runclient(:pmd_osrc:partner_key);
				    ack_key=runclient(:pmd_osrc:ack_key);
				    hash=runclient(:last_hash:value);
				    check_number=runclient(:last_ckno:value);
				    filename=runclient(:last_file:value);
				    }

				on_use_donor_2 "widget/connector" { event=Click; target=popover_matching_donors; action=Close; }
				}
			    }
			}
		    }
		}
	    }
	}
    }

