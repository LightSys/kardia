$Version=2$
bank_rec "widget/component-decl"
    {
    width=758; height=565;

    ledger "widget/parameter" { type=string; default=null; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; deploy_to_client=yes; }
    selected_period "widget/parameter" { type=object; default=null; deploy_to_client=yes; }

    Refresh "widget/component-decl-action"
	{
	    acc_refresh "widget/connector"
		{
		target=account_list_osrc;
		action=QueryParam;
		}
	    rec_refresh "widget/connector"
		{
		target=bank_rec_osrc;
		action=QueryParam;
		}
	}

    main_v "widget/vbox"
	{
	// find the information on each bank account. Only create 
	account_list_osrc "widget/osrc"
	    {
	    cur_ledger "widget/parameter" { type=string; default=runclient(:ledger:value); }
	    cur_period "widget/parameter" { type=string; default=runclient(:selected_period:value); }

	    sql = runserver("
		DECLARE COLLECTION prev_period;

		INSERT INTO
		    COLLECTION prev_period
		SELECT
		    cur_period = :p1:a_period,
		    prev_period = (SELECT last(:p2:a_period)
			FROM /apps/kardia/data/Kardia_DB/a_period/rows p2
			WHERE :p1:a_start_date > :p2:a_start_date
			    AND :p1:a_end_date > :p2:a_end_date
			    AND :p2:a_ledger_number = :parameters:cur_ledger
			    AND isnull(:p2:a_summary_only, 0) = 0
			ORDER BY :p2:a_start_date ASC)
		FROM 
		    /apps/kardia/data/Kardia_DB/a_period/rows p1
		WHERE 
		    :p1:a_ledger_number = :parameters:cur_ledger
		    AND :p1:a_period = :parameters:cur_period
		;

		-- create or update any a_bank_recon rows that should exist in the period
		INSERT INTO
		    /apps/kardia/data/Kardia_DB/a_bank_recon/rows
		SELECT
		    :acc:a_ledger_number,
		    a_period = :parameters:cur_period,
		    :acc:a_account_code,
		    a_bank_balance = NULL,
		    a_comment = NULL,
		    s_date_created = getdate(),
		    s_created_by = user_name(),
		    s_date_modified = getdate(),
		    s_modified_by = user_name()
		FROM 
		    /apps/kardia/data/Kardia_DB/a_account/rows acc
		WHERE 
		    :acc:a_ledger_number = :parameters:cur_ledger
		;

		SELECT
		    :acc:a_account_code,
		    :acc:a_ledger_number,
		    :acc:a_acct_desc,
		    :parameters:cur_period,
		    kardia_balence = isnull(sum(:trans:a_amount), 0), -- kardia balance
		    rec_total = isnull(sum(:reci:a_amount), 0),
		    net_kardia = isnull(sum(:reci:a_amount), 0) + isnull(:prev_rec:a_bank_balance, 0), -- bank_start + rec
		    bank_end = isnull(:rec:a_bank_balance, 0),
		    bank_start = isnull(:prev_rec:a_bank_balance, 0),
		    kard_diff = isnull(sum(:trans:a_amount), 0) - isnull(:rec:a_bank_balance, 0), -- kardia balance - bank end
		    zero = isnull(sum(:reci:a_amount), 0) + isnull(:prev_rec:a_bank_balance, 0) - isnull(:rec:a_bank_balance, 0), -- net_kardia - bank_end
		    :rec:a_comment
		FROM 
		    IDENTITY /apps/kardia/data/Kardia_DB/a_account/rows acc,
		    /apps/kardia/data/Kardia_DB/a_transaction/rows trans,
		    /apps/kardia/data/Kardia_DB/a_bank_recon/rows rec,
		    /apps/kardia/data/Kardia_DB/a_bank_recon_item/rows reci,
		    /apps/kardia/data/Kardia_DB/a_period/rows per,
		    COLLECTION prev_period prev_per, -- only ever has one row
		    /apps/kardia/data/Kardia_DB/a_bank_recon/rows prev_rec
		WHERE
		        :parameters:cur_ledger = :acc:a_ledger_number
		    AND :parameters:cur_ledger = :trans:a_ledger_number
		    AND :parameters:cur_ledger = :rec:a_ledger_number
		    AND :parameters:cur_ledger = :reci:a_ledger_number
		    AND :parameters:cur_ledger = :per:a_ledger_number
		    AND :parameters:cur_ledger = :prev_rec:a_ledger_number
		    AND :parameters:cur_period = :trans:a_period
		    AND :parameters:cur_period = :reci:a_period
		    AND :parameters:cur_period =  :rec:a_period
		    AND :parameters:cur_period *= :per:a_period
		    AND :prev_per:prev_period *= :prev_rec:a_period
		    AND :acc:a_account_code *= :trans:a_account_code
		    AND :acc:a_account_code *= :reci:a_account_code
		    AND :acc:a_account_code *= :rec:a_account_code
		    AND :acc:a_account_code *= :prev_rec:a_account_code
		    AND :reci:a_is_reconciled = 1
		    AND :reci:a_source_key =* convert('string', :trans:a_batch_number) + '|' 
			+ convert('string', :trans:a_journal_number) + '|' + :trans:a_transaction_number
		GROUP BY 
		    :acc:a_account_code
		ORDER BY
		    :acc:a_account_code
		");
		
	    baseobj = "/apps/kardia/data/Kardia_DB/a_bank_recon/rows";
	    replicasize=800; 
	    readahead=800;
	    autoquery=onfirstreveal;

	   acc_list_table "widget/table"
		{
		height=100; width = 760; x=0; y=0;

		t_acc_code "widget/table-column" { title="Acct."; fieldname="a_account_code"; width=15; }
		t_acc_desc "widget/table-column" { title="Description"; fieldname="a_acct_desc"; width=50; }
		t_acc_bal "widget/table-column" { title="Balance"; fieldname="kardia_balence"; width=20; }
		t_rec "widget/table-column" { title="Rec. Total"; fieldname="rec_total"; width=20; }
		t_kar_net "widget/table-column" { title="Net Balance"; fieldname="net_kardia"; width=20; }
		t_bank_start "widget/table-column" { title="Bank Start"; fieldname="bank_start"; width=20; }
		t_bank_end "widget/table-column" { title="Bank End"; fieldname="bank_end"; width=20; }
		t_zero "widget/table-column" { title="Zero"; fieldname="zero"; width=20; }
		
		rec_select "widget/connector" { event=Click; target=bank_rec_osrc; action=QueryParam; }
		}

	    }

	h_split "widget/hbox"
	    {
	    spacing=10;
	    
	    // left side
	    vbox "widget/vbox"
		{
		width = 250;
		
		acc_form "widget/form"
		    {
		    objectsource = account_list_osrc;
		    allow_query = no; // TODO: needs to allow writes for the bank amount eventually

		    f_bank_start "widget/component"
			{
			path="/sys/cmp/smart_field.cmp";
			field = 'bank_start';
			ctl_type=label; 
			text='Bank Start Balance:';
			label_width=120;
			height = 20;
			}

		    f_bank_end "widget/component"
			{
			path="/sys/cmp/smart_field.cmp";
			field = 'bank_end';
			ctl_type=editbox; 
			text='Bank End Balance:';
			label_width=120;
			height = 20;
			width = 200;
			}

		    f_kardia_bal "widget/component"
			{
			path="/sys/cmp/smart_field.cmp";
			field = 'kardia_balence';
			ctl_type=label; 
			text='Kardia Balance:';
			label_width=120;
			height = 20;
			}
		
		    f_diff_bal "widget/component"
			{
			path="/sys/cmp/smart_field.cmp";
			field = 'kard_diff';
			ctl_type=label; 
			text='Kardia Difference: ';
			label_width=120;
			height = 20;
			}

		    f_zero "widget/component"
			{
			path="/sys/cmp/smart_field.cmp";
			field = 'zero';
			ctl_type=label; 
			text='Zero:'; // bank - adjusted
			label_width=120;
			height = 20;
			}
		    f_comment "widget/component"
			{
			path="/sys/cmp/smart_field.cmp";
			field = 'a_comment';
			ctl_type=editbox; 
			text='Comment:';
			label_width=120;
			height = 20;
			width = 250;
			}

		    // TODO: make the save be able to create new a_bank_recon rows if needed
		    button_box "widget/hbox"
			{
			acc_save_btn "widget/textbutton"
			    {
			    width=120;
			    text = "Save";
			    enabled = runclient(:acc_form:is_savable);

			    save_acc "widget/connector" { event=Click; target=acc_form; action=Save; }
			    }
			acc_cancel_btn "widget/textbutton"
			    {
			    width=120;
			    text = "Cancel";
			    enabled = runclient(:acc_form:is_discardable);

			    cancel_acc "widget/connector" { event=Click; target=acc_form; action=Discard; }
			    }
			}
		    }
		}

	    //right side
	    bank_rec_osrc "widget/osrc" 
		{
		rec_ledger "widget/parameter" { type=string; default=runclient(:ledger:value); }
		rec_period "widget/parameter" { type=string; default=runclient(:selected_period:value); }
		rec_account "widget/parameter" { type=string; default=runclient(:account_list_osrc:a_account_code); }

		sql = runserver("
		    -- update the contents for the current section
		    INSERT INTO
			/apps/kardia/data/Kardia_DB/a_bank_recon_item/rows
		    SELECT
			-- let it auto assign line numbers
			a_ledger_number = :t:a_ledger_number,
			a_period = :t:a_period, 
			a_account_code = :t:a_account_code,
			a_origin = 'GL',
			a_source_key = convert('string', :t:a_batch_number) + '|' + convert('string', :t:a_journal_number) + '|' + :t:a_transaction_number, 
			a_amount = :t:a_amount,
			a_posted_date = :t:a_effective_date, -- TODO: figure out if this is even close to the bank post date...
			-- let a_reconciled go to default
			a_comment = :t:a_comment,
			s_date_created = getdate(),
			s_created_by = user_name(),
			s_date_modified = getdate(),
			s_modified_by = user_name()
		    FROM
			/apps/kardia/data/Kardia_DB/a_transaction/rows t
		    WHERE 
			:a_ledger_number = :parameters:rec_ledger
			AND :a_period = :parameters:rec_period
			AND :a_account_code = :parameters:rec_account
		    ON DUPLICATE 
			:a_ledger_number, :a_period, :a_account_code, :a_source_key -- line item auto generates
		    UPDATE SET
			:a_amount = :t:a_amount,
			:a_posted_date = :t:a_effective_date,
			:s_date_modified = getdate() IF MODIFIED,
			:s_modified_by = user_name() IF MODIFIED
		    ;
		
		    -- now read the actual values
		    SELECT 
			:a_line_item, :a_origin, :a_source_key, :a_amount, :a_posted_date, :a_is_reconciled, :a_comment, 
			is_rec_img = condition(:a_is_reconciled = 0, '/sys/images/checkbox_unchecked.gif', '/sys/images/checkbox_checked.gif') 
		    FROM
			/apps/kardia/data/Kardia_DB/a_bank_recon_item/rows
		    WHERE
			:a_ledger_number = :parameters:rec_ledger
			AND :a_period = :parameters:rec_period
			AND :a_account_code = :parameters:rec_account
		    ORDER BY
			:a_line_item
		    ");
		
		baseobj = "/apps/kardia/data/Kardia_DB/a_bank_recon_item/rows";
		replicasize=800; 
		readahead=800;
		autoquery=onfirstreveal;

		rec_list_table "widget/table"
		    {
		    height=460; width = 500; x=0; y=0;
		    overlap_scrollbar=yes;
		    demand_scrollbar=yes;
		    rowheight=null;
		    cellvspacing=4;
		    inner_padding=2;
		    colsep=0;
		    row_border_radius=6;
		    row_shadow_radius=2;
		    row_shadow_offset=1;
		    row_shadow_color="#a0a0a0";
		    row_shadow_angle=135;
		    initial_selection = noexpand;
		    allow_deselection = yes;
		    nodata_message="No Transactions to display";
		    // TODO: I really would like a way to single click a checkbox and get the row marked as reconciled without the internal form.
		    //TODO: a new row button. Know the peroid, ledger, and account, and can let auto do the line number. SO yeah.
		     
		    t_rec_check "widget/table-column" 
			{
			type="check"; title="rec?"; fieldname="a_is_reconciled"; width=5; 
			}
		    t_rec_line "widget/table-column" { title="#"; fieldname="a_line_item"; width=5; }
		    t_rec_origin "widget/table-column" { title="Src"; fieldname="a_origin"; width=5; }
		    t_rec_source "widget/table-column" { title="Source Key"; fieldname="a_source_key"; width=20; }
		    t_rec_amount "widget/table-column" { title="Amount"; fieldname="a_amount"; width=20; }
		    t_rec_posted "widget/table-column" { title="Date Posted"; fieldname="a_posted_date"; width=20; }
		    t_rec_comment "widget/table-column" { title="Comment"; fieldname="a_comment"; width=30; }

		    rec_detail "widget/table-row-detail"
			{
			height = 260; width=500;
			
			rec_pane "widget/pane"
			    {
			// require_one_endorsement="kardia:gift_manage","kardia:gift_amt"; 
			// ^^ this is probably the wrong place, and need own endorsement
			    x=10; y=5;
			    height = 250; width=480;
			    border_radius=12;
			    style=flat;
			    bgcolor="#f8f8f8";
			
			    rec_form "widget/form"
				{
				rec_form_hbox "widget/hbox"
				    {
				    rec_form_left_vbox "widget/vbox"
					{
					width=200;
					objectsource=bank_rec_osrc;
					allow_new=yes;
				//	on_save_refresh_acc { event=DataSaved; target=account_list_osrc; action=Refresh; } //TODO: this is probably wrong


					f_rec_is_rec "widget/component" //TODO: make this a dropdown of just the 4 options.
					    {
					    path="/sys/cmp/smart_field.cmp";
					    field = 'a_is_reconciled';
					    ctl_type=checkbox; 
					    text='Reconciled: ';
					    label_width=80;
					    height = 30;
					    width=200;
					    }

					f_rec_origin "widget/component" //TODO: make this a dropdown of just the 4 options.
					    {
					    path="/sys/cmp/smart_field.cmp";
					    field = 'a_origin';
					    ctl_type=editbox; 
					    text='Source: ';
					    label_width=80;
					    height = 30;
					    width=200;
					    }

					// the widgets below span the full width
					f_rec_source_id "widget/component"
					    {
					    path="/sys/cmp/smart_field.cmp";
					    field = 'a_source_key';
					    ctl_type=editbox; 
					    text='Source Key: ';
					    label_width=80;
					    height = 30;
					    width=400;
					    }
					
					f_rec_comment "widget/component"
					    {
					    path="/sys/cmp/smart_field.cmp";
					    field = 'a_comment';
					    ctl_type=editbox; 
					    text='Comment: ';
					    label_width=80;
					    height = 30;
					    width=400;
					    }

					rec_button_box "widget/hbox"
					    {
					    width=400;
					    rec_save_btn "widget/textbutton"
						{
						width=120;
						text = "Save";
						enabled = runclient(:rec_form:is_savable);

						save_rec "widget/connector" { event=Click; target=rec_form; action=Save; }
						update_acc "widget/connector" { event=Click; target=account_list_osrc; action=Refresh; }
						}
					    rec_cancel_btn "widget/textbutton"
						{
						width=120;
						text = "Cancel";
						enabled = runclient(:rec_form:is_discardable);

						cancel_rec "widget/connector" { event=Click; target=rec_form; action=Discard; }
						}
					    }
					}
				    rec_form_right_vbox "widget/vbox"
					{
					width=240;
					f_rec_amount "widget/component" //TODO: make this a dropdown of just the 4 options.
					    {
					    path="/sys/cmp/smart_field.cmp";
					    field = 'a_amount';
					    ctl_type=editbox; 
					    text='Amount: ';
					    label_width=100;
					    height = 30;
					    width=200;
					    }
					f_rec_date_posted "widget/component"
					    {
					    path="/sys/cmp/smart_field.cmp";
					    field = 'a_posted_date';
					    ctl_type=editbox; 
					    text='Date Posted: ';
					    label_width=100;
					    height = 30;
					    width=220;
					    }
					}
				    }
				}
			    }
			}
		    }
		}
	    }
	}
    }
