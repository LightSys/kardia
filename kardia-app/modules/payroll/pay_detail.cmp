$Version=2$
pay_detail_cmp "widget/component-decl"
    {
    width=778; height=525;

    ledger "widget/parameter" { type=string; default=null; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; deploy_to_client = yes; }
    by_item_type "widget/parameter" { type=integer; default=0; }
    item_type "widget/parameter" { type=string; default=null; deploy_to_client=yes; }
    payee "widget/parameter" { type=integer; default=null; deploy_to_client=yes; }
    paygroup "widget/parameter" { type=integer; default=null; deploy_to_client=yes; }
    period "widget/parameter" { type=string; default=null; deploy_to_client=yes; }

    GotoPayee "widget/component-decl-action" { }
    GotoItemType "widget/component-decl-action" { }

    GotoPayee_cn "widget/connector"
	{
	condition=runserver(:this:by_item_type == 0);
	event=GotoPayee;
	target=payee_osrc;
	action=QueryParam;
	a_payroll_id = runclient(:Payee);
	a_payroll_group_id = runclient(:Group);
	}

    GotoItemType_cn "widget/connector"
	{
	condition=runserver(:this:by_item_type != 0);
	event=GotoItemType;
	target=itemtypes_osrc;
	action=FindObject;
	Name = runclient(:pay_detail_cmp:ledger + '|' + :ItemType);
	//a_payroll_item_type_code = runclient(:ItemType);
	//a_ledger_number = runclient(:pay_detail_cmp:ledger);
	}

    ledger_osrc "widget/osrc"
	{
	l_ledger "widget/parameter" { type=string; default=runserver(:this:ledger); }
	sql = runserver("select * from /apps/kardia/data/Kardia_DB/a_ledger/rows where :a_ledger_number = :parameters:l_ledger");
	baseobj = "/apps/kardia/data/Kardia_DB/a_ledger/rows";
	replicasize=10;
	readahead=5;
	autoquery = onload;
	}

    payee_osrc "widget/osrc"
	{
	condition=runserver(:this:by_item_type == 0);
	payee_pid "widget/parameter" { param_name=a_payroll_id; type=integer; default=null; }
	payee_gid "widget/parameter" { param_name=a_payroll_group_id; type=integer; default=null; }

	sql = "SELECT :a:a_fund, :a:a_ledger_number, :a:a_payroll_id, :a:a_payroll_group_id, ptxt = condition(char_length(:a:a_payee_name) > 0, :a:a_payee_name, :p:p_surname + ', ' + :p:p_given_name), startdate = '' + datepart(month, :a_start_date) + '/' + datepart(day, :a_start_date) + '/' + datepart(year, :a_start_date), enddate = '' + datepart(month, :a_end_date) + '/' + datepart(day, :a_end_date) + '/' + datepart(year, :a_end_date) FROM IDENTITY /apps/kardia/data/Kardia_DB/a_payroll/rows a, /apps/kardia/data/Kardia_DB/p_partner/rows p  WHERE :p:p_partner_key = :a:p_payee_partner_key and :a:a_payroll_id = :parameters:a_payroll_id and :a:a_payroll_group_id = :parameters:a_payroll_group_id";
	baseobj = "/apps/kardia/data/Kardia_DB/a_payroll/rows";
	autoquery=never;
	replicasize=300;
	readahead=300;

	pre_sel_payee "widget/connector"
	    {
	    //condition=runserver(not (:this:payee is null));
	    condition=0;
	    event=EndQuery;
	    action=FindObject;
	    Name=runclient(:pay_detail_cmp:ledger + '|' + :pay_detail_cmp:paygroup + '|' + :pay_detail_cmp:payee);
	    }

	set_dd "widget/connector"
	    {
	    event=EndQuery;
	    target=f_a_fund;
	    action=SetItems;
	    SQL=runclient("select label=:a_fund + ' - ' + :a_fund_desc, value=:a_fund from /apps/kardia/data/Kardia_DB/a_fund/rows where :a_bal_fund = " + quote(:payee_osrc:a_fund) + " and :a_ledger_number = " + quote(:ledger_osrc:a_ledger_number));
	    }
	}

    payee_lbl "widget/label"
	{
	condition=runserver(:this:by_item_type == 0);
	x=8;y=6;width=562;height=24;
	align=left;
	style=bold;
	font_size=16;
	value = runclient(isnull('Payroll: ' + :payee_osrc:ptxt, '')); // + ' (' + isnull(:payee_osrc:startdate, '') + ' - ' + isnull(:payee_osrc:enddate, '') + ')', ''));
	}

    itemtypes_osrc "widget/osrc"
	{
	condition=runserver(:this:by_item_type != 0);
	sql=runserver("select :name, txt = :a_payroll_item_type_code  + ' - ' + :a_desc + ' (' + :a_payroll_item_class_code + ')', :a_payroll_item_type_code, :a_ledger_number from /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows where :a_ledger_number = " + quote(:this:ledger)); 
	replicasize=100;
	readahead=100;
	autoquery=onload;

	pre_sel "widget/connector"
	    {
	    condition=runserver(not (:this:item_type is null));
	    event=EndQuery;
	    target=itemtypes_osrc;
	    action=FindObject;
	    Name=runclient(:pay_detail_cmp:ledger + '|' + :pay_detail_cmp:item_type);
	    }

	f_typ "widget/dropdown"
	    { 
	    x=8;y=4;width=200;height=20;
	    mode=objectsource;
	    fieldname=txt;
	    numdisplay=12;
	    tooltip="Line Item";
	    onchange "widget/connector" { event=DataChange; target=payitem_tab; action=SetTab; Tab=runclient(isnull(substring(:Label, charindex('(', :Label) + 1, 1), 'XX')); }
	    onchange2 "widget/connector" { event=DataChange; event_condition=runclient(charindex('(T)', :Label) > 0); target=f_t_status; action=SetItems; SQL=runclient("select label=:a_desc, value=:a_filing_status from /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows where :a_payroll_item_type_code = " + quote(substring(:Value, 1, charindex(' ', :Value) - 1))); }
	    onchange3 "widget/connector" { event=DataChange; event_condition=runclient(charindex('(E)', :Label) > 0); target=f_e_status; action=SetItems; SQL=runclient("select label=:a_desc, value=:a_filing_status from /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows where :a_payroll_item_type_code = " + quote(substring(:Value, 1, charindex(' ', :Value) - 1))); }
	    }
	}

    periods_osrc "widget/osrc"
	{
	periods_ledger "widget/parameter" { param_name=ledger; type=string; default=runserver(:this:ledger); }
	periods_period "widget/parameter" { param_name=period; type=string; default=runserver(:this:period); style=strnull; }
	sql = runserver("
		--SELECT	a_payroll_period=null, a_payroll_period_desc=null, a_ledger_number=" + quote(:this:ledger) + ", txt='Template',
		--	pay_date = null
		--WHERE
		--	:parameters:period is null
		--;

		SELECT
			:p:a_payroll_period, :p:a_payroll_period_desc, :p:a_ledger_number, txt=:p:a_payroll_period + ' - ' + :p:a_payroll_period_desc,
			pay_date = :p:a_pay_date,
			accrual_date = :p:a_accrual_date
		FROM
			/apps/kardia/data/Kardia_DB/a_payroll_period/rows p
		WHERE
			:p:a_ledger_number = :parameters:ledger and
			(:p:a_payroll_period = :parameters:period or :parameters:period is null)
		ORDER BY
			:p:a_payroll_period desc
		");
	replicasize=50;
	readahead=50;
	autoquery=onload;

	period_form "widget/form" { }

	ctls_hbox "widget/hbox"
	    {
	    x=370; y=4; width=400;height=20;
	    spacing=4;

	    periods_label "widget/label"
		{
		width=120;
		y=4;
		text = "Period:";
		align=right;
		style=bold;
		}
	    periods_select "widget/dropdown"
		{
		width=276;
		mode=objectsource;
		fieldname=txt;
		numdisplay=12;
		}
	    }

	//period_select_cn "widget/connector" { event=DataFocusChanged; target=payee_osrc; action=QueryParam; a_period=runclient(:periods_osrc:a_period); a_payroll_id=runclient(:payee_osrc:a_payroll_id); }
	}

    payee_period_osrc "widget/osrc"
	{
	condition=runserver(:this:by_item_type == 0);

	sql = " select
		    *
		from
		    /apps/kardia/data/Kardia_DB/a_payroll_period_payee/rows pp
		";
	replicasize=2;
	readahead=2;
	baseobj="/apps/kardia/data/Kardia_DB/a_payroll_period_payee/rows";

	payee_sync_pp "widget/rule"
	    {
	    ruletype = "osrc_relationship";
	    target = payee_osrc;
	    is_slave = yes;
	    key_1 = a_ledger_number;
	    target_key_1 = a_ledger_number;
	    key_2 = a_payroll_id;
	    target_key_2 = a_payroll_id;
	    key_3 = a_payroll_group_id;
	    target_key_3 = a_payroll_group_id;
	    //revealed_only = true;
	    }

	period_sync_pp "widget/rule"
	    {
	    ruletype = "osrc_relationship";
	    target = periods_osrc;
	    is_slave = yes;
	    key_1 = a_payroll_period;
	    target_key_1 = a_payroll_period;
	    key_2 = a_ledger_number;
	    target_key_2 = a_ledger_number;
	    //revealed_only = true;
	    }

	payee_period_info "widget/tab"
	    {
	    x=8; y=32; width=762; height=32;
	    tab_location=none;
	    border_style=none;
	    bgcolor=null;
	    background=null;
	    selected_index=runclient(condition(:payee_period_osrc:a_ledger_number is null, 1, 2));

	    not_in_period "widget/tabpage"
		{
		add_to_period "widget/textbutton"
		    {
		    x=290; y=4;
		    width=180; height=20;
		    text = runclient("Add to Period: " + :periods_osrc:a_payroll_period);

		    on_add_to_period "widget/connector"
			{
			event=Click;
			target=payee_period_osrc;
			action=Create;

			a_is_employee = 1;
			a_is_fica = 1;
			a_is_exempt = 1;
			a_is_salaried = 1;
			s_date_created = runclient(getdate());
			s_created_by = runclient(user_name());
			s_date_modified = runclient(getdate());
			s_modified_by = runclient(user_name());
			}
		    }
		}

	    in_period "widget/tabpage"
		{
		payee_period_form "widget/form"
		    {
		    allow_new = no;
		    allow_query = no;

		    payee_period_hbox "widget/hbox"
			{
			x=4; y=4; width=754; height=24;

			pp_state "widget/component" { width=90; label_width=55; height=24; field=p_state_province; text="St/Prov:"; ctl_type=editbox; path="/sys/cmp/smart_field.cmp"; pps_hints "widget/hints" { allowchars="ABCDEFGHIJKLMNOPQRSTUVWXYZ"; } }
			pp_country "widget/component" { width=200; label_width=70; height=24; field=p_country_code; text="Country:"; ctl_type=dropdown; path="/sys/cmp/smart_field.cmp"; sql = "select :p_country_code + ' - ' + :p_country_name, :p_country_code from /apps/kardia/data/Kardia_DB/p_country/rows order by :p_country_code"; }
			pp_empl "widget/component" { width=120; label_width=90; height=24; field=a_is_employee; text="Employee?"; ctl_type=checkbox; path="/sys/cmp/smart_field.cmp"; }
			pp_fica "widget/component" { width=65; label_width=50; height=24; field=a_is_fica; text="FICA?"; ctl_type=checkbox; path="/sys/cmp/smart_field.cmp"; }
			pp_exem "widget/component" { width=85; label_width=70; height=24; field=a_is_exempt; text="Exempt?"; ctl_type=checkbox; path="/sys/cmp/smart_field.cmp"; }
			pp_sal "widget/component" { width=90; label_width=70; height=24; field=a_is_salaried; text="Salaried?"; ctl_type=checkbox; path="/sys/cmp/smart_field.cmp"; }

			save_btn "widget/component" { width=18; height=18; y=1; path = "/sys/cmp/save_btn.cmp"; }

			sc_sep "widget/autolayoutspacer" { width=10; }

			cancel_btn "widget/component" { width=18; height=18; y=1; path = "/sys/cmp/cancel_btn.cmp"; }

			sc_sep2 "widget/autolayoutspacer" { width=10; }

			delete_btn "widget/imagebutton"
			    {
			    width=18;
			    height=18;
			    y=1;
			    image="/sys/images/ico24a.gif";
			    pointimage="/sys/images/ico24b.gif";
			    clickimage="/sys/images/ico24c.gif";
			    disabledimage="/sys/images/ico24d.gif";
			    tooltip = runserver("Remove Payee");
			    enabled = runclient(:payee_period_form:is_editable);

			    on_delete "widget/connector"
				{
				event="Click";
				event_confirm=runclient("Remove payee from this pay period?");
				target=remove_payee_cmp;
				action=RemovePayee;
				ledger=runclient(:ledger:value);
				paygroup=runclient(:payee_period_osrc:a_payroll_group_id);
				payee=runclient(:payee_period_osrc:a_payroll_id);
				period=runclient(:payee_period_osrc:a_payroll_period);
				}
			    }

			pp_meta "widget/component" { path="/apps/kardia/modules/base/record_metadata_hidden.cmp"; }

			remove_payee_cmp "widget/component"
			    {
			    path="remove_payee.cmp";

			    on_removed "widget/connector"
				{
				event=PayeeRemoved;
				target=payee_period_osrc;
				action=Refresh;
				}
			    }
			}
		    }
		}
	    }
	}

    payitem_osrc "widget/osrc"
	{
	sql = runserver("
		SELECT
			:i:a_payroll_id,
			:i:a_payroll_group_id,
			:p:a_payee_name,
			txt = isnull(' Fund: ' + :i:a_ref_fund,'') + isnull(' Acct: ' + :i:a_ref_account_code,'') + isnull(' XfrFund: ' + :i:a_xfer_fund,'') + isnull(' XfrAcct: ' + :i:a_xfer_account_code,'') + isnull(' Min: ' + :i:a_minimum_amount,'') + isnull(' Allowances: ' + :i:a_allowances,'') + isnull(' DepAllow: ' + :i:a_dependent_allowances,'') + isnull(' Status: ' + :fs:a_desc, ''),
			:i:a_target_amount,
			:i:a_actual_amount,
			:i:a_minimum_amount,
			:i:a_filing_status,
			:i:a_effective_date,
			startdate = '' + datepart(month, :a_start_date) + '/' + datepart(day, :a_start_date) + '/' + datepart(year, :a_start_date),
			:a_start_date,
			:a_end_date,
			:a_allowances,
			:a_dependent_allowances,
			a_fs_desc = :fs:a_desc,
			:i:a_ref_fund,
			a_xfer_fund = isnull(:i:a_xfer_fund, :it:a_xfer_fund),
			a_ref_account_code = isnull(:i:a_ref_account_code, :it:a_ref_account_code),
			a_xfer_account_code = isnull(:i:a_xfer_account_code, :it:a_xfer_account_code),
			:i:a_payroll_item_type_code,
			:it:a_desc,
			:it:a_payroll_item_class_code,
			:s_date_modified,
			:s_modified_by,
			:s_date_created,
			:s_created_by
		FROM
			IDENTITY /apps/kardia/data/Kardia_DB/a_payroll_item/rows i,
			/apps/kardia/data/Kardia_DB/a_payroll_item_type/rows it,
			/apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows fs,
			/apps/kardia/data/Kardia_DB/a_payroll/rows p 
		WHERE
			:i:a_payroll_item_type_code *= :it:a_payroll_item_type_code and
			:it:a_ledger_number = " + quote(:this:ledger) + " and
			:i:a_filing_status *= :fs:a_filing_status and
			:i:a_payroll_item_type_code *= :fs:a_payroll_item_type_code and
			:p:a_ledger_number = " + quote(:this:ledger) + " and
			:p:a_payroll_id = :i:a_payroll_id and
			:p:a_payroll_group_id = :i:a_payroll_group_id
		");
	baseobj = "/apps/kardia/data/Kardia_DB/a_payroll_item/rows";
	autoquery=never;
	replicasize=50;
	readahead=25;

	itemtype_sync "widget/rule"
	    {
	    condition=runserver(:this:by_item_type != 0);
	    ruletype = "osrc_relationship";
	    target = itemtypes_osrc;
	    is_slave = yes;
	    key_1 = a_payroll_item_type_code;
	    target_key_1 = a_payroll_item_type_code;
	    key_2 = a_ledger_number;
	    target_key_2 = a_ledger_number;
	    revealed_only = true;
	    }

	payee_sync "widget/rule"
	    {
	    condition=runserver(:this:by_item_type == 0);
	    ruletype = "osrc_relationship";
	    target = payee_osrc;
	    is_slave = yes;
	    key_1 = a_ledger_number;
	    target_key_1 = a_ledger_number;
	    key_2 = a_payroll_id;
	    target_key_2 = a_payroll_id;
	    key_3 = a_payroll_group_id;
	    target_key_3 = a_payroll_group_id;
	    revealed_only = true;
	    }

	period_sync "widget/rule"
	    {
	    ruletype = "osrc_relationship";
	    target = periods_osrc;
	    is_slave = yes;
	    key_1 = a_period;
	    target_key_1 = a_payroll_period;
	    key_2 = a_ledger_number;
	    target_key_2 = a_ledger_number;
	    revealed_only = true;
	    }

	payitem_list_pane "widget/pane"
	    {
	    x=8;y=runserver(condition(:this:by_item_type == 0, 64, 32));width=762;height=runserver(condition(:this:by_item_type == 0, 222, 254));
	    widget_class = "table_bgnd";

	    payitem_list "widget/table"
		{
		x=0;y=0;width=760;height=runserver(condition(:this:by_item_type == 0, 220, 252));
		rowheight = 20;
		mode=dynamicrow;

		//t_valid "widget/table-column" { title="Valid From"; fieldname="startdate"; width=70; }
		t_typ "widget/table-column" { condition=runserver(:this:by_item_type == 0); title="Line Item"; fieldname="a_desc"; width=140; }
		t_payee "widget/table-column" { condition=runserver(:this:by_item_type != 0); title="Payee"; fieldname="a_payee_name"; width=140; }
		t_group "widget/table-column" { condition=runserver(:this:by_item_type != 0); title="Grp"; fieldname="a_payroll_group_id"; width=30; }
		t_amt "widget/table-column" { title="Budget Amt"; fieldname="a_target_amount"; width=100; align=right; }
		t_aamt "widget/table-column" { title="Actual Amt"; fieldname="a_actual_amount"; width=100; align=right; }
		t_txt "widget/table-column" { title="Details"; fieldname="txt"; width=390; }
		}
	    }

	payitem_form "widget/form"
	    {
	    tab_revealed_only = true;

	    payitem_ctls "widget/component"
		{
		x=8;y=294;width=762;height=26;
		path = "/sys/cmp/form_controls.cmp";
		deletable = no;
		object_name = "Pay Item";
		}

	    payitem_fund "widget/variable"
		{
		fieldname=a_ref_fund;

		set_def_cc "widget/connector"
		    {
		    source=payitem_form;
		    event=BeforeSave;
		    event_condition=runclient((not (char_length(:f_a_fund:value) > 0)) and (not (char_length(:f_m_ref_cc:content) > 0)) and (not (char_length(:f_r_ref_cc:content) > 0)));
		    action=SetValue;
		    Value=runclient(:payee_osrc:a_fund);
		    }
		}

	    payee_osrc "widget/osrc"
		{
		condition=runserver(:this:by_item_type != 0);

		sql = runserver("SELECT :a_fund, :a_ledger_number, :a_payroll_id, :a_payroll_group_id FROM /apps/kardia/data/Kardia_DB/a_payroll/rows a  WHERE :a:a_ledger_number = " + quote(:this:ledger));
		baseobj = "/apps/kardia/data/Kardia_DB/a_payroll/rows";
		autoquery=never;
		replicasize=10;
		readahead=10;
		}

	    payitem_is_instance "widget/variable" { fieldname=a_is_instance; payitem_is_instance_hnt "widget/hints" { style=readonly; default=runclient(condition(:periods_osrc:a_payroll_period is null, 0, 1)); } }

	    f_eff_date "widget/variable" { fieldname=a_effective_date; f_eff_date_hints "widget/hints" { style=readonly; default=runclient(:periods_osrc:accrual_date); } }

	    payitem_vbox "widget/vbox"
		{
		x=8;y=328;width=200;height=150;
		spacing=2;
		cellsize=20;

		//f_from_lbl "widget/label" { text="Valid From:"; }
		//f_from "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_start_date; ctl_type="datetime"; tooltip="Date that this payroll entry begins to be valid"; label_width=0; }
		//f_to_lbl "widget/label" { text="Valid To:"; }
		//f_to "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_end_date; ctl_type="datetime"; tooltip="Last day that this payroll entry is valid"; label_width=0; }
		f_payeename_lbl "widget/label" 
		    {
		    condition=runserver(:this:by_item_type != 0);
		    text="Payee Name:";
		    style=bold;
		    }
		f_payeename "widget/component"
		    { 
		    condition=runserver(:this:by_item_type != 0);
		    path="/sys/cmp/smart_field.cmp";
		    field=a_payroll_id; 
		    ctl_type="dropdown";
		    tooltip="Payee";
		    label_width=0;
		    sql=runserver("select :a_payee_name + ' (Grp ' + :a_payroll_group_id + ')', :a_payroll_id from /apps/kardia/data/Kardia_DB/a_payroll/rows where :a_ledger_number = " + quote(:this:ledger) + " order by :a_payee_name"); 
		    height=20;
		    fl_height=0;

		    on_p_change "widget/connector" { event=DataChange; target=payee_osrc; action=QueryParam; a_payroll_id=runclient(:Value); a_payroll_group_id = runclient(convert(integer, substring(:Label, charindex('(Grp ', :Label) + 5))); }
		    on_p_change2 "widget/connector" { event=DataChange; event_condition=runclient(:FromOSRC == 0); target=f_grp_id; action=SetValue; Value = runclient(convert(integer, substring(:Label, charindex('(Grp ', :Label) + 5))); }

		    payeename_hints "widget/hints" { style=readonly; }
		    }
		f_grp_id "widget/variable"
		    {
		    condition=runserver(:this:by_item_type != 0);
		    fieldname=a_payroll_group_id;
		    type=integer;
		    }
		f_typ_lbl "widget/label" 
		    {
		    condition=runserver(:this:by_item_type == 0);
		    text="Type:";
		    style=bold;
		    }
		f_typ "widget/component"
		    { 
		    condition=runserver(:this:by_item_type == 0);
		    path="/sys/cmp/smart_field.cmp";
		    field=a_payroll_item_type_code; 
		    ctl_type="dropdown";
		    tooltip="Line Item";
		    label_width=0;
		    height=20;
		    fl_height=0;
		    sql=runserver("select :a_desc + ' - ' + :a_payroll_item_type_code  + ' (' + :a_payroll_item_class_code + ')', :a_payroll_item_type_code from /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows where :a_ledger_number = " + quote(:this:ledger)); 
		    onchange "widget/connector" { event=DataChange; target=payitem_tab; action=SetTab; Tab=runclient(isnull(substring(:Label, charindex('(', :Label) + 1, 1), 'XX')); }
		    onchange2 "widget/connector" { event=DataChange; event_condition=runclient(charindex('(T)', :Label) > 0); target=f_t_status; action=SetItems; SQL=runclient("select label = :a_desc, value=:a_filing_status from /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows where :a_payroll_item_type_code = " + quote(:Value)); }
		    onchange3 "widget/connector" { event=DataChange; event_condition=runclient(charindex('(E)', :Label) > 0); target=f_e_status; action=SetItems; SQL=runclient("select label = :a_desc, value=:a_filing_status from /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows where :a_payroll_item_type_code = " + quote(:Value)); }
		    }
		}

	    payitem_tab "widget/tab"
		{
		x=226; y=328; width=544; height=150;
		tab_location=none;

		XX "widget/tabpage"
		    {
		    xx_lbl "widget/label" { x=4; y=64; width=536; height=20; style=italic; font_size=13; text="No type selected"; align=center; }
		    }

		// Available Funds
		A "widget/tabpage"
		    {
		    a_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Available Funds:"; align=center; }

		    a_vbox "widget/vbox"
			{
			x=4;y=28;width=400;height=116;
			cellsize=20;
			spacing=4;

			f_a_fund "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_ref_fund; text="Fund:"; ctl_type="dropdown"; tooltip="Subsidiary fund to source available funds from.  Leave blank to use the main fund."; label_width=100; }
			f_a_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="Required:"; ctl_type="editbox"; tooltip="Total amount required in fund for full pay"; label_width=100; }
			f_a_minamt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_minimum_amount; text="Min. Left:"; ctl_type="editbox"; tooltip="Minimum to leave in fund"; label_width=100; }
			}
		    }

		// Pre-tax benefit (like health insurance)
		B "widget/tabpage"
		    {
		    b_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Pre-Tax Benefit:"; align=center; }

		    b_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_b_exp_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="Expense Acct:"; tooltip="GL Account for expense in this fund"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			f_b_xfer_cc "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_xfer_fund; text="Xfer Fund:"; tooltip="Fund receiving benefit transfer"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/funds.qyt/" + :this:ledger + "/"); popup_text="Select Fund:"; }
			f_b_xfer_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_xfer_account_code; text="Xfer Account:"; tooltip="GL Account for receiving fund"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			f_b_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="Amount:"; ctl_type="editbox"; tooltip="Amount to transfer."; label_width=100; }
			}
		    }

		// Post-tax deductions (e.g., same as V, except this is a fixed amount rather than clearing an account)
		D "widget/tabpage"
		    {
		    d_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Post-Tax Deduction:"; align=center; }
		    d_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;
			f_d_ref_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="Account:"; tooltip="GL Liability Account for payable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			f_d_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="Amount:"; ctl_type="editbox"; tooltip="Amount of Deduction."; label_width=100; }
			}
		    }

		// Employer side Taxes
		E "widget/tabpage"
		    {
		    e_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Employer Tax:"; align=center; }
		    e_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_e_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="GL Account:"; tooltip="GL Account for taxes (typ. a liability acct)"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			f_e_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="Amount:"; ctl_type="editbox"; tooltip="Amount of Tax."; label_width=100; }
			}
		    e_vbox2 "widget/vbox"
			{
			x=312;y=28;width=200;height=116;
			cellsize=26;
			spacing=4;
			f_e_status "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_filing_status; text="Status:"; ctl_type="dropdown"; tooltip="Filing status of payee."; label_width=100; }
			f_e_allow "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_allowances; text="Allowances:"; ctl_type="editbox"; tooltip="Number of allowances claimed by payee."; label_width=100; }
			f_e_depallow "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_dependent_allowances; text="Dep. Allow.:"; ctl_type="editbox"; tooltip="Number of dependent allowances claimed by payee (some states)."; label_width=100; }
			}
		    }

		// Gross pay
		G "widget/tabpage"
		    {
		    g_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; value=runclient("Gross Pay" + isnull(" (" + :f_typ:value + ")", "") + ":"); align=center; }
		    g_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;
			f_g_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="Gross:"; ctl_type="editbox"; tooltip="Gross Pay"; label_width=100; }
			f_g_minamt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_minimum_amount; text="Minimum:"; ctl_type="editbox"; tooltip="Minimum Gross Pay (if available funds are insufficient)"; label_width=100; }
			}
		    }

		// Informational
		I "widget/tabpage"
		    {
		    i_lbl "widget/label" { x=4; y=64; width=536; height=20; font_size=13; text="(No further information needed)"; align=center; }
		    }

		// Non-tax payables (e.g., expense reimbursements)
		M "widget/tabpage"
		    {
		    m_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Non-Tax Payable:"; align=center; }
		    m_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_m_ref_cc "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_fund; text="Fund:"; tooltip="Fund holding payable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/funds.qyt/" + :this:ledger + "/"); popup_text="Select Fund:"; }
			f_m_ref_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="Account:"; tooltip="GL Liability Account for payable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			}
		    }

		// Net pay
		N "widget/tabpage"
		    {
		    n_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Net Pay:"; align=center; }
		    n_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			n_lbl_2 "widget/label" { text = "(no settings for net pay; this is computed)"; }
			}
		    }

		// Pre-Payroll Transaction (such as vehicle fund xfer)
		P "widget/tabpage"
		    {
		    p_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Pre-Payroll Transaction:"; align=center; }

		    p_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_p_exp_acct"widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="Expense Acct:"; tooltip="GL Account for expense in this fund"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			f_p_xfer_cc "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_xfer_fund; text="Xfer Fund:"; tooltip="Receiving fund's code"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/funds.qyt/" + :this:ledger + "/"); popup_text="Select Fund:"; }
			f_p_xfer_acct"widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_xfer_account_code; text="Xfer Account:"; tooltip="GL Account for receiving fund"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			f_p_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="Amount:"; ctl_type="editbox"; tooltip="Amount to transfer."; label_width=100; }
			}
		    }

		// Pre-Tax Receivables
		R "widget/tabpage"
		    {
		    r_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Pre-Tax Receivable:"; align=center; }
		    r_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_r_ref_cc "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_fund; text="Fund:"; tooltip="Fund holding receivable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/funds.qyt/" + :this:ledger + "/"); popup_text="Select Fund:"; }
			f_r_ref_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="Account:"; tooltip="GL Asset Account for receivable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			}
		    }

		// Tax Withholdings
		T "widget/tabpage"
		    {
		    t_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Tax Withholding:"; align=center; }
		    t_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_t_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="GL Account:"; tooltip="GL Account for taxes (typ. a liability acct)"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			f_t_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="Amount:"; ctl_type="editbox"; tooltip="Amount of Tax."; label_width=100; }
			}
		    t_vbox2 "widget/vbox"
			{
			x=312;y=28;width=200;height=116;
			cellsize=26;
			spacing=4;
			f_t_status "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_filing_status; text="Status:"; ctl_type="dropdown"; tooltip="Filing status of payee."; label_width=100; }
			f_t_allow "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_allowances; text="Allowances:"; ctl_type="editbox"; tooltip="Number of allowances claimed by payee."; label_width=100; }
			f_t_depallow "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_dependent_allowances; text="Dep. Allow.:"; ctl_type="editbox"; tooltip="Number of dependent allowances claimed by payee (some states)."; label_width=100; }
			}
		    }

		// Post-tax receivables (e.g., salary advances that need to be taxed)
		V "widget/tabpage"
		    {
		    v_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="Post-Tax Receivable:"; align=center; }
		    v_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;
			f_v_ref_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="Account:"; tooltip="GL Asset Account for receivable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="Select Account:"; }
			}
		    }
		}

	    payee_rec_info "widget/component"
		{
		x=8;y=497;height=20;width=762;
		path = "/apps/kardia/modules/base/record_metadata_bar.cmp";
		}
	    }
	}
    }
