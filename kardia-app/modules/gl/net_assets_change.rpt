$Version=2$
inc_exp_balance "system/report"
    {
    title = "Income & Expense Balance Report";

    // Income and Expense Balance
    //
    // This report shows opening balance, income, expense, and closing balance
    // for the organization and for all funds.  Inter-fund inc/exp is also
    // displayed and should sum to -0- for the entire report.  Intra-fund
    // inc/exp is displayed and should sum to -0- for each self-balancing
    // fund.

    document_format="application/pdf";
    resolution = 300;
    pagewidth=110;
    pageheight=51;
    marginleft=2.5;
    marginright=2.5;
    margintop=2.5;
    marginbottom=2.5;

    // Parameters
    ledger "report/parameter" { type=string; default=null; }
    fund "report/parameter" { type=string; default=null; }
    ref_period "report/parameter" { type=string; default=runserver( (select first(:a_period) from /apps/kardia/data/Kardia_DB/a_period/rows where :a_summary_only = 0 and datepart(year, :a_end_date) = datepart(year, getdate()) order by :a_start_date) ); }
    end_period "report/parameter" { type=string; default=runserver( (select last(:a_period) from /apps/kardia/data/Kardia_DB/a_period/rows where :a_summary_only = 0 and datepart(year, :a_end_date) = datepart(year, getdate()) order by :a_start_date) ); }
    unposted "report/parameter" { type=integer; default=0; }
    invert "report/parameter" { type=integer; default=0; }
    showsubsid "report/parameter" { type=integer; default=1; }
    showzero "report/parameter" { type=integer; default=0; }
    cc_class "report/parameter" { type=string; default=null; }

    // Queries
    inv_qy "report/query"
	{
	sql = "select inv=condition(:this:invert, -1, 1)";
	}

    ledger_qy "report/query"
	{
	sql = "select * from /apps/kardia/data/Kardia_DB/a_ledger/rows l where :l:a_ledger_number = :this:ledger";
	}

    class_qy "report/query"
	{
	// uses first() to force query to return null row if no match.
	sql = "select descrip = first(:c:a_fund_class_desc) from /apps/kardia/data/Kardia_DB/a_fund_class/rows c where :c:a_ledger_number = :this:ledger and :c:a_fund_class = :this:cc_class";
	}

    fund_qy "report/query"
	{
	sql = " select
		    a_fund_desc = first(:a_fund_desc)
		from
		    /apps/kardia/data/Kardia_DB/a_fund/rows f
		where
		    :f:a_ledger_number = :this:ledger and
		    :f:a_fund = :this:fund
		";
	}

    period_qy "report/query"
	{
	sql = "select :p:a_period_desc, first_period = min(:p2:a_period), yr = datepart(year, :p:a_start_date) from /apps/kardia/data/Kardia_DB/a_period/rows p, /apps/kardia/data/Kardia_DB/a_period/rows p2 where :p:a_period = :this:end_period and :p:a_ledger_number = :this:ledger and :p2:a_parent_period = :p:a_parent_period and :p2:a_ledger_number = :this:ledger";
	}

    accts_qy "report/query"
	{
	sql = runserver("
		SELECT
			:c:a_bal_fund,
			:c:a_restricted_type,
			ob = :inv_qy:inv * isnull(sum(condition((:t:a_period < :this:ref_period or :t:a_transaction_type == 'B') and :t:a_account_category >= '30', :t:a_amount, $0)), $0),
			iob = :inv_qy:inv * isnull(sum(condition((:t:a_period < :this:ref_period) and (:t:a_account_category == '42' or :t:a_account_category == '52'), :t:a_amount, $0)), $0),
			wob = :inv_qy:inv * isnull(sum(condition((:t:a_period < :this:ref_period) and (:t:a_account_category == '41' or :t:a_account_category == '51'), :t:a_amount, $0)), $0),
			rev = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '40', :t:a_amount, $0)), $0),
			exp = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '50', :t:a_amount, $0)), $0),
			irev = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '42', :t:a_amount, $0)), $0),
			iexp = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '52', :t:a_amount, $0)), $0),
			wrev = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '41', :t:a_amount, $0)), $0),
			wexp = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '51', :t:a_amount, $0)), $0),
			equity = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_transaction_type != 'B' and substring(:t:a_account_category,1,1) == '3', :t:a_amount, $0)), $0),
			trxcnt = isnull(sum(condition(:t:a_amount != $0, 1, 0)), 0),
			showzero = :this:showzero
		FROM
			/apps/kardia/data/Kardia_DB/a_fund/rows c,
			/apps/kardia/data/Kardia_DB/a_transaction/rows t
		WHERE
			:c:a_ledger_number = :this:ledger and
			:t:a_ledger_number =* :c:a_ledger_number and
			:t:a_period <= :this:end_period and
			:t:a_period >= :period_qy:first_period and
			:t:a_fund =* :c:a_fund and
			:t:a_account_category >= '30' and
			(:this:fund is null or :this:fund = :c:a_bal_fund) and
			(:this:cc_class is null or :c:a_fund_class = :this:cc_class)
			" + condition(:this:unposted, "", "and :t:a_posted = 1") + "
		GROUP BY
			:c:a_bal_fund
		HAVING
			:this:showzero or :trxcnt > 0
		");
	sum_irev "report/aggregate" { compute="sum(:irev)"; reset=0; }
	sum_iexp "report/aggregate" { compute="sum(:iexp)"; reset=0; }
	sum_rev "report/aggregate" { compute="sum(:rev)"; reset=0; }
	sum_exp "report/aggregate" { compute="sum(:exp)"; reset=0; }
	sum_wrev "report/aggregate" { compute="sum(:wrev)"; reset=0; }
	sum_wexp "report/aggregate" { compute="sum(:wexp)"; reset=0; }
	sum_ob "report/aggregate" { compute="sum(:ob)"; reset=0; }
	sum_iob "report/aggregate" { compute="sum(:iob)"; reset=0; }
	sum_wob "report/aggregate" { compute="sum(:wob)"; reset=0; }
	sum_equity "report/aggregate" { compute="sum(:equity)"; reset=0; }

	sum_irevt "report/aggregate" { compute="sum(:irev)"; where=":a_restricted_type = 'T'"; reset=0; }
	sum_iexpt "report/aggregate" { compute="sum(:iexp)"; where=":a_restricted_type = 'T'"; reset=0; }
	sum_revt "report/aggregate" { compute="sum(:rev)"; where=":a_restricted_type = 'T'"; reset=0; }
	sum_expt "report/aggregate" { compute="sum(:exp)"; where=":a_restricted_type = 'T'"; reset=0; }
	sum_wrevt "report/aggregate" { compute="sum(:wrev)"; where=":a_restricted_type = 'T'"; reset=0; }
	sum_wexpt "report/aggregate" { compute="sum(:wexp)"; where=":a_restricted_type = 'T'"; reset=0; }
	sum_obt "report/aggregate" { compute="sum(:ob)"; where=":a_restricted_type = 'T'"; reset=0; }
	sum_equityt "report/aggregate" { compute="sum(:equity)"; where=":a_restricted_type = 'T'"; reset=0; }

	sum_irevp "report/aggregate" { compute="sum(:irev)"; where=":a_restricted_type = 'P'"; reset=0; }
	sum_iexpp "report/aggregate" { compute="sum(:iexp)"; where=":a_restricted_type = 'P'"; reset=0; }
	sum_revp "report/aggregate" { compute="sum(:rev)"; where=":a_restricted_type = 'P'"; reset=0; }
	sum_expp "report/aggregate" { compute="sum(:exp)"; where=":a_restricted_type = 'P'"; reset=0; }
	sum_wrevp "report/aggregate" { compute="sum(:wrev)"; where=":a_restricted_type = 'P'"; reset=0; }
	sum_wexpp "report/aggregate" { compute="sum(:wexp)"; where=":a_restricted_type = 'P'"; reset=0; }
	sum_obp "report/aggregate" { compute="sum(:ob)"; where=":a_restricted_type = 'P'"; reset=0; }
	sum_equityp "report/aggregate" { compute="sum(:equity)"; where=":a_restricted_type = 'P'"; reset=0; }

	sum_irevu "report/aggregate" { compute="sum(:irev)"; where=":a_restricted_type = 'N'"; reset=0; }
	sum_iexpu "report/aggregate" { compute="sum(:iexp)"; where=":a_restricted_type = 'N'"; reset=0; }
	sum_revu "report/aggregate" { compute="sum(:rev)"; where=":a_restricted_type = 'N'"; reset=0; }
	sum_expu "report/aggregate" { compute="sum(:exp)"; where=":a_restricted_type = 'N'"; reset=0; }
	sum_wrevu "report/aggregate" { compute="sum(:wrev)"; where=":a_restricted_type = 'N'"; reset=0; }
	sum_wexpu "report/aggregate" { compute="sum(:wexp)"; where=":a_restricted_type = 'N'"; reset=0; }
	sum_obu "report/aggregate" { compute="sum(:ob)"; where=":a_restricted_type = 'N'"; reset=0; }
	sum_equityu "report/aggregate" { compute="sum(:equity)"; where=":a_restricted_type = 'N'"; reset=0; }
	}

    ccinfo_qy "report/query"
	{
	sql = " SELECT
			:c:a_fund_desc,
			subcnt = (select count(1) from /apps/kardia/data/Kardia_DB/a_fund/rows c2 where :c2:a_bal_fund = :c:a_fund and :c2:a_ledger_number = :c:a_ledger_number),
			subclasses = (select count(first(:a_fund_class)) from /apps/kardia/data/Kardia_DB/a_fund/rows c2 where :c2:a_bal_fund = :c:a_fund and :c2:a_ledger_number = :c:a_ledger_number group by :a_fund_class)
		FROM
			/apps/kardia/data/Kardia_DB/a_fund/rows c
		WHERE
			:c:a_fund = :accts_qy:a_bal_fund and
			:c:a_ledger_number = :this:ledger
		";
	}

    subaccts_qy "report/query"
	{
	sql = runserver("
		SELECT
			:c:a_fund,
			:c:a_fund_desc,
			:c:a_restricted_type,
			ob = :inv_qy:inv * isnull(sum(condition((:t:a_period < :this:ref_period or :t:a_transaction_type == 'B') and :t:a_account_category >= '3', :t:a_amount, $0)), $0),
			rev = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '40', :t:a_amount, $0)), $0),
			exp = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '50', :t:a_amount, $0)), $0),
			irev = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '42', :t:a_amount, $0)), $0),
			iexp = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '52', :t:a_amount, $0)), $0),
			wrev = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '41', :t:a_amount, $0)), $0),
			wexp = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_account_category == '51', :t:a_amount, $0)), $0),
			equity = :inv_qy:inv * isnull(sum(condition(:t:a_period >= :this:ref_period and :t:a_transaction_type != 'B' and substring(:t:a_account_category,1,1) == '3', :t:a_amount, $0)), $0),
			trxcnt = isnull(sum(condition(:t:a_amount != $0, 1, 0)), 0),
			showzero = :this:showzero
		FROM
			/apps/kardia/data/Kardia_DB/a_fund/rows c,
			/apps/kardia/data/Kardia_DB/a_transaction/rows t
		WHERE
			isnull(:this:showsubsid, 1) = 1 and
			:c:a_bal_fund = :accts_qy:a_bal_fund and
			:c:a_ledger_number = :this:ledger and
			:t:a_ledger_number =* :c:a_ledger_number and
			:t:a_period <= :this:end_period and
			:t:a_period >= :period_qy:first_period and
			:t:a_fund =* :c:a_fund and
			:t:a_account_category >= '30' and
			(:this:cc_class is null or :c:a_fund_class = :this:cc_class)
			" + condition(:this:unposted, "", "and :t:a_posted = 1") + "
		GROUP BY
			:c:a_fund
		HAVING
			:this:showzero or :trxcnt > 0
		;

		select
			a_fund = :accts_qy:a_bal_fund,
			:accts_qy:a_restricted_type
		where
			isnull(:this:showsubsid, 1) = 0
		");
	}

    ledger_form "report/form"
	{
	source = inv_qy, ledger_qy, class_qy, period_qy, fund_qy;

	rpt_title "report/area"
	    {
	    x=0; width=105; height=3;
	    font=helvetica;
	    align=center;
	    t_d1 "report/data" { value = runserver("Change in Net Assets for " + :ledger_qy:a_ledger_desc + " (" + :ledger_qy:a_ledger_number + ")\n"); }
	    t_d2 "report/data" { value = runserver("For periods " + :this:ref_period + " through " + :this:end_period + "\n"); }
	    t_d3 "report/data" { value = runserver("Requested by " + user_name() + " on " + getdate() + "\n"); }
	    t_d4 "report/data" { condition=runserver(:this:unposted); value = runserver("*** WARNING:  DATA INCLUDES UNPOSTED TRANSACTIONS ***\n"); }
	    }

	rpt_criteria "report/area"
	    {
	    x=0; width=80; height=1;
	    font=helvetica;
	    fontsize=8;
	    c_d0 "report/data" { value = runserver("Year: " + :this:year_period + "\n"); }
	    c_d1 "report/data"
		{ 
		condition = runserver(not (:this:ref_period is null));
		value = runserver("Starting Period: " + :this:ref_period + "\n"); 
		}
	    c_d2 "report/data"
		{ 
		condition = runserver(not (:this:end_period is null));
		value = runserver("Ending Period: " + :this:end_period + "\n"); 
		}
	    c_d3 "report/data"
		{ 
		condition = runserver(not (:this:cc_class is null));
		value = runserver("Fund Class: " + :this:cc_class + " (" + :class_qy:descrip + ")\n"); 
		}
	    c_d4 "report/data"
		{ 
		condition = runserver(not (:this:fund is null));
		value = runserver("Fund: " + :this:fund + " (" + :fund_qy:a_fund_desc + ")\n"); 
		}
	    c_d5 "report/data"
		{ 
		condition = runserver(:this:invert);
		value = runserver("Report in Executive Format\n"); 
		}
	    c_d6 "report/data"
		{ 
		condition = runserver(not :this:showzero);
		value = runserver("Not displaying funds with zero balance and no transactions\n"); 
		}
	    }

	ie_table "report/table"
	    {
	    x=0; width=105; height=0;
	    columns=13;
	    widths=5.8,1,13.4,8,8,8,8,8,8,8,8,8,8;
	    colsep=0.4;
	    source=accts_qy, ccinfo_qy, subaccts_qy;
	    topborder=0.3;
	    bottomborder=0.3;
	    nullformat="-";
	    moneyformat = "Z###,###,###.00-";

	    ie_tbl_hdr2 "report/table-row"
		{
		font=helvetica;
		fontsize=7;
		header=yes;
		h_cc "report/table-cell" { value=''; align=left; style=bold; }
		h_rest "report/table-cell" { value=''; align=left; style=bold; }
		h_desc "report/table-cell" { value=''; align=left; style=bold; }
		h_bbal "report/table-cell" { value=runserver(''); align=right; style=bold; }
		h_rev "report/table-cell" { value='-- Revenue --'; align=center; style=bold; colspan=3; }
		h_exp "report/table-cell" { value='-- Expense --'; align=center; style=bold; colspan=3; }
		h_eq "report/table-cell" { value=''; align=right; style=bold; }
		h_chg "report/table-cell" { value=''; align=right; style=bold; }
		h_cur "report/table-cell" { value=runserver(''); align=right; style=bold; }
		}
	    ie_tbl_hdr "report/table-row"
		{
		font=helvetica;
		fontsize=7;
		header=yes;
		bottomborder=0.05;
		h_cc "report/table-cell" { value='Fund'; align=left; style=bold; }
		h_rest "report/table-cell" { value='R'; align=left; style=bold; }
		h_desc "report/table-cell" { value='Description'; align=left; style=bold; }
		h_bbal "report/table-cell" { value=runserver('Begin ' + :this:ref_period); align=right; style=bold; }
		h_rev "report/table-cell" { value='Revenue'; align=right; style=bold; }
		h_irev "report/table-cell" { value='IF Revenue'; align=right; style=bold; }
		h_wrev "report/table-cell" { value='WF Revenue'; align=right; style=bold; }
		h_exp "report/table-cell" { value='Expense'; align=right; style=bold; }
		h_iexp "report/table-cell" { value='IF Expense'; align=right; style=bold; }
		h_wexp "report/table-cell" { value='WF Expense'; align=right; style=bold; }
		h_eq "report/table-cell" { value='Equity Adj'; align=right; style=bold; }
		h_chg "report/table-cell" { value='Total Change'; align=right; style=bold; }
		h_cur "report/table-cell" { value=runserver('End ' + :this:end_period); align=right; style=bold; }
		}

	    ie_tbl_row "report/table-row"
		{
		condition=runserver(:subaccts_qy:cx__rowid == 0);
		font=courier;
		fontsize=7;
		marginbottom=0.0;
		margintop=0.5;
		style=bold;
		d_cc "report/table-cell" { value=runserver(condition(:ccinfo_qy:subclasses > 1 and :this:cc_class is not null, '(partial)', :accts_qy:a_bal_fund)); align=left; font=helvetica; }
		d_rest "report/table-cell" { value=runserver(:accts_qy:a_restricted_type); align=left; font=helvetica; }
		d_desc "report/table-cell" { value=runserver(:ccinfo_qy:a_fund_desc); align=left; font=helvetica; }
		d_bbal "report/table-cell" { value=runserver(:accts_qy:ob); align=right; }
		d_rev "report/table-cell" { value=runserver(:accts_qy:rev); align=right; }
		d_irev "report/table-cell" { value=runserver(:accts_qy:irev); align=right; }
		d_wrev "report/table-cell" { value=runserver(:accts_qy:wrev); align=right; }
		d_exp "report/table-cell" { value=runserver(:accts_qy:exp); align=right; }
		d_iexp "report/table-cell" { value=runserver(:accts_qy:iexp); align=right; }
		d_wexp "report/table-cell" { value=runserver(:accts_qy:wexp); align=right; }
		d_eq "report/table-cell" { value=runserver(:accts_qy:equity); align=right; }
		d_chg "report/table-cell" { value=runserver(:accts_qy:rev + :accts_qy:irev + :accts_qy:wrev + :accts_qy:exp + :accts_qy:iexp + :accts_qy:wexp + :accts_qy:equity); align=right; }
		d_cur "report/table-cell" { value=runserver(:accts_qy:ob + :accts_qy:rev + :accts_qy:irev + :accts_qy:wrev + :accts_qy:exp + :accts_qy:iexp + :accts_qy:wexp + :accts_qy:equity); align=right; }
		}

	    sub_tbl_row "report/table-row"
		{
		condition=runserver(:ccinfo_qy:subcnt > 1 and :this:showsubsid);
		font=courier;
		fontsize=7;
		marginbottom=0.0;
		d2_cc "report/table-cell" { value=runserver("  " + :subaccts_qy:a_fund); align=left; font=helvetica; }
		d2_rest "report/table-cell" { value=runserver(:subaccts_qy:a_restricted_type); align=left; font=helvetica; }
		d2_desc "report/table-cell" { value=runserver(:subaccts_qy:a_fund_desc); align=left; font=helvetica; }
		d2_bbal "report/table-cell" { value=runserver(:subaccts_qy:ob); align=right; }
		d2_rev "report/table-cell" { value=runserver(:subaccts_qy:rev); align=right; }
		d2_irev "report/table-cell" { value=runserver(:subaccts_qy:irev); align=right; }
		d2_wrev "report/table-cell" { value=runserver(:subaccts_qy:wrev); align=right; }
		d2_exp "report/table-cell" { value=runserver(:subaccts_qy:exp); align=right; }
		d2_iexp "report/table-cell" { value=runserver(:subaccts_qy:iexp); align=right; }
		d2_wexp "report/table-cell" { value=runserver(:subaccts_qy:wexp); align=right; }
		d2_eq "report/table-cell" { value=runserver(:subaccts_qy:equity); align=right; }
		d2_chg "report/table-cell" { value=runserver(:subaccts_qy:rev + :subaccts_qy:irev + :subaccts_qy:wrev + :subaccts_qy:exp + :subaccts_qy:iexp + :subaccts_qy:wexp + :subaccts_qy:equity); align=right; }
		d2_cur "report/table-cell" { value=runserver(:subaccts_qy:ob + :subaccts_qy:rev + :subaccts_qy:irev + :subaccts_qy:wrev + :subaccts_qy:exp + :subaccts_qy:iexp + :subaccts_qy:wexp + :subaccts_qy:equity); align=right; }
		}

	    unsum_row "report/table-row"
		{
		summary = yes;
		font=courier;
		style=bold;
		fontsize=7;
		marginbottom=0.0;
		margintop=0.2;
		topborder=0.1;
		s_cc "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_rest "report/table-cell" { value=runserver("N"); align=left; font=helvetica; }
		s_desc "report/table-cell" { value=runserver("Not restricted:"); align=left; font=helvetica; }
		s_bbal "report/table-cell" { value=runserver(:accts_qy:sum_obu); align=right; }
		s_rev "report/table-cell" { value=runserver(:accts_qy:sum_revu); align=right; }
		s_irev "report/table-cell" { value=runserver(:accts_qy:sum_irevu); align=right; }
		s_wrev "report/table-cell" { value=runserver(:accts_qy:sum_wrevu); align=right; }
		s_exp "report/table-cell" { value=runserver(:accts_qy:sum_expu); align=right; }
		s_iexp "report/table-cell" { value=runserver(:accts_qy:sum_iexpu); align=right; }
		s_wexp "report/table-cell" { value=runserver(:accts_qy:sum_wexpu); align=right; }
		s_eq "report/table-cell" { value=runserver(:accts_qy:sum_equityu); align=right; }
		s_chg "report/table-cell" { value=runserver(:accts_qy:sum_revu + :accts_qy:sum_irevu + :accts_qy:sum_wrevu + :accts_qy:sum_expu + :accts_qy:sum_iexpu + :accts_qy:sum_wexpu + :accts_qy:sum_equityu); align=right; }
		s_cur "report/table-cell" { value=runserver(:accts_qy:sum_obu + :accts_qy:sum_revu + :accts_qy:sum_irevu + :accts_qy:sum_wrevu + :accts_qy:sum_expu + :accts_qy:sum_iexpu + :accts_qy:sum_wexpu + :accts_qy:sum_equityu); align=right; }
		}

	    trsum_row "report/table-row"
		{
		summary = yes;
		font=courier;
		style=bold;
		fontsize=7;
		marginbottom=0.0;
		margintop=0.2;
		s_cc "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_rest "report/table-cell" { value=runserver("T"); align=left; font=helvetica; }
		s_desc "report/table-cell" { value=runserver("Temporarily Restricted:"); align=left; font=helvetica; }
		s_bbal "report/table-cell" { value=runserver(:accts_qy:sum_obt); align=right; }
		s_rev "report/table-cell" { value=runserver(:accts_qy:sum_revt); align=right; }
		s_irev "report/table-cell" { value=runserver(:accts_qy:sum_irevt); align=right; }
		s_wrev "report/table-cell" { value=runserver(:accts_qy:sum_wrevt); align=right; }
		s_exp "report/table-cell" { value=runserver(:accts_qy:sum_expt); align=right; }
		s_iexp "report/table-cell" { value=runserver(:accts_qy:sum_iexpt); align=right; }
		s_wexp "report/table-cell" { value=runserver(:accts_qy:sum_wexpt); align=right; }
		s_eq "report/table-cell" { value=runserver(:accts_qy:sum_equityt); align=right; }
		s_chg "report/table-cell" { value=runserver(:accts_qy:sum_revt + :accts_qy:sum_irevt + :accts_qy:sum_wrevt + :accts_qy:sum_expt + :accts_qy:sum_iexpt + :accts_qy:sum_wexpt + :accts_qy:sum_equityt); align=right; }
		s_cur "report/table-cell" { value=runserver(:accts_qy:sum_obt + :accts_qy:sum_revt + :accts_qy:sum_irevt + :accts_qy:sum_wrevt + :accts_qy:sum_expt + :accts_qy:sum_iexpt + :accts_qy:sum_wexpt + :accts_qy:sum_equityt); align=right; }
		}

	    prsum_row "report/table-row"
		{
		summary = yes;
		font=courier;
		style=bold;
		fontsize=7;
		marginbottom=0.0;
		margintop=0.2;
		s_cc "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_rest "report/table-cell" { value=runserver("P"); align=left; font=helvetica; }
		s_desc "report/table-cell" { value=runserver("Permanently Restricted:"); align=left; font=helvetica; }
		s_bbal "report/table-cell" { value=runserver(:accts_qy:sum_obp); align=right; }
		s_rev "report/table-cell" { value=runserver(:accts_qy:sum_revp); align=right; }
		s_irev "report/table-cell" { value=runserver(:accts_qy:sum_irevp); align=right; }
		s_wrev "report/table-cell" { value=runserver(:accts_qy:sum_wrevp); align=right; }
		s_exp "report/table-cell" { value=runserver(:accts_qy:sum_expp); align=right; }
		s_iexp "report/table-cell" { value=runserver(:accts_qy:sum_iexpp); align=right; }
		s_wexp "report/table-cell" { value=runserver(:accts_qy:sum_wexpp); align=right; }
		s_eq "report/table-cell" { value=runserver(:accts_qy:sum_equityp); align=right; }
		s_chg "report/table-cell" { value=runserver(:accts_qy:sum_revp + :accts_qy:sum_irevp + :accts_qy:sum_wrevp + :accts_qy:sum_expp + :accts_qy:sum_iexpp + :accts_qy:sum_wexpp + :accts_qy:sum_equityp); align=right; }
		s_cur "report/table-cell" { value=runserver(:accts_qy:sum_obp + :accts_qy:sum_revp + :accts_qy:sum_irevp + :accts_qy:sum_wrevp + :accts_qy:sum_expp + :accts_qy:sum_iexpp + :accts_qy:sum_wexpp + :accts_qy:sum_equityp); align=right; }
		}

	    orgsum_row "report/table-row"
		{
		summary = yes;
		font=courier;
		style=bold;
		fontsize=7;
		marginbottom=0.0;
		margintop=0.2;
		topborder=0.1;
		s_cc "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_rest "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_desc "report/table-cell" { value=runserver("TOTALS:"); align=left; font=helvetica; }
		s_bbal "report/table-cell" { value=runserver(:accts_qy:sum_ob); align=right; }
		s_rev "report/table-cell" { value=runserver(:accts_qy:sum_rev); align=right; }
		s_irev "report/table-cell" { value=runserver(:accts_qy:sum_irev); align=right; }
		s_wrev "report/table-cell" { value=runserver(:accts_qy:sum_wrev); align=right; }
		s_exp "report/table-cell" { value=runserver(:accts_qy:sum_exp); align=right; }
		s_iexp "report/table-cell" { value=runserver(:accts_qy:sum_iexp); align=right; }
		s_wexp "report/table-cell" { value=runserver(:accts_qy:sum_wexp); align=right; }
		s_eq "report/table-cell" { value=runserver(:accts_qy:sum_equity); align=right; }
		s_chg "report/table-cell" { value=runserver(:accts_qy:sum_rev + :accts_qy:sum_irev + :accts_qy:sum_wrev + :accts_qy:sum_exp + :accts_qy:sum_iexp + :accts_qy:sum_wexp + :accts_qy:sum_equity); align=right; }
		s_cur "report/table-cell" { value=runserver(:accts_qy:sum_ob + :accts_qy:sum_rev + :accts_qy:sum_irev + :accts_qy:sum_wrev + :accts_qy:sum_exp + :accts_qy:sum_iexp + :accts_qy:sum_wexp + :accts_qy:sum_equity); align=right; }
		}

	    ifsum_row "report/table-row"
		{
		summary = yes;
		font=courier;
		style=bold;
		fontsize=7;
		marginbottom=0.0;
		margintop=0.2;
		s_cc "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_rest "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_desc "report/table-cell" { value=runserver("Interfund Rev/Exp Bal.:"); align=left; font=helvetica; }
		s_bbal "report/table-cell" { value=runserver(:accts_qy:sum_iob); align=right; }
		s_rev "report/table-cell" { value=runserver(''); align=right; }
		s_irev "report/table-cell" { value=runserver(:accts_qy:sum_irev); align=right; }
		s_wrev "report/table-cell" { value=runserver(''); align=right; }
		s_exp "report/table-cell" { value=runserver(''); align=right; }
		s_iexp "report/table-cell" { value=runserver(:accts_qy:sum_iexp); align=right; }
		s_wexp "report/table-cell" { value=runserver(''); align=right; }
		s_eq "report/table-cell" { value=runserver(''); align=right; }
		s_chg "report/table-cell" { value=runserver(:accts_qy:sum_irev + :accts_qy:sum_iexp); align=right; }
		s_cur "report/table-cell" { value=runserver(:accts_qy:sum_iob + :accts_qy:sum_irev + :accts_qy:sum_iexp); align=right; }
		}
	    wfsum_row "report/table-row"
		{
		summary = yes;
		font=courier;
		style=bold;
		fontsize=7;
		marginbottom=0.0;
		margintop=0.2;
		s_cc "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_rest "report/table-cell" { value=runserver(""); align=left; font=helvetica; }
		s_desc "report/table-cell" { value=runserver("Within-fund Rev/Exp Bal.:"); align=left; font=helvetica; }
		s_bbal "report/table-cell" { value=runserver(:accts_qy:sum_wob); align=right; }
		s_rev "report/table-cell" { value=runserver(''); align=right; }
		s_irev "report/table-cell" { value=runserver(''); align=right; }
		s_wrev "report/table-cell" { value=runserver(:accts_qy:sum_wrev); align=right; }
		s_exp "report/table-cell" { value=runserver(''); align=right; }
		s_iexp "report/table-cell" { value=runserver(''); align=right; }
		s_wexp "report/table-cell" { value=runserver(:accts_qy:sum_wexp); align=right; }
		s_eq "report/table-cell" { value=runserver(''); align=right; }
		s_chg "report/table-cell" { value=runserver(:accts_qy:sum_wrev + :accts_qy:sum_wexp); align=right; }
		s_cur "report/table-cell" { value=runserver(:accts_qy:sum_wob + :accts_qy:sum_wrev + :accts_qy:sum_wexp); align=right; }
		}
	    }
	}
    }
