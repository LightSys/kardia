$Version=2$
batches "widget/component-decl"
    {
    width=780;
    height=542;

    ledger "widget/parameter" { type=string; default=null; deploy_to_client=yes; }
    year_period "widget/parameter" { type=string; default=null; deploy_to_client=yes; }
    periods_osrc "widget/parameter" { type=object; default=null; }

    Refresh "widget/component-decl-action"
	{
	on_refresh_general "widget/connector"
	    {
	    //event_condition=runclient(:Batch is null or :batch_osrc:a_batch_number != :Batch);
	    target=batch_osrc;
	    action=Refresh;
	    }
	on_refresh_batch "widget/connector"
	    {
	    condition=0;
	    event_condition=runclient(:Batch is not null and :batch_osrc:a_batch_number = :Batch);
	    target=batch_osrc;
	    action=RefreshObject;
	    }
	}

    // Tab control for managing different batch types
    batches_tab "widget/tab"
	{
	x=0;y=0;width=780;height=518;
	background="/apps/kardia/images/bg/light_bgnd2.jpg";
	inactive_background="/apps/kardia/images/bg/light_bgnd3.jpg";

	gl_batches "widget/tabpage"
	    {
	    title = "General Ledger";

	    show_only_je "widget/component"
		{
		x=10; y=10; width=400; height=20;
		path="/sys/cmp/smart_field.cmp";
		ctl_type="checkboxleft";
		text="Show only Manual Journal Entry Batches";

		cb_hints "widget/hints" { style=notnull; }

		update_batches "widget/connector"
		    {
		    event=DataChange;
		    target=batch_osrc;
		    action=QueryParam;
		    }
		}

	    batch_osrc "widget/osrc"
		{
		only_je "widget/parameter" { type=integer; default=runclient(:show_only_je:value); }

		sql = runserver("
			SELECT
				:b:a_ledger_number,
				:b:a_batch_number, 
				:b:a_batch_desc, 
				:b:a_default_effective_date,
				batch_txt = '' + :a_batch_number + ' - ' + :a_batch_desc,
				date_txt = substring(convert(string,:a_default_effective_date),1,11),
				:b:s_date_created,
				:b:s_created_by,
				:b:s_date_modified,
				:b:s_modified_by,
				:b:a_period,
				:b:a_origin,
				glpost = (select 1 from /apps/kardia/data/Kardia_DB/a_transaction/rows t where :t:a_batch_number = :b:a_batch_number and :t:a_ledger_number = :b:a_ledger_number and :t:a_posted = 1 limit 1),
				glrec = (select 1 from /apps/kardia/data/Kardia_DB/a_transaction/rows t where :t:a_batch_number = :b:a_batch_number and :t:a_ledger_number = :b:a_ledger_number limit 1)
			FROM 
				/apps/kardia/data/Kardia_DB/a_batch/rows b
			WHERE
				:parameters:only_je = 0 or :b:a_origin = 'GL'
			ORDER BY
				:b:a_batch_number");
		baseobj = "/apps/kardia/data/Kardia_DB/a_batch/rows";
		replicasize=200;
		readahead=200;
		autoquery=never;
		indicates_activity = no;

		period_sync "widget/rule"
		    {
		    ruletype = "osrc_relationship";
		    target = periods_osrc;
		    is_slave = yes;
		    key_1 = a_ledger_number;
		    target_key_1 = a_ledger_number;
		    key_2 = a_period;
		    target_key_2 = a_period;
		    autoquery = true;
		    }

		new_batch_window "widget/childwindow"
		    {
		    style=dialog;
		    titlebar=no;
		    modal=yes;
		    toplevel=yes;
		    width=480; height=300;
		    x=150; y=121;
		    visible=no;

		    new_batch_form "widget/form"
			{
			new_batch_cmp "widget/component"
			    {
			    x=0;y=0;width=478;height=298;
			    border_radius=8;
			    path="/apps/kardia/modules/gl/generic_editbatch.cmp";
			    ledger=runserver(:this:ledger);
			    periods_osrc = periods_osrc;
			    title = "GL Journal Entry";
			    origin = "GL";
			    new_batch_window = new_batch_window;
			    new_batch_form = new_batch_form;
			    allow_effdate = 1;
			    }
			}
		    }

		copy_batch_window "widget/childwindow"
		    {
		    style=dialog;
		    border_radius=8;
		    titlebar=no;
		    modal=yes;
		    toplevel=yes;
		    width=480; height=240;
		    x=150; y=150;
		    visible=no;

		    copy_batch_osrc "widget/osrc"
			{
			autoquery=never;
			sql = "select '' where 0 = 1";

			copy_batch_form "widget/form"
			    {
			    allow_new = yes;
			    allow_query = no;

			    copy_batch_cmp "widget/component"
				{
				x=0; y=0; width=480; height=240;
				path="/apps/kardia/modules/gl/generic_copy_batch.cmp";
				batch_type="GL";
				desc_sql="select '' + count(1) + ' transaction' + condition(count(1) == 1, '', 's') from /apps/kardia/data/Kardia_DB/a_transaction/rows t where :t:a_ledger_number = :b:a_ledger_number and :t:a_batch_number = :b:a_batch_number";
				copy_query="/apps/kardia/modules/gl/copy_gl_batch.qy";
				ledger=runserver(:this:ledger);
				batch_osrc=batch_osrc;

				do_copy_done "widget/connector" { event=Copied; target=batch_osrc; action=RefreshObject; }
				}
			    }
			}
		    }

		batch_tbl_pane "widget/pane"
		    {
		    x=10;y=40; width=580;height=468;
		    widget_class = "table_bgnd";

		    batch_tbl "widget/table"
			{
			x=0;y=0;width=578;height=466;
			mode=dynamicrow;

			t_bat "widget/table-column" { title="Batch"; fieldname="a_batch_number"; width=55; }
			t_origin "widget/table-column" { title="Origin"; fieldname="a_origin"; width=45; }
			t_desc "widget/table-column" { title="Description"; fieldname="a_batch_desc"; width=150; }
			t_dt "widget/table-column" { title="Eff. Date"; fieldname="date_txt"; width=75; }
			t_user "widget/table-column" { title="User"; fieldname="s_created_by"; width=50; }
			t_rcnt "widget/table-column" { title="Recs?"; fieldname="glrec"; width=40; type=check; }
			t_rpost "widget/table-column" { title="Post?"; fieldname="glpost"; width=40; type=check; }
			}
		    }

		btn_vbox "widget/vbox"
		    {
		    x = 598; y=10; width=172; height=498;
		    spacing=8;
		    cellsize=40;

		    new_batch "widget/textbutton"
			{
			width = 172;
			height = 40;
			text = "New Batch";
			enabled = runclient(:new_batch_form:is_newable and :periods_osrc:a_status == 'O');

			new_cn "widget/connector" { event=Click; target=new_batch_form; action=New; }
			}
		    edit_details "widget/textbutton"
			{
			width = 172;
			height = 40;
			text = "Edit Batch Details";
			enabled = runclient(:new_batch_form:is_editable and :periods_osrc:a_status == 'O');

			detail_cn "widget/connector" { event=Click; target=new_batch_form; action=Edit; }
			}
		    edit_trx "widget/textbutton"
			{
			width = 172;
			height = 40;
			text = runclient(condition(:batch_osrc:glpost == 1, "View", "Make/Edit") + " Journal Entries");
			//enabled = runclient(:new_batch_form:is_editable and :periods_osrc:a_status == 'O');

			edit_cn "widget/connector"
			    {
			    event=Click;
			    target=batches;
			    action=Launch;
			    Source = runclient("/apps/kardia/modules/gl/journal_entry.app");
			    Multi = 1;
			    Width=800;
			    Height=600;
			    ledger=runclient(:batch_osrc:a_ledger_number);
			    batch=runclient(:batch_osrc:a_batch_number);
			    send_refresh=batches;
			    }
			}
		    copy_trx "widget/textbutton"
			{
			width = 172;
			height = 40;
			text = "Copy Journal Entries";
			enabled = runclient(:new_batch_form:is_editable and not (:new_batch_form:glpost == 1) and :periods_osrc:a_status == 'O' and :batch_osrc:a_origin = 'GL');

			copy_cn "widget/connector" { event=Click; target=copy_batch_form; action=Edit; }
			}

		    sep_line4 "widget/pane" { height=2; fl_height=0; style=lowered; }
		    posting_lbl "widget/label" { height=15; text="Posting"; align=center; style=bold; }
		    post_batch "widget/textbutton"
			{
			width = 172;
			height = 40;
			text = runclient(condition(not (:new_batch_form:glpost == 1) or :new_batch_form:a_origin != 'GL', "Post Batch", "Request Un-Posting"));
			enabled = runclient(:new_batch_form:glrec > 0 and :new_batch_form:is_editable and :new_batch_form:a_origin = 'GL');

			post_batch_cn "widget/connector"
			    {
			    event = Click;
			    event_condition = runclient(not (:new_batch_form:glpost == 1) and :new_batch_form:glrec > 0 and :new_batch_form:is_editable);
			    target = batches;
			    action = Launch;
			    Source = runclient("/apps/kardia/modules/gl/new_post_batch.app");
			    Multi = 1;
			    Width=800;
			    Height=600;
			    ledger=runclient(:batch_osrc:a_ledger_number);
			    batch=runclient(:batch_osrc:a_batch_number);
			    send_refresh=batches;
			    }

			unpost_batch_cn "widget/connector"
			    {
			    event = Click;
			    event_condition = runclient((:new_batch_form:glpost == 1) and :new_batch_form:glrec > 0 and :new_batch_form:is_editable);
			    target=unpostgl_win;
			    action=Open;
			    IsModal=1;
			    }
			}

		    sep_line3 "widget/pane" { height=2; fl_height=0; style=lowered; }
		    reporting_lbl "widget/label" { height=15; text="Reports and Printing"; align=center; style=bold; }
		    print_batch "widget/textbutton"
			{
			width = 172;
			height = 40;
			text = "Transaction Report";
			enabled = runclient(:new_batch_form:is_editable and :new_batch_form:glrec == 1);

			doprintbatch_cn "widget/connector"
			    {
			    event=Click;
			    target = batches;
			    action= Launch;
			    Source = runclient("/apps/kardia/modules/gl/transaction_report.rpt");
			    Multi = 1;
			    Width = 800;
			    Height = 600;
			    ledger = runclient(:batch_osrc:a_ledger_number);
			    batch = runclient(:batch_osrc:a_batch_number);
			    year_period = runclient(:periods_osrc:a_parent_period);
			    unposted = 1;
			    }
			}
		    batch_summary "widget/textbutton"
			{
			width = 172;
			height = 40;
			text = "Batch Summary";
			enabled = runclient(:new_batch_form:is_editable and :new_batch_form:glrec == 1);

			dobatchsummary_cn "widget/connector"
			    {
			    event=Click;
			    target = batches;
			    action= Launch;
			    Multi = 1;
			    Source = runclient("/apps/kardia/modules/gl/batch_balance.rpt");
			    Width = 800;
			    Height = 600;
			    ledger = runclient(:batch_osrc:a_ledger_number);
			    batch = runclient(:batch_osrc:a_batch_number);
			    }
			}
		    }
		}
	    }
	plugin_tabs "widget/repeat"
	    {
	    sql = "select path = :cx__pathname, module = :cx__pathpart4, component = :cx__pathpart5, :title from object wildcard '/apps/kardia/modules/*/plugin_gl_batch_*.cmp'";

	    plugin_tab "widget/tabpage"
		{
		title = runserver(:plugin_tabs:title);

		plugin_cmp "widget/component"
		    {
		    height=496; width=758; x=10; y=10;
		    path = runserver(:plugin_tabs:path);
		    periods_osrc = periods_osrc;
		    ledger = runserver(:this:ledger);
		    }
		}
	    }
	}

    unpost_req_cmp "widget/component"
	{
	path = "/apps/kardia/modules/gl/unpost_req_gl.cmp";
	}

    unpostgl_win "widget/childwindow"
	{
	style=dialog;
	titlebar=no;
	toplevel=yes;
	width=480; height=232;
	x=150; y=174;
	visible=no;
	border_radius=8;

	unpost_vbox "widget/vbox"
	    {
	    width=458; height=152; x=10; y=10;
	    spacing=10;

	    unpost_lbl "widget/label" { height=24; font_size=16; value=runclient("Request Unposting of Batch " + :batch_osrc:a_batch_number + ":"); align=center; style=bold; }
	    unpost_sep "widget/pane" { height=2; style=lowered; }
	    //sp4 "widget/autolayoutspacer" { height=8; }

	    unpost_desc "widget/label" { height=50; style=italic; text="Unposting a batch is a privileged operation; you can request here that this batch be unposted, but another user who also has GL management privileges will need to approve the request"; }

	    unpost_comment "widget/component" { height=50; path="/sys/cmp/smart_field.cmp"; ctl_type=textarea; text="Comments:"; }

	    sp4 "widget/autolayoutspacer" { height=2; }

	    unpost_btns "widget/hbox"
		{
		height=24;
		spacing=8;
		align=center;

		unpost_req "widget/textbutton"
		    {
		    height=24; width=150;
		    text="Request Unposting";

		    on_unpost_request_1 "widget/connector" { event=Click; target=unpost_req_cmp; action=RequestUnposting; ledger=runclient(:ledger:value); batch=runclient(:batch_osrc:a_batch_number); comment=runclient(:unpost_comment:value); }
		    on_unpost_request_2 "widget/connector" { event=Click; target=unpostgl_win; action=Close; }
		    }

		unpost_cancel "widget/textbutton"
		    {
		    height=24; width=150;
		    text="Cancel";

		    on_unpost_cancel "widget/connector" { event=Click; target=unpostgl_win; action=Close; }
		    }
		}
	    }
	}
    }
